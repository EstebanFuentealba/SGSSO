<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional-dtd">
<!-- saved from url=(0095)http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head id="ctl00_ctl00"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta name="description" content="ASP.NET, Visual Studio, ASP.NET 2.0, .NET ">
<meta name="keywords" content="ASP.NET, Visual Studio, ASP.NET 2.0, .NET ">
<meta name="GENERATOR" content="CommunityServer 2007 SP1 (Build: 20510.895)">
<link rel="pingback" href="http://weblogs.asp.net/scottgu/pingback.aspx">
<link rel="shortcut icon" type="image/ico" href="http://weblogs.asp.net/favicon.ico">
<link rel="alternate" type="application/rss+xml" title="ScottGu&#39;s Blog  (RSS 2.0)" href="http://weblogs.asp.net/scottgu/rss.aspx">
<link rel="alternate" type="application/atom+xml" title="ScottGu&#39;s Blog  (Atom 1.0)" href="http://weblogs.asp.net/scottgu/atom.aspx">
<link rel="alternate" type="application/rss+xml" title="ScottGu&#39;s Blog  - All Comments (RSS 2.0)" href="http://weblogs.asp.net/scottgu/rsscomments.aspx">
<link rel="alternate" type="application/rss+xml" title="LINQ to SQL (Part 4 - Updating our Database) - Comments for this post (RSS 2.0)" href="http://weblogs.asp.net/scottgu/rsscomments.aspx?PostID=3106224">

	
	<meta http-equiv="X-UA-Compatible" content="IE=7">
	<link rel="stylesheet" href="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/style.css" type="text/css" media="screen">
	<link rel="stylesheet" href="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/print.css" type="text/css" media="print">
	<link rel="stylesheet" href="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/DynamicStyle.aspx" type="text/css" media="screen">
	<!--[if lte IE 6]>
		<style>
		#titleWrapper { padding: 62px 65px 14px 14px; border-bottom: solid 1px #000; border-right: solid 1px #000;}
		</style>
	<![endif]-->
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://weblogs.asp.net/scottgu/rsd.ashx">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" title="WLWManifest" href="http://weblogs.asp.net/scottgu/wlwmanifest.ashx">
<title>
	LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog
</title></head>
<body>
    <form name="aspnetForm" method="post" action="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog.htm" id="aspnetForm">
<div>
<input type="hidden" name="__EVENTTARGET" id="__EVENTTARGET" value="">
<input type="hidden" name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="">
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwULLTE3MDQ0Njc3MDNkZGGxIdN4f8DDhPlg2TGLA9S0FlHm">
</div>

<script type="text/javascript">
//<![CDATA[
var theForm = document.forms['aspnetForm'];
if (!theForm) {
    theForm = document.aspnetForm;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
//]]>
</script>


<script src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/WebResource.axd" type="text/javascript"></script>


<script src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/WebResource(1).axd" type="text/javascript"></script>
<script src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/WebResource(2).axd" type="text/javascript"></script>
<script src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/WebResource(3).axd" type="text/javascript"></script>
<script src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/WebResource(4).axd" type="text/javascript"></script>
<script src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/WebResource(5).axd" type="text/javascript"></script>
    			

        <div id="wrapper">
            <div id="container">
                <div id="header">
		            <div id="titleWrapper">
		            	<div id="title">
	                        <h1><a class="headermaintitle" href="http://weblogs.asp.net/scottgu/default.aspx">ScottGu's Blog </a></h1>
	                        <div>Scott Guthrie lives in Seattle and builds a few products for Microsoft</div>
	                    </div>
                    </div> 
                </div>
                <div id="navigation">
        	        <div id="welcome">
				        
        <a href="http://weblogs.asp.net/login.aspx?ReturnUrl=%2fscottgu%2farchive%2f2007%2f07%2f11%2flinq-to-sql-part-4-updating-our-database.aspx">Sign in </a>
         | <a href="http://weblogs.asp.net/user/CreateUser.aspx?ReturnUrl=">Join</a>
     


		        	</div>
                	<ul>
                		<li><a href="http://weblogs.asp.net/scottgu/default.aspx">Home</a></li>
			            
			            <li><a href="http://weblogs.asp.net/scottgu/about.aspx">About</a></li>
			            <li><a href="http://weblogs.asp.net/scottgu/rss.aspx">RSS</a></li>
			            <li><a href="http://weblogs.asp.net/scottgu/atom.aspx">Atom</a></li>
		                <li id="RssComments"><a href="http://weblogs.asp.net/scottgu/rsscomments.aspx">Comments RSS</a></li>
			            
                	</ul>
                </div>
                <div id="contentwrapper">                    
                        
                
                    <div id="sidebar-a">
                        <div id="TasksSideBar">    
                            
                            
                        </div>                                
                        <div id="SubscriptionsSideBar">
			                    
                        </div>
                        <div id="SearchSideBar">
                            <div id="Search">
                                <h3>Search</h3>
                                <ul>
                                <div id="Search" align="left">
                                            <li><input name="ctl00$SideBar$ctl02$ctl00$SearchBox" type="text" id="ctl00_SideBar_ctl02_ctl00_SearchBox" class="searchBox" button="SearchButton" onclick="if(this.defaultValue==this.value) this.value=&#39;&#39;;" onblur="if(this.value==&#39;&#39;) this.value=this.defaultValue;"> <input type="submit" name="ctl00$SideBar$ctl02$ctl00$SearchButton" value="Go" id="ctl00_SideBar_ctl02_ctl00_SearchButton" class="SearchButton"></li>
                                    </div>
                                </ul>
                            </div>
                         </div>
            		        
                        
                        <div id="TagSideBar">
                                <h3>Tags</h3>
                            <ul class="SidebarTagCloud">
<li class="Tag1"><a href="http://weblogs.asp.net/scottgu/archive/tags/.NET/default.aspx" rel="tag">.NET</a></li>
<li class="Tag5"><a href="http://weblogs.asp.net/scottgu/archive/tags/Ajax/default.aspx" rel="tag">Ajax</a></li>
<li class="Tag1"><a href="http://weblogs.asp.net/scottgu/archive/tags/ASP.NET/default.aspx" rel="tag">ASP.NET</a></li>
<li class="Tag2"><a href="http://weblogs.asp.net/scottgu/archive/tags/Atlas/default.aspx" rel="tag">Atlas</a></li>
<li class="Tag6"><a href="http://weblogs.asp.net/scottgu/archive/tags/Azure/default.aspx" rel="tag">Azure</a></li>
<li class="Tag6"><a href="http://weblogs.asp.net/scottgu/archive/tags/Commerce+Server/default.aspx" rel="tag">Commerce Server</a></li>
<li class="Tag1"><a href="http://weblogs.asp.net/scottgu/archive/tags/Community+News/default.aspx" rel="tag">Community News</a></li>
<li class="Tag3"><a href="http://weblogs.asp.net/scottgu/archive/tags/Data/default.aspx" rel="tag">Data</a></li>
<li class="Tag3"><a href="http://weblogs.asp.net/scottgu/archive/tags/IIS7/default.aspx" rel="tag">IIS7</a></li>
<li class="Tag5"><a href="http://weblogs.asp.net/scottgu/archive/tags/jQuery/default.aspx" rel="tag">jQuery</a></li>
<li class="Tag4"><a href="http://weblogs.asp.net/scottgu/archive/tags/Link+Listing/default.aspx" rel="tag">Link Listing</a></li>
<li class="Tag3"><a href="http://weblogs.asp.net/scottgu/archive/tags/LINQ/default.aspx" rel="tag">LINQ</a></li>
<li class="Tag2"><a href="http://weblogs.asp.net/scottgu/archive/tags/MVC/default.aspx" rel="tag">MVC</a></li>
<li class="Tag6"><a href="http://weblogs.asp.net/scottgu/archive/tags/NuGet/default.aspx" rel="tag">NuGet</a></li>
<li class="Tag4"><a href="http://weblogs.asp.net/scottgu/archive/tags/Security/default.aspx" rel="tag">Security</a></li>
<li class="Tag2"><a href="http://weblogs.asp.net/scottgu/archive/tags/Silverlight/default.aspx" rel="tag">Silverlight</a></li>
<li class="Tag4"><a href="http://weblogs.asp.net/scottgu/archive/tags/SQL+Server/default.aspx" rel="tag">SQL Server</a></li>
<li class="Tag3"><a href="http://weblogs.asp.net/scottgu/archive/tags/Talks/default.aspx" rel="tag">Talks</a></li>
<li class="Tag2"><a href="http://weblogs.asp.net/scottgu/archive/tags/Tips+and+Tricks/default.aspx" rel="tag">Tips and Tricks</a></li>
<li class="Tag1"><a href="http://weblogs.asp.net/scottgu/archive/tags/Visual+Studio/default.aspx" rel="tag">Visual Studio</a></li>
<li class="Tag6"><a href="http://weblogs.asp.net/scottgu/archive/tags/Web+Forms/default.aspx" rel="tag">Web Forms</a></li>
<li class="Tag5"><a href="http://weblogs.asp.net/scottgu/archive/tags/Windows+Phone/default.aspx" rel="tag">Windows Phone</a></li>
<li class="Tag4"><a href="http://weblogs.asp.net/scottgu/archive/tags/WPF/default.aspx" rel="tag">WPF</a></li>
<li class="Tag5"><a href="http://weblogs.asp.net/scottgu/archive/tags/WPF_2F00_E/default.aspx" rel="tag">WPF/E</a></li>
</ul>
</div>
                        
                        
                        <div id="NewsSidebar">
                                <h3>News</h3>
                                <ul>
                            <iframe src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/cm.htm" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<br><br>

<iframe src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/cm(1).htm" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

                                </ul>
                            </div>
                                            
                        
                        <div id="NavSideBar"><h3>Navigation</h3>
<ul>
<li><a href="http://weblogs.asp.net/">Home</a></li><li><a href="http://weblogs.asp.net/">Blogs</a></li>
</ul></div>
                             
                        
                        <div id="ArchiveSideBar"><h3>Archives</h3>
<ul>
<li><a href="http://weblogs.asp.net/scottgu/archive/2011/09.aspx">September 2011 (3)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2011/08.aspx">August 2011 (3)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2011/06.aspx">June 2011 (1)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2011/05.aspx">May 2011 (7)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2011/04.aspx">April 2011 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2011/03.aspx">March 2011 (5)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2011/02.aspx">February 2011 (5)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2011/01.aspx">January 2011 (6)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/12.aspx">December 2010 (10)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/11.aspx">November 2010 (7)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/10.aspx">October 2010 (5)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/09.aspx">September 2010 (10)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/08.aspx">August 2010 (8)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/07.aspx">July 2010 (10)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/06.aspx">June 2010 (7)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/05.aspx">May 2010 (9)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/04.aspx">April 2010 (12)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/03.aspx">March 2010 (6)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/02.aspx">February 2010 (8)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/01.aspx">January 2010 (8)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/12.aspx">December 2009 (4)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/11.aspx">November 2009 (4)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/10.aspx">October 2009 (7)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/09.aspx">September 2009 (6)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/08.aspx">August 2009 (6)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/07.aspx">July 2009 (3)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/06.aspx">June 2009 (3)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/05.aspx">May 2009 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/04.aspx">April 2009 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/03.aspx">March 2009 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/02.aspx">February 2009 (1)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/01.aspx">January 2009 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/12.aspx">December 2008 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/11.aspx">November 2008 (5)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/10.aspx">October 2008 (5)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/09.aspx">September 2008 (4)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/07.aspx">July 2008 (1)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/06.aspx">June 2008 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/05.aspx">May 2008 (4)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/04.aspx">April 2008 (7)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/03.aspx">March 2008 (6)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/02.aspx">February 2008 (7)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/01.aspx">January 2008 (8)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/12.aspx">December 2007 (8)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/11.aspx">November 2007 (9)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/10.aspx">October 2007 (7)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/09.aspx">September 2007 (9)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/08.aspx">August 2007 (13)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/07.aspx">July 2007 (12)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/06.aspx">June 2007 (10)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/05.aspx">May 2007 (9)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/04.aspx">April 2007 (12)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/03.aspx">March 2007 (9)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/02.aspx">February 2007 (9)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/01.aspx">January 2007 (12)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/12.aspx">December 2006 (12)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/11.aspx">November 2006 (14)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/10.aspx">October 2006 (14)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/09.aspx">September 2006 (15)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/08.aspx">August 2006 (17)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/07.aspx">July 2006 (17)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/06.aspx">June 2006 (14)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/05.aspx">May 2006 (17)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/04.aspx">April 2006 (23)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/03.aspx">March 2006 (12)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/02.aspx">February 2006 (27)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/01.aspx">January 2006 (35)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/12.aspx">December 2005 (29)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/11.aspx">November 2005 (17)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/10.aspx">October 2005 (9)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/09.aspx">September 2005 (8)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/08.aspx">August 2005 (11)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/06.aspx">June 2005 (1)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/05.aspx">May 2005 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/04.aspx">April 2005 (4)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/03.aspx">March 2005 (4)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/02.aspx">February 2005 (1)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/01.aspx">January 2005 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2004/11.aspx">November 2004 (9)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2004/10.aspx">October 2004 (5)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2003/12.aspx">December 2003 (4)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2003/11.aspx">November 2003 (7)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2003/10.aspx">October 2003 (15)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2003/09.aspx">September 2003 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2003/05.aspx">May 2003 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2003/04.aspx">April 2003 (3)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2003/03.aspx">March 2003 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2003/02.aspx">February 2003 (5)</a></li>
</ul></div> 
                        
                        
                        
                                    <h3>Favorite Links</h3>
                                    <div id="LinkSideBar">
                                        
<ul class="CommonSidebarList">
<li><a href="http://www.scottgu.com/">ScottGu.com</a></li><li><a href="http://asp.net/">ASP.Net Home</a></li><li><a href="http://www.nikhilk.net/">Nikhil Kothari</a></li><li><a href="http://www.dotnetslackers.com/">DotNetSlackers</a></li><li><a href="http://www.aspalliance.com/">ASPAlliance</a></li><li><a href="http://blog.joycode.com/scottgu/">My Blog in Chinese</a></li><li><a href="http://weblogs.asp.net/scottgufrench/default.aspx">My Blog in French</a></li><li><a href="http://thinkingindotnet.wordpress.com/category/scott-guthrie/">My Blog in Spanish</a></li><li><a href="http://weblogs.asp.net/scottguportuguese/">My Blog in Portuguese</a></li>
</ul>
                                    </div>
                            
                    </div>
                

                <div id="content"><div id="content2">
	                
    <h2 class="pageTitle">
       LINQ to SQL (Part 4 - Updating our Database)               
    </h2>
    <div class="post">
        <div class="postsub">
            <font face="arial" size="2"> <p>Over the last few weeks I've been writing a series of blog posts that cover LINQ to SQL.&nbsp; LINQ to SQL is a built-in O/RM (object relational mapper) that ships in the .NET Framework 3.5 release, and which enables you to easily model relational databases using .NET classes.&nbsp; You can use LINQ expressions to query the database with them, as well as update/insert/delete data.  </p><p>Below are the first three parts of my LINQ to SQL series:  </p><ul> <li><a href="http://weblogs.asp.net/scottgu/archive/2007/05/19/using-linq-to-sql-part-1.aspx" target="_blank">Part 1: Introduction to LINQ to SQL</a>  </li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/05/29/linq-to-sql-part-2-defining-our-data-model-classes.aspx" target="_blank">Part 2: Defining our Data Model Classes</a>  </li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/06/29/linq-to-sql-part-3-querying-our-database.aspx" target="_blank">Part 3: Querying our Database</a> </li></ul> <p>In today's blog post I'll cover how we we can use the data model we created earlier, and use it to update, insert, and delete data.&nbsp; I'll also show how we can cleanly integrate business rules and custom validation logic with our data model.</p> <h3><u>Northwind Database Modeled using LINQ to SQL</u></h3> <p>In <a href="http://weblogs.asp.net/scottgu/archive/2007/05/29/linq-to-sql-part-2-defining-our-data-model-classes.aspx" target="_blank">Part 2</a> of this series I walked through how to create a LINQ to SQL class model using the LINQ to SQL designer that is built-into VS 2008.&nbsp; Below is a class model&nbsp;created for the Northwind sample database and which I'll be using in this blog post:  </p><p><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/step0.jpg">&nbsp;  </p><p>When we designed our data model using the LINQ to SQL data designer above we defined five data model classes: Product, Category, Customer, Order and OrderDetail.&nbsp; The properties of each class map to the columns of a corresponding&nbsp;table in the database.&nbsp; Each instance of a class entity represents a row within the database table.  </p><p>When we defined our data model, the LINQ to SQL designer also created a custom DataContext class that provides the main conduit by which we'll query our database and apply updates/changes.&nbsp; In the example data model we defined above this class was named "NorthwindDataContext".&nbsp; The NorthwindDataContext class has properties that represent each Table we modeled within the database (specifically: Products, Categories, Customers,&nbsp;Orders, OrderDetails).  </p><p>As I covered in <a href="http://weblogs.asp.net/scottgu/archive/2007/06/29/linq-to-sql-part-3-querying-our-database.aspx" target="_blank">Part 3</a> of this blog series, we can easily use LINQ syntax expressions to query and retrieve data from our database using this NorthwindDataContext class.&nbsp; LINQ to SQL will then automatically translate these LINQ query expressions to the appropriate SQL code to execute at runtime.  </p><p>For example, I could write the below LINQ expression to retrieve a single Product object by searching on the Product name:  </p><p><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/step8.jpg">  </p><p>I could then write the LINQ query expression below to retrieve all products from the database that haven't yet had an order placed for them, and which also cost more than $100:  </p><p><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/step1.jpg">  </p><p>Note above how I am using the "OrderDetails" association for each product as part of the query to only retrieve those products that have not had any orders placed for them.  </p><h3><u>Change Tracking and DataContext.SubmitChanges()</u></h3> <p>When we perform queries and retrieve objects&nbsp;like the product instances above, LINQ to SQL will by default keep track of any changes or updates&nbsp;we later make to these objects.&nbsp; We can make any number of queries and changes we want using a LINQ to SQL DataContext, and these changes will all be tracked together.&nbsp;  </p><blockquote> <p><em>Note: LINQ to SQL change tracking happens on the consuming caller side - and <u>not</u> in the database.&nbsp; This means that you <u>are not</u> consuming any database resources when using it, nor do you need to change/install anything in the database to enable it.</em></p></blockquote> <p>After making the changes we want to the objects we've retrieved from LINQ to SQL, we can then optionally call the "SubmitChanges()" method on our DataContext to apply the changes back to the database.&nbsp; This will cause LINQ to SQL to dynamically calculate and execute the appropriate SQL code to update the database.  </p><p>For example, I could write the below code to update the price and&nbsp;# of units in&nbsp;stock&nbsp;of the "Chai" product in the database:  </p><p><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/step9.jpg">  </p><p>When I call northwind.SubmitChanges() above, LINQ to SQL will dynamically construct and execute a SQL "UPDATE" statement that will update the two product property values we modified above.  </p><p>I could then write the below code to loop over unpopular, expensive products and set the "ReorderLevel" property of them to zero:  </p><p><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/step2.jpg">  </p><p>When I call northwind.SubmitChanges() above, LINQ to SQL will calculate and execute an appropriate set of UPDATE statements to modify the products who had their ReorderLevel property changed.  </p><p>Note that if a Product's property values weren't changed by the property assignments above, then the object would not be considered changed and LINQ to SQL would therefore not execute an update for that product back to the database.&nbsp; For example - if the "Chai" product's unitprice was already $2 and the number of units in stock was 4, then calling SubmitChanges() would not cause any database update statements to execute.&nbsp; Likewise, only those products in the second example whose ReorderLevel was not already 0 would be updated when the SubmitChanges() method was called.  </p><h3><u>Insert and&nbsp;Delete Examples</u></h3> <p>In addition to updating existing rows in the database, LINQ to SQL obviously also enables you to insert and delete data.&nbsp; You can accomplish this by adding/removing data objects from the DataContext's table collections, and by then calling the SubmitChanges() method. &nbsp;LINQ to SQL will keep track of these additions/removals, and automatically execute the appropriate SQL INSERT or DELETE statements when SubmitChanges() is invoked.  </p><p><u>Inserting a New Product</u>  </p><p>I can add a new product to my database by creating a new "Product" class instance, setting its properties, and then by adding it to my DataContext's "Products" collection:  </p><p><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/step3.jpg">  </p><p>When we call "SubmitChanges()" above a new row will be created in our products table.  </p><p><u>Deleting Products</u>  </p><p>Just as I can express that I want to add a new Product to the database by adding a Product object into the DataContext's&nbsp;Products collection, I can likewise express that I want to delete a product from a database by removing it from the DataContext's Products collection:  </p><p><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/step4.jpg">  </p><p>Note above how I'm retrieving a sequence of discontinued products that no one has ever ordered using a LINQ query, and then passing it to the RemoveAll() method on my DataContext's "Products" collection.&nbsp; When we call "SubmitChanges()" above all of these Product rows will be deleted from our products table.  </p><h3><u>Updates across Relationships</u></h3> <p>What makes O/R mappers like LINQ to SQL extremely flexible is that they enable us to easily model cross-table relationships across our data model.&nbsp; For example, I can model each Product to be in a Category, each Order to contain OrderDetails for line-items, associate each OrderDetail line-item with a Product, and have each Customer contain an associated set of Orders.&nbsp; I covered how to construct and model these relationships in <a href="http://weblogs.asp.net/scottgu/archive/2007/05/29/linq-to-sql-part-2-defining-our-data-model-classes.aspx" target="_blank">Part 2</a> of this blog series.  </p><p>LINQ to SQL enables me to take advantage of these relationships for both querying and updating my data. For example, I could write the below code to create a new Product and associate it with an existing "Beverages" category in my database like so:  </p><p><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/step6.jpg">  </p><p>Note above how I'm adding the Product object into the Category's Products collection.&nbsp; This will indicate that there is a relationship between the two objects, and cause LINQ to SQL to automatically maintain the foreign-key/primary key relationship between the two when I call "SubmitChanges()".  </p><p>For another example&nbsp;of how LINQ to SQL can help manage cross-table&nbsp;relationships for us&nbsp;and help clean up our code, let's look at an example below where I'm creating a new Order for an existing customer.&nbsp; After setting the required ship date and freight costs for the order, I then&nbsp;create two order line-item objects that point to the products the customer is ordering.&nbsp; I then associate the order with the customer, and update the database with all of the changes.  </p><p><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/step5.jpg">  </p><p>As you can see, the programming model for performing all of this work is extremely clean and object oriented.&nbsp; </p> <h3><u>Transactions</u></h3> <p>A transaction is a service provided by a database&nbsp;(or other resource manager)&nbsp;to guarantee that a series of individual actions occur atomically - meaning either they all succeed or they all don't, and if they don't then they are all automatically undone before anything else is allowed to happen.  </p><p>When you call SubmitChanges() on your DataContext, the updates will always be wrapped in a Transaction.&nbsp; This means that your database will never be in an inconsistent state if you perform multiple changes - either all of the changes you've made on your DataContext are saved, or none of them are.  </p><p>If no transaction is already in scope, the LINQ to SQL DataContext object will automatically start a database transaction to guard updates when you call SubmitChanges(). Alternatively, LINQ to SQL also enables you to explicitly define and use your own TransactionScope object (a feature introduced in .NET 2.0).&nbsp; This makes it easier to integrate LINQ to SQL code with existing data access code you already have.&nbsp; It also means that you can enlist non-database resources into the transaction - for example: you could send off a MSMQ message, update the file-system (using the new transactional file-system support), etc - and scope all of these work items in the same transaction that you use to update your database with LINQ to SQL.  </p><h3><u>Validation and Business Logic</u></h3> <p>One of the important things developers need to think about when working with data is how to incorporate validation and business rule logic.&nbsp; Thankfully LINQ to SQL supports a variety of ways for developers to cleanly integrate this with their data models.&nbsp; </p> <p>LINQ to SQL enables you to add this validation logic once - and then have it be honored regardless of where/how the data model you've created is used.&nbsp; This avoids you having to repeat logic in multiple places, and leads to a much more maintainable and clean data model.&nbsp; </p> <h4><u>Schema Validation Support</u></h4> <p>When you define your data model classes using the LINQ to SQL designer in VS 2008, they will by default be annotated with some validation rules inferred from the schema of the tables in the database.</p> <p>The datatypes of the properties in the data model classes will match the datatypes of the database schema.&nbsp; This means you will get compile errors if you attempt to assign a boolean to a decimal value, or if you attempt to implicitly convert numeric types incorrectly.</p> <p>If a column in the database is marked as being nullable, then the corresponding property in the data model class created by the LINQ to SQL designer will be a nullable type.&nbsp; Columns not marked as nullable will automatically raise exceptions if you attempt to persist an instance with a null value.&nbsp; LINQ to SQL will likewise ensure that identity/unique column values in the database are correctly honored.</p> <p>You can obviously use the LINQ to SQL designer to override these default schema driven validation settings if you want - but by default you get them automatically and don't have to take any additional steps to enable them.&nbsp; LINQ to SQL also automatically handles escaping SQL values for you - so you don't need to worry about SQL injection attacks when using it.</p> <h4><u>Custom Property Validation Support</u></h4> <p>Schema driven datatype validation is useful as a first step, but usually&nbsp;isn't enough for real-world scenarios.&nbsp; </p> <p>Consider for example a scenario with our Northwind database where we have a "Phone" property on the "Customer" class which is defined in the database as an nvarchar.&nbsp; Developers using LINQ to SQL could write code like below&nbsp;to&nbsp;update it using a valid telephone number:&nbsp; </p> <p><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/step10.jpg"> </p> <p>The challenge that we will run into with our application, however, is that the below code is also legal from a pure SQL schema perspective (because it is still a string even though it is not a valid phone number):</p> <p><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/step11.jpg"> </p> <p>To prevent bogus phone numbers from being added into our database, we can add a custom property validation rule to our Customer data model class.&nbsp; Adding a rule to validate phone numbers using this feature is really easy.&nbsp; All we need to-do is to&nbsp;add a new partial class to our project that defines the method below:</p> <p><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/step12.jpg"> </p> <p>The code above takes advantage of two characteristics of LINQ to SQL:</p> <p>1) All classes created by the LINQ to SQL designer are declared as "partial" classes - which means that developers can easily add additional methods, properties, and events to them (and have them live in separate files).&nbsp; This makes it very easy to augment the data model classes and DataContext classes created by the LINQ to SQL designer with validation rules and additional custom helper methods that you define.&nbsp; No configuration or code wire-up is required.</p> <p>2) LINQ to SQL exposes a number of custom extensibility points in its data model and DataContext classes that you can use to add validation logic before and after things take place.&nbsp; Many of these extensibility points utilize a new language feature called "partial methods" that is being introduced with VB and C# in VS 2008 Beta2.&nbsp; Wes Dyer from the C# team has a good explanation&nbsp;of how partial methods works in this blog post <a href="http://blogs.msdn.com/wesdyer/archive/2007/05/23/in-case-you-haven-t-heard.aspx" target="_blank">here</a>.</p> <p>In my validation example above, I'm using the OnPhoneChanging partial method that is executed anytime someone programmatically sets the "Phone" property on a Customer object.&nbsp; I can use this method to validate the input however I want (in this case I'm using a regular expression).&nbsp; If everything passes successfully, I just return from the method and LINQ to SQL will assume that the value is valid.&nbsp; If there are any issues with the value, I can raise an exception within the validation method - which will prevent the assignment from taking place.</p> <h4><u>Custom&nbsp;Entity Object Validation Support</u></h4> <p>Property level validation as used in the scenario above is very useful for validating individual properties on a data model class.&nbsp; Sometimes, though, you want/need to validate multiple property values on an object against each other.&nbsp; </p> <p>Consider for example a scenario with an Order object where you set both the "OrderDate" and the "RequiredDate" properties:</p> <p><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/step13.jpg"> </p> <p>The above code is legal from a pure SQL database perspective - even though it makes absolutely no sense for the required delivery date of the new&nbsp;order to be entered as yesterday.&nbsp; </p> <p>The good news is that LINQ to SQL in Beta2 makes it easy for us to add custom entity level validation rules to guard against mistakes like this from happening.&nbsp; We can add a partial class for our "Order" entity and implement the OnValidate() partial method that will be invoked prior to the entity's values being persisted into the database.&nbsp; Within this validation method we can then access and validate all of the data model class properties:</p> <p><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/step14.jpg"> </p> <p>Within this validation method I can check any of the entity's property values (and even obtain read-only access to its associated objects), and raise an exception as needed if the values are incorrect.&nbsp; Any exceptions raised from the OnValidate() method will abort any changes from being persisted in the database, and rollback all other changes in the transaction.</p> <h4><u>Custom&nbsp;Entity Insert/Update/Delete Method Validation</u></h4> <p>There are times when you want to add validation logic that is specific to insert, update or delete scenarios.&nbsp; LINQ to SQL in Beta2 enables this by allowing you to add a partial class to extend your DataContext class and then implement partial methods to customize the Insert, Update and Delete logic for your data model entities.&nbsp; These methods will be called automatically when you invoke SubmitChanges() on your DataContext.</p> <p>You can add appropriate validation logic within these methods&nbsp;- and if it passes then tell LINQ to SQL to continue with persisting the relevant changes to the database (by calling the DataContext's "ExecuteDynamicXYZ" method):</p> <p><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/step15.jpg"> </p> <p>What is nice about adding the above methods is that the appropriate ones are automatically invoked regardless of the scenario logic that caused the data objects to be created/updated/deleted.&nbsp; For example, consider a simple scenario where we create a new Order and associate it with an existing Customer:</p> <p><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/step16.jpg"> </p> <p>When we call northwind.SubmitChanges() above, LINQ to SQL will determine that it needs to persist a new Order object, and our "InsertOrder" partial method will automatically be invoked.&nbsp; </p> <h4><u>Advanced: Looking at the Entire Change List for the Transaction</u></h4> <p>There are times when adding validation logic can't be done purely by looking at individual insert/update/delete operations - and instead you want to be able to look at the entire change list of operations that are occurring for a transaction.&nbsp; </p> <p>Starting with Beta2 of .NET 3.5, LINQ to SQL now enables you to get access to this change list by calling the public DataContext.GetChangeList() method.&nbsp; This will return back a ChangeList object that exposes collections of each addition, removal and modification that has been made.&nbsp;</p> <p>One approach you can optionally employ for advanced scenarios is to sub-class the DataContext class and override its SubmitChange() method.&nbsp; You can then retrieve the ChangeList() for the update operation and perform any custom validation you want prior to executing it:</p> <p>&nbsp;<img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/step17.jpg"> </p> <p>The above scenario is a somewhat advanced one - but it is nice to know that you always have the ability to drop-down and take advantage of it if needed.</p> <h3><u>Handling Simultaneous Changes with Optimistic Concurrency</u></h3> <p>One of the things that developers need&nbsp;to think about in multi-user database systems is how to handle simultaneous updates of the same data in the database.&nbsp; For example, assume two users retrieve a product object within an application, and one of the users changes the ReorderLevel to 0 while the other changes it to 1.&nbsp; If both users then attempt to save the product back to the database, the developer needs to decide how to handle the change conflicts.&nbsp; </p> <p>One approach is to just "let the last writer win" - which means that the first user's submitted value will be lost without the end-users realizing it.&nbsp; This is usually considered a poor (and incorrect) application experience.&nbsp; </p> <p>Another approach&nbsp;which LINQ to SQL supports is to use an optimistic concurrency model&nbsp;- where&nbsp;LINQ to SQL will automatically detect if the original values in the database have been updated by someone else prior to the new values being persisted.&nbsp; LINQ to SQL can then provide a conflict list of changed values to the developer and enable them to either reconcile the differences or provide the end-user of the application with UI to indicate what they want to-do.&nbsp; </p> <p>I'll cover how to use optimistic concurrency with LINQ to SQL in a future blog post.</p> <h3><u>Using SPROCs or Custom SQL&nbsp;Logic for Insert/Update/Delete Scenarios</u></h3> <p>One of the questions that developers (and especially DBAs) who are used to writing SPROCs with custom SQL usually ask when seeing LINQ to SQL for the first time is - "but how can I have complete control of the underlying SQL that is executed?"&nbsp; </p> <p>The good news is that LINQ to SQL has a pretty flexible model that enables developers to override the dynamic SQL that is automatically executed by LINQ to SQL, and instead call custom insert, update, delete SPROCs that they (or a DBA) define themselves.&nbsp; </p> <p>What is really nice is that you can start off by defining your data model and have LINQ to SQL automatically handle the insert, update, delete SQL logic for you.&nbsp; You can then at a later point customize the data model to use your own custom SPROCs or SQL for updates - without having to change any of the application logic that is using your data model, nor&nbsp;would you&nbsp;have to change any of the validation or business rules logic supporting it (all of this stays the same).&nbsp; This provides a lot of flexibility in how you build your application.</p> <p>I'll cover how to customize your data models to use SPROCs or custom SQL in a future blog post.</p> <h3><u>Summary</u></h3> <p>Hopefully the above post provides a good summary of how you can easily use LINQ to SQL to update your database, and cleanly integrate validation and business logic with your data models.&nbsp; I think you'll find that LINQ to SQL can dramatically improve your productivity when working with data, and enable you to write extremely clean object-oriented data access code.  </p><p>In upcoming blog posts in this series I'll cover the new &lt;asp:linqdatasource&gt; control coming in .NET 3.5, and talk about how you can easily build data UI in ASP.NET that takes advantage of LINQ to SQL data models. I'll also cover some more specific LINQ to SQL programming concepts including optimistic concurrency, lazy and eager loading, table mapping inheritance, custom SQL/SPROC usage, and more.  </p><p>Hope this helps,  </p><p>Scott</p></font>
            
            <div class="postfoot">
                
                Published
                Wednesday, July 11, 2007 10:00 AM
			    by
			    <a href="http://weblogs.asp.net/members/ScottGu.aspx">ScottGu</a>
                <span id="ctl00_Main_WeblogPostRating1" title="Rated Excellent [5 out of 5]." class="CommonRateControlReadOnly"><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/star-left-on.gif" align="absmiddle" border="0"><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/star-right-on.gif" align="absmiddle" border="0"><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/star-left-on.gif" align="absmiddle" border="0"><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/star-right-on.gif" align="absmiddle" border="0"><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/star-left-on.gif" align="absmiddle" border="0"><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/star-right-on.gif" align="absmiddle" border="0"><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/star-left-on.gif" align="absmiddle" border="0"><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/star-right-on.gif" align="absmiddle" border="0"><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/star-left-on.gif" align="absmiddle" border="0"><img src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/star-right-on.gif" align="absmiddle" border="0"></span><input type="hidden" value="5" id="ctl00_Main_WeblogPostRating1_Value">
                <div class="em"><span id="ctl00_Main_ctl06_ctl01">Filed under: <a href="http://weblogs.asp.net/scottgu/archive/tags/ASP.NET/default.aspx" rel="tag">ASP.NET</a>, <a href="http://weblogs.asp.net/scottgu/archive/tags/Visual+Studio/default.aspx" rel="tag">Visual Studio</a>, <a href="http://weblogs.asp.net/scottgu/archive/tags/.NET/default.aspx" rel="tag">.NET</a>, <a href="http://weblogs.asp.net/scottgu/archive/tags/LINQ/default.aspx" rel="tag">LINQ</a>, <a href="http://weblogs.asp.net/scottgu/archive/tags/Data/default.aspx" rel="tag">Data</a>, <a href="http://weblogs.asp.net/scottgu/archive/tags/SQL+Server/default.aspx" rel="tag">SQL Server</a></span><input type="hidden" name="ctl00$Main$ctl06$ctl01" id="ctl00_Main_ctl06_ctl01_State" value="value:Filed%20under%3A%20%3Ca%20href%3D%22%2Fscottgu%2Farchive%2Ftags%2FASP.NET%2Fdefault.aspx%22%20rel%3D%22tag%22%3EASP.NET%3C%2Fa%3E%2C%20%3Ca%20href%3D%22%2Fscottgu%2Farchive%2Ftags%2FVisual%2BStudio%2Fdefault.aspx%22%20rel%3D%22tag%22%3EVisual%20Studio%3C%2Fa%3E%2C%20%3Ca%20href%3D%22%2Fscottgu%2Farchive%2Ftags%2F.NET%2Fdefault.aspx%22%20rel%3D%22tag%22%3E.NET%3C%2Fa%3E%2C%20%3Ca%20href%3D%22%2Fscottgu%2Farchive%2Ftags%2FLINQ%2Fdefault.aspx%22%20rel%3D%22tag%22%3ELINQ%3C%2Fa%3E%2C%20%3Ca%20href%3D%22%2Fscottgu%2Farchive%2Ftags%2FData%2Fdefault.aspx%22%20rel%3D%22tag%22%3EData%3C%2Fa%3E%2C%20%3Ca%20href%3D%22%2Fscottgu%2Farchive%2Ftags%2FSQL%2BServer%2Fdefault.aspx%22%20rel%3D%22tag%22%3ESQL%20Server%3C%2Fa%3E"></div>
                
            </div>
        </div>
    </div>
    
    
                    
                    <h3 class="pageTitle">Comments</h3>
                    <div id="comments">
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3106470">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 1:22 PM
                            by
                            <a title="rodrigo" rel="nofollow" href="http://rodiniz.blogspot.com/">rodrigo</a>
                            
	                    </div>
	                    <p>Hi scott great articles but I don't think there is an example of how</p>
<p>to do a LINQ code that retrieves data from an outer join.</p>
<p>Could you provide a simple snippet to do that?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3106570">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 1:30 PM
                            by
                            Stefan Jokull
                            
	                    </div>
	                    <p>Awesome article Scott.</p>
<p>One question. When inserting an object that has it's ID mapped to an Identity column, is the Id property on the object automatically updated after calling SubmitChanges() or would we have to fetch the newly created object from the datacontext?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3106580">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 1:33 PM
                            by
                            Matt Griffore
                            
	                    </div>
	                    <p>Two words... very nice!!</p>
<p>I just hope it plays well with Oracle.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3106636">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 1:44 PM
                            by
                            John West
                            
	                    </div>
	                    <p>Scott,</p>
<p>Take the scenario below.</p>
<p>1) Load order from northwinddatacontext</p>
<p>2) Update order with values from input screen - update some of the detail lines as well</p>
<p>3) Call northwind.submitchanges - let's assume the order returns a validation error</p>
<p>4) Display returned error</p>
<p>5) Create logentryobject with error details</p>
<p>6) Add logentryobject to northwinddatacontext</p>
<p>7) Call northwind.submitchanges </p>
<p>Now, won't step 7 fail again, since the order object is still in the change list? &nbsp;Is there a way to remove it from the context? &nbsp;Can we add it back later? &nbsp;Will removing it also remove the updated order detail objects?</p>
<p>This is an issue I run into often with ORMs, such as nhibernate, that save all changes with a single method, instead of requiring an explicit save method for each object.</p>
<p>Thanks.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3106640">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 1:46 PM
                            by
                            John West
                            
	                    </div>
	                    <p>One more question: when is automatic updating of the data model going to be added? &nbsp;Currently, if I add a new field to the db, I have to manually make the changes. &nbsp;Can't there be a sync option?</p>
<p>Thanks again.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3106698">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 1:56 PM
                            by
                            lee
                            
	                    </div>
	                    <p>I like linq to sql. do we use ADO.NET entities or ling to sql in DAL</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3106840">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 2:17 PM
                            by
                            Alex Osipov
                            
	                    </div>
	                    <p>Hi Scott - just wanted to clarify something.</p>
<p>In your example: </p>
<p>var products =</p>
<p> &nbsp;from p in northwind.Products</p>
<p> &nbsp;where p.OrderDetails.Count == 0 &amp;&amp; p.unitPrice &gt; 100</p>
<p> &nbsp;select p;</p>
<p>foreach (Product product in products) {</p>
<p>	product.ReorderLevel = 0;</p>
<p>}</p>
<p>Will this execute multiple UPDATE statements for each product primary key or a single UPDATE statement?</p>
<p>AO</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3106856">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 2:21 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Stefan,</p>
<p>&gt;&gt;&gt; One question. When inserting an object that has it's ID mapped to an Identity column, is the Id property on the object automatically updated after calling SubmitChanges() or would we have to fetch the newly created object from the datacontext?</p>
<p>When you are inserting a new object, after you call SubmitChanges() on it the Id value of the identity column will automatically be updated. &nbsp;So no need to explictly fetch it.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3106866">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 2:25 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi John,</p>
<p>If I understand your scenario correctly, you are looking to create a logentry for tracking purposes when errors occur - and want to avoid the initial validation error blocking it.</p>
<p>For this scenario I think the best approach might be to just instantiate a new DataContext instance. &nbsp;Using this you could add the log entry and persist it without worrying about the other DataContext the user is updating (and which currently has a validation error).</p>
<p>Does this answer your question?</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3106883">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 2:28 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Alex,</p>
<p>For the looping update scenario I did above this will create multiple update statements (one for each product I'm updating). &nbsp;Note that only those products that are changed will have update statements though (so if the ReorderLevel value was already 0 no update statement would occur).</p>
<p>I believe LINQ to SQL will actually send the update statements together batched to the database, though, so that it might only be one network trip to the database.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3107195">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 3:05 PM
                            by
                            <a title="Josh Stodola" rel="nofollow" href="http://blog.josh420.com/">Josh Stodola</a>
                            
	                    </div>
	                    <p>Hey there Scott, thanks again for the intriguing LINQ posts.</p>
<p>I am gonna ask this one last time... will you be showing some love to VB programmers and offering code in this great series for both languages? &nbsp;I would *really* appreciate this.</p>
<p>Thanks!</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3107244">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 3:09 PM
                            by
                            JoeBo
                            
	                    </div>
	                    <p>I've been checking this stuff out for a while now and i really like what i see. &nbsp;My question to you scott is; will linq replace the need for stored procedures in the future? &nbsp;</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3107284">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 3:12 PM
                            by
                            Ben Hayat
                            
	                    </div>
	                    <p>Hi Scott;</p>
<p>All your posts are great, but this one has topped them all :-)</p>
<p>Question for you: So far, there has not been any mention of how a remote client can work with database (in 3-tier model). i.e. Let's say the database resides in a company and some users have direct connection to database via network. In this case all the above examples work great. But, what about users who are in a different city, or traveling who only have access to internet and not direct connection. The next project That I have to work on, is a service application that none of the users have direct access to database via network. These are small companies who will use our software, but their data will reside in a hosting company.</p>
<p>How can we leverage this new model in a 3-tier environment?</p>
<p>Thank you in advance Scott!</p>
<p>..Ben &nbsp;</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3107351">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 3:18 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Josh,</p>
<p>I'm planning on updating all of these posts to VB in the future. &nbsp;I started off the LINQ to SQL series doing both languages, but found that it ended up being really hard to read the posts when everything was duplicated. &nbsp;I'll be creating separate copies that contain pure VB in the future and link off to all of them.</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3107369">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 3:22 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi JoeBo,</p>
<p>&gt;&gt;&gt;&gt; I've been checking this stuff out for a while now and i really like what i see. &nbsp;My question to you scott is; will linq replace the need for stored procedures in the future? &nbsp;</p>
<p>People use stored procedures for different reasons, so I think it is often hard to say whether using an OR/M implementation is absolutely better (it really depends on the exact scenario).</p>
<p>I do, though, think that using an OR/M implementation like LINQ to SQL can make you much more productive, and provides tremendous flexibility to your code. &nbsp;One nice thing about LINQ to SQL is that it supports using both dynamic SQL (that it calculates and executes for you) as well as the ability to use SPROCs that you define. &nbsp;This makes it easy to use a data model built using LINQ to SQL, and dyanmic SQL for most scenarios, and then optimize/customize certain scenarios using SPROCs if needed.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3107390">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 3:25 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Ben,</p>
<p>&gt;&gt;&gt;&gt; Question for you: So far, there has not been any mention of how a remote client can work with database (in 3-tier model). i.e. Let's say the database resides in a company and some users have direct connection to database via network. In this case all the above examples work great. But, what about users who are in a different city, or traveling who only have access to internet and not direct connection. The next project That I have to work on, is a service application that none of the users have direct access to database via network. These are small companies who will use our software, but their data will reside in a hosting company.</p>
<p>You can send LINQ to SQL data model classes over the network via web-services or other remoting technologies. &nbsp;For disconnected traveling scenarios, though, one thing to consider would be to use either SQL Express or SQL CE on the local client and cache/sync data locally there. &nbsp;You could then use LINQ to SQL on the backend master server, and use LINQ to SQL locally on the client. &nbsp;</p>
<p>Today you have to write code to manage some of this disconnected sync and update logic yourself. &nbsp;In the future you'll see .NET have more built-in support for patterns like this, and built-in plumbing infrastrature that will really help with building those types of systems.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3107408">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 3:28 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Rodrigo,</p>
<p>&gt;&gt;&gt;&gt; Hi scott great articles but I don't think there is an example of how to do a LINQ code that retrieves data from an outer join. Could you provide a simple snippet to do that? </p>
<p>I'll put this on the list to blog more about. :-) &nbsp;You can definitely do JOINS using LINQ and LINQ to SQL. &nbsp;For example:</p>
<p>var q = </p>
<p>	from s in db.Suppliers</p>
<p>	join c in db.Customers on s.City equals c.City</p>
<p>	select new {</p>
<p>		Supplier = s.CompanyName,</p>
<p>		Customer = c.CompanyName,</p>
<p>		City = c.City</p>
<p>	};</p>
<p>Hope this helps,</p>
<p>Scott </p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3107442">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 3:33 PM
                            by
                            Chris Moseley
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>In a future post could you please cover creating dynamic queries with LINQ To Sql (as in 'order by "fieldName"')? I'm interested to know how to do this correctly.</p>
<p>Thanks,</p>
<p>Chris</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3107518">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 3:45 PM
                            by
                            Martin Nyborg
                            
	                    </div>
	                    <p>I know that you are mister ASPX but are you going to write about remoting the data context? There should be a mini data context in the beta 2 (hope there is)</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3107547">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 3:51 PM
                            by
                            roncansan
                            
	                    </div>
	                    <p>Scott,</p>
<p>How do LINQ compare against DataObjects.NET "www.x-tensive.com/Products/DataObjects.NET/"</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3107712">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 4:13 PM
                            by
                            Joe Chung
                            
	                    </div>
	                    <p>Hey Scott, great post!</p>
<p>Question: &nbsp;your code sample has DataContext.GetChangeSet() while you refer to the method in your explanation as GetChangeList(). &nbsp;Which is it supposed to be?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3108447">#</a>
	                        <span>
	                            LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 5:46 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://www.dotnetkicks.com/adonet/LINQ_to_SQL_Part_4_Updating_our_Database">DotNetKicks.com</a>
                            
	                    </div>
	                    <p>You've been kicked (a good thing) - Trackback from DotNetKicks.com</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3108531">#</a>
	                        <span>
	                            New and Notable 177
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 5:58 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://codebetter.com/blogs/sam.gentile/archive/2007/07/11/new-and-notable-177.aspx">Sam Gentile</a>
                            
	                    </div>
	                    <p>Multithreading and Concurrency Software Transactional Memory Part IV - Thread-Bound Transactions Software</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3108862">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 6:10 PM
                            by
                            John West
                            
	                    </div>
	                    <p>Using a new datacontext seems like one way to do it. &nbsp;However, is there a way to remove an object from the change list? &nbsp;And will child objects that have been changed be removed as well?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3108866">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 6:11 PM
                            by
                            John West
                            
	                    </div>
	                    <p>How about my other question ;)? &nbsp;Is synchronization between the db and the model coming soon?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3109031">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 6:29 PM
                            by
                            Mike
                            
	                    </div>
	                    <p>It looks better each time I read about it. I will try the next beta for sure.</p>
<p>One question: what's your view on validation in the model vs. validation using the ASP.NET validators? Usually we're writing our validation twice. In your phone number example you'd also put a RegularExpressionValidator on the textbox in the form. Do you have any ideas or plans to tackle this issue?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3109040">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 6:32 PM
                            by
                            AzamSharp
                            
	                    </div>
	                    <p>Hi Scott, </p>
<p>How would you delete a product and then persist in the database? </p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3109060">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 6:37 PM
                            by
                            Pete
                            
	                    </div>
	                    <p>Hey Scott,</p>
<p>Your articles are always spot-on and really perform a valuable function for the .NET community.</p>
<p>As I'm feeling pedantic, I have to pull you up on thowing System.Exception in you validation code. I know that these are only examples, but examples from such distinguished sources &nbsp;(although I really think you must have a ghostwriter...) can only contribute to the really bad exception-related code that's prolific in the .NET world. InvalidOperationException would be nice!</p>
<p>Pete. :-)</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3109117">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 6:49 PM
                            by
                            Scott Roberts
                            
	                    </div>
	                    <p>Good info. Thanks for taking the time to write these up. But don't forget your promise to address the use of LINQ to SQL in an ASP.NET environment. ;)</p>
<p>Also, it looks like this design is going to lead people into using multiple DataContext objects in order to manage updates. When working with multiple DataContext objects, it's fairly important to mention that since the DataContext is the one tracking changes on an object, if you move the object to a different DataContext you "lose" all the changes made to that object (i.e. the object appears "clean" to the new DataContext).</p>
<p>I would have preferred to see objects track their own changes and to have finer control over updates (i.e. myObject.Save()), but it appears MS has gone in a different direction. I've never worked in this type of design before (all objects updated at once) and it scares me a little. Has anyone worked with this type of ORM before? Did you like it or hate it?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3109126">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 6:50 PM
                            by
                            Pete
                            
	                    </div>
	                    <p>.... although, perhaps that should rather be an ArgumentException for the OnPhoneChanging method. It's tricky! Grrr... type-centric exception handling is too unproductive and costly to do properly. I wonder if there's a better way.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3109205">#</a>
	                        <span>
	                            LINQ to SQL part 2
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 7:09 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://blog.lotas-smartman.net/archive/2007/07/12/linq-to-sql-part-2.aspx">Tiernans Comms Closet</a>
                            
	                    </div>
	                    <p>Part 4 has been released . info on parts 1, 2 and 3 is here .</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3109939">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 8:40 PM
                            by
                            zeeshan hirani
                            
	                    </div>
	                    <p>thks scott for a great article. now one question i have is &nbsp;how do i go about doing something after the update of an object say an order object. i have been using paul wilson ormapper which raises events like on creating oncreated, onupdating,onupdated,onmaterializing etc so onupated event is where i create an instance of my order history object and add it to the order history collection of order object so is there an event for onupdated that i can use to save other objects within the same transaction. one other constraints that i have faced with wilson is that in these kinds of events if u try to query for say other order objects, it does not work because the transaction is already issued and as a result table is locked so querying for other order objects does not work. i hope linq realizes this issue and uses the existing transtion object to query for theobjects</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3111049">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 9:29 PM
                            by
                            Daniel Melo
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>Please consider the following scenario, where you retrieve one category and associates one new product to it :</p>
<p>Category beverages = northwind.Categories.Single(c =&gt; c.CategoryName == 'Beverages');</p>
<p>Product myProduct = new Product();</p>
<p>myProduct.ProductName = "Brand new product";</p>
<p>beverages.Products.Add(myProduct);</p>
<p>northwind.SubmitChanges();</p>
<p>If I am not missing something, this operation will trigger 2 network roundtrips to database :</p>
<p>a) One select operation to fetch the category "Beverages";</p>
<p>b) One insert to add the new product.</p>
<p>My question: If we already know the category primary key in advance, for example taking from query string, can we still add the new product, without fetching it from database?</p>
<p>Example:</p>
<p>Category beverages = new Category();</p>
<p>beverage.CategoryID = Request.QueryString["CategoryID"];</p>
<p>Product myProduct = new Product();</p>
<p>myProduct.ProductName = "Brand new product";</p>
<p>beverages.Products.Add(myProduct);</p>
<p>If it is possible, it would save me one round trip to fetch the category...</p>
<p>Thanks!</p>
<p>Daniel</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3111267">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 9:52 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi John,</p>
<p>&gt;&gt;&gt;&gt;&gt; Using a new datacontext seems like one way to do it. &nbsp;However, is there a way to remove an object from the change list? &nbsp;And will child objects that have been changed be removed as well?</p>
<p>You can remove items from the change-list, as well as optionally reset objects to their origional state. &nbsp;So that would be another way to go if you wanted to. &nbsp;For the logging scenario, though, I think using a new DataContext is probably easiest.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3111297">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 9:55 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Mike,</p>
<p>&gt;&gt;&gt;&gt;&gt; One question: what's your view on validation in the model vs. validation using the ASP.NET validators? Usually we're writing our validation twice. In your phone number example you'd also put a RegularExpressionValidator on the textbox in the form. Do you have any ideas or plans to tackle this issue?</p>
<p>In general you definitely want to try and avoid duplicating validation logic. &nbsp;The nice thing about putting the validation logic in the data model is that you can author it once and know that regardless of the code-path that interacts with the data model the validation will execute.</p>
<p>Where things get a little trickier is with things like client-side JavaScript validation. &nbsp;For a certain set of validations (like a regular expression based email/telephone check) you could envision validation controls automatically basing their logic on the data model annotations. &nbsp;The current &lt;asp:regularexpression&gt; validator doesn't support this yet - but I suspect it is something we'll want to consider for the future.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3111320">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 9:56 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Azam,</p>
<p>&gt;&gt;&gt;&gt; How would you delete a product and then persist in the database? </p>
<p>I have a delete sample above that shows using the RemoveAll() method to remove a set of products. &nbsp;There is also a Remove() method that you can use to pass in a single Product object. &nbsp;Once you call SubmitChanges() on the DataContext this will cause the deletion to be persisted in the database.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3111348">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 9:58 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Pete,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; .... although, perhaps that should rather be an ArgumentException for the OnPhoneChanging method. It's tricky! Grrr... type-centric exception handling is too unproductive and costly to do properly. I wonder if there's a better way.</p>
<p>Probably an ArgumentException would be the best way to go. &nbsp;One nice thing is that you can choose whichever type of exception you want to raise. &nbsp;For large projects I could envision people wanting to create their own custom exception hierarchy.</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3111505">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 10:12 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>&gt;&gt;&gt;&gt;&gt; I would have preferred to see objects track their own changes and to have finer control over updates (i.e. myObject.Save()), but it appears MS has gone in a different direction. I've never worked in this type of design before (all objects updated at once) and it scares me a little. Has anyone worked with this type of ORM before? Did you like it or hate it?</p>
<p>One of the challanges when saving on a per object level is that it gets tricky when doing updates across multiple objects simultaneously. &nbsp;</p>
<p>For example, assume you create an Order and two OrderDetails that are associated with it. &nbsp;When you call save on the OrderDetail, should it fail if the Order hasn't already been persisted or should it auto-save it? &nbsp;If you call save on the Order should it automatically save its associated OrderDetails or not? &nbsp;These decisions end up getting even more complicated when you factor primary keys/foreign keys into the equation - since the order of the persistance can sometimes determine whether they work or fail.</p>
<p>Calling SubmitChanges() on the DataContext helps ensure that objects are kept in a consistent state, and you can make multiple changes to the model without having to worry about the order in which you persist the changes.</p>
<p>Note that you can call SubmitChanges() multiple time on a DataContext. &nbsp;So if you do want to perform multiple separate updates you can follow a pattern like below:</p>
<p>NorthwindDataContext northwind = new NorthwindDataContext();</p>
<p>// Add new object</p>
<p>northwind.SubmitChanges();</p>
<p>// Make more changes</p>
<p>northwind.SubmitChanges();</p>
<p>// More changes</p>
<p>northwind.SubmitChanges();</p>
<p>This enables you to separate our your updates into multiple different operations if you want more granularity.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3111971">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 10:45 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Daniel,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; My question: If we already know the category primary key in advance, for example taking from query string, can we still add the new product, without fetching it from database?</p>
<p>Yes - you can definitely go this route. &nbsp;The nice thing with LINQ to SQL is that you assign things using either the primary-key/foreign-key, or by setting object references across the objects.</p>
<p>Hope this helps!</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3112409">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 11, 2007 11:08 PM
                            by
                            Jamison R.
                            
	                    </div>
	                    <p>I've been really hesitant to use type of OR/M technology, and over the last few weeks your articles on Linq to Sql have changed my mind. &nbsp;Now when I'm writing "traditional" ADO at work I keep thinking how much nicer it could be...</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3114180">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 12:29 AM
                            by
                            Mohammad Azam
                            
	                    </div>
	                    <p>Hi Scott, </p>
<p>Thanks for the reply. But for the Delete/Remove to work we will first need to get the object from the database that we are going to delete. Is'nt this an extra fetch to the database?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3114181">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 12:29 AM
                            by
                            <a title="Vikram" rel="nofollow" href="http://www.vikramlakhotia.com/">Vikram</a>
                            
	                    </div>
	                    <p>Only one word for the article Great!</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3114405">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 12:39 AM
                            by
                            Dennis
                            
	                    </div>
	                    <p>How is it possible to dynamically make the LINQ?</p>
<p>E.g. I have two boolean variables and I want to add some sql qualification depending on either or both being true.</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3114926">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 1:57 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Mohammad,</p>
<p>Deleting the object the way I showed will require a fetch from the database. &nbsp;But doing so ensures that all validation logic you've applied to your data model successfully executes prior to the deletion being committed.</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3114938">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 2:03 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Dennis,</p>
<p>&gt;&gt;&gt;&gt; How is it possible to dynamically make the LINQ? &nbsp;E.g. I have two boolean variables and I want to add some sql qualification depending on either or both being true.</p>
<p>LINQ queries are evaluated lazily - which means that they don't actually execute until you request the data. &nbsp;One of the nice benefits of this is that you can compose queries nicely, and build queries from other queries very elegantly.</p>
<p>For example, you could write the below code to conditionally add a qualification to a query:</p>
<p>NorthwindDataContext northwind = new NorthwindDataContext();</p>
<p>var products = from p in northwind.Products</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; select p;</p>
<p>if (somecondition == true) </p>
<p>{</p>
<p> &nbsp; products = from p in products</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;where p.Discontinued == true</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;select p;</p>
<p>}</p>
<p>foreach(Product p in products) </p>
<p>{</p>
<p> &nbsp; &nbsp;// do something</p>
<p>}</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3115143">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 2:29 AM
                            by
                            <a title="SoftMind" rel="nofollow" href="http://www.softmind.biz/">SoftMind</a>
                            
	                    </div>
	                    <p>Thanks Scott,</p>
<p>Great Going with LINQ tutorials.</p>
<p>By chance, are you aware of any good books currently available that explains LINQ from scratch with new features of 3.5.</p>
<p>Any idea of new books that should be comming out in near future. Can you recommend few UPCOMING books on LINQ.</p>
<p>Any plans on modified New Tutorials by Scott Mitchel based on LINQ.</p>
<p>Thanks</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3115287">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 2:42 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi SoftMind,</p>
<p>Unfortunately I don't know of any LINQ books currently out there - although I expect several to appear in the months ahead.</p>
<p>Probably the best way to learn LINQ is to check out my language tutorial series as well as this LINQ to SQL series and then start playing with Beta2 of VS 2008 once it ships.</p>
<p>Here are a number of videos you can download and watch today about LINQ to SQL that you might find very useful: <a rel="nofollow" target="_new" href="http://mtaulty.com/CommunityServer/blogs/mike_taultys_blog/archive/2007/05/09/9317.aspx">mtaulty.com/.../9317.aspx</a></p>
<p>We'll definitely be updating our data tutorial series later this year to incorporate LINQ and LINQ to SQL as part of them.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3115348">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 2:59 AM
                            by
                            Dennis
                            
	                    </div>
	                    <p>How do you add caching?</p>
<p>E.g. if you do .Single(p =&gt; p.Id = 3) several hundred times per second.</p>
<p>How is invalidation handled on write? How is writing to the object handled, especially when is the cache updated with the new value?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3115711">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 3:45 AM
                            by
                            Albert
                            
	                    </div>
	                    <p>He Scott, great article. Appreciate it. Keep up the good work. </p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3115859">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 4:23 AM
                            by
                            kangnoz
                            
	                    </div>
	                    <p>someone said LINQ to SQL is slower than SQL.</p>
<p>Is it real?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3117931">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 8:59 AM
                            by
                            <a title="Andy Barker" rel="nofollow" href="http://areyouwearingahelmet.blogspot.com/">Andy Barker</a>
                            
	                    </div>
	                    <p>Another good one, Scott! One thing I'm curious about is how one would use LINQ-to-SQL to create relationships that span multiple databases rather than multiple tables in the same database. Does the O/RM designer allow you to wire-up multiple database instances?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3118401">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 10:15 AM
                            by
                            André Cardoso
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>I have a question about the RemoveAll method and the corresponding SQL query: does it removes the products one by one (delete from ... where productId = x) or does it delete the set (delete from ... where condition)?</p>
<p>Thanks</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3118820">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 11:00 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Andy,</p>
<p>&gt;&gt;&gt;&gt; Another good one, Scott! One thing I'm curious about is how one would use LINQ-to-SQL to create relationships that span multiple databases rather than multiple tables in the same database. Does the O/RM designer allow you to wire-up multiple database instances?</p>
<p>Each DataContext maps back to a single database instance. &nbsp;However, you can create multiple DataContexts, with one pointing to each database.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3118876">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 11:06 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi kangnoz,</p>
<p>&gt;&gt;&gt;&gt;&gt; someone said LINQ to SQL is slower than SQL. Is it real? </p>
<p>In general performance really depends on what you are doing. &nbsp;If you have extremely well written SQL queries, then in general you aren't going to find that O/RM implementations are faster (since they execute SQL under the covers themselves). &nbsp;However, in general I'd say you also won't find O/RM implementations to be much slower either - since they typically execute good SQL and employ perf best practices - something which I've found the majority of developers code often doesn't.</p>
<p>Rico has published some good performance comparisons of LINQ to SQL to raw ADO.NET DataReaders on this blog. &nbsp;You can read more about it here: <a rel="nofollow" target="_new" href="http://blogs.msdn.com/mattwar/archive/2007/07/05/linq-to-sql-rico-drops-the-other-shoe.aspx">blogs.msdn.com/.../linq-to-sql-rico-drops-the-other-shoe.aspx</a></p>
<p>In this test LINQ to SQL when using compiled queries was within 7% of using a raw firehose SQLDataReader when retrieving data, and was actually slightly faster that the hand-coded ADO.NET SQL for updates.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3119735">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 12:01 PM
                            by
                            Mohammad Azam
                            
	                    </div>
	                    <p>Hi Scott, </p>
<p>&gt;&gt;&gt;Deleting the object the way I showed will require a fetch from the database. &nbsp;But doing so &gt;&gt;&gt;ensures that all validation logic you've applied to your data model successfully executes &gt;&gt;&gt;prior to the deletion being committed.</p>
<p>I think fetching the object before deleting it can cause performance problems. The reason is what if the object have multiple foreign keys and it retrieves all the data from the other table? What if the object is heavily populated with lots of fields? </p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3120022">#</a>
	                        <span>
	                            Validation and Business Logic using LINQ to SQL
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 12:19 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://blogs.msdn.com/publicsector/archive/2007/07/12/validation-and-business-logic-using-linq-to-sql.aspx">Public Sector Developer Weblog</a>
                            
	                    </div>
	                    <p>I have spoken to quite a few customers about LINQ &amp;amp; LINQ to SQL over the last few months. Oddly enough,</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3120409">#</a>
	                        <span>
	                            Validation and Business Logic using LINQ to SQL
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 12:43 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://geeks.ms/blogs/roller/archive/2007/07/12/validation-and-business-logic-using-linq-to-sql.aspx">Noticias externas</a>
                            
	                    </div>
	                    <p>I have spoken to quite a few customers about LINQ &amp;amp; LINQ to SQL over the last few months. Oddly enough</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3120451">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 12:47 PM
                            by
                            Ryan Haney
                            
	                    </div>
	                    <p>Scott,</p>
<p>Most of this is just what I have been looking for in LINQ! &nbsp;Up until now, I had been using reflection to interrogate the internal change tracking mechanism for changed entities. Also, the validation events will allow me to clean up some of my existing code. It's nice to see some public APIs.</p>
<p>Thanks!</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3122576">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 3:13 PM
                            by
                            JasonBSteele
                            
	                    </div>
	                    <p>Scott,</p>
<p>Great article again Scott, but.. I see validation examples but no real business logic.</p>
<p>In my comment to Part 3 I said:</p>
<p>"For obvious reasons examples of implementing business logic can be pretty trivial (e.g. is ToDate &gt; FromDate). I think it would be of real value if something a bit more substantial could be shown that involves more than one enitity. For example: Is this a new Order, and if so deduct quantities from the Stock table for each Order Detail checking that they do not fall below 0." which you thought was a good suggestion. So I had to laugh when the example you gave was of comparing two dates! ;)</p>
<p>In your validation example above you say "Within this validation method I can check any of the entity's property values (and even obtain read-only access to its associated objects)"</p>
<p>So it looks like implementing business logic that affects other entities can't be done in </p>
<p>OnValidate(). Can other entities be updated during InsertOrder? Is this where I would put business logic rather than just validation logic?</p>
<p>Also, can I easily look at the original values of properties, or even collections of related entities? (It was a shame that with stongly typed datasets you had to go back up to the Object typed DataRow("FieldName", OriginalValue) to get to original values)</p>
<p>Thanks again for all the time you devote to communicating these ideas and answering our questions,</p>
<p>Jason</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3123138">#</a>
	                        <span>
	                            LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 4:23 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog.htm">LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3124022">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 6:39 PM
                            by
                            André Cardoso
                            
	                    </div>
	                    <p>How does the RemoveAll statement gets translated to SQL? As a series of "delete from Products where ProductId = x" or as "delete from Products where ProductId in (initial query)" or as "delete from Products where ProductId in (x, y, z)"</p>
<p>Thanks for the great series on Linq.</p>
<p>André Cardoso</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3125615">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 12, 2007 9:45 PM
                            by
                            Steve
                            
	                    </div>
	                    <p>Thanks for this post very helpfull. &nbsp;Although when will beta 2 be shipping so we can try partial methods ? &nbsp;or can you give an example of OnPhoneChanging without partial method use for us still on beta 1 ? &nbsp;</p>
<p>Also in a future post could you please give us an example of how we can move Linq over the internet to say a Silverlight client or do you know of an existing sample that does this ? &nbsp;eg. have a silverlight client get data from linq on the server user changes data in client and sends back to server for update. &nbsp;</p>
<p>Thanks again, </p>
<p>Steve</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3128821">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 4:32 AM
                            by
                            Dennis
                            
	                    </div>
	                    <p>How do you do caching? Is it possible to intercept calls to e.g. .Single and serve an item from cache? How do you then do invalidation of same?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3128918">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 4:51 AM
                            by
                            Paraag
                            
	                    </div>
	                    <p>Hello Scott,</p>
<p>Any Idea which tools/advantages Visual Web Developer &nbsp;will carry for LINQ, when compared with VS2008. I am talking about SQL Designer, OR/M facilities, etc.</p>
<p>Are there any important tools/advantages missing for LINQ in VWD...?</p>
<p>Will we have VWD- BETA 2 for.Net 3.5.</p>
<p>Pl. guide us.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3132055">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 11:51 AM
                            by
                            <a title="Koistya `Navin" rel="nofollow" href="http://navin.biz/">Koistya `Navin</a>
                            
	                    </div>
	                    <p>Naming convention question: How should I name SQL Server 2005 Db tables, ex.: [Membership].[User] or [Membership].[Users] (with or without 's' at the end of each table's name)?</p>
<p>..with respect to LINQ to SQL db model designing.</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3132294">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 12:12 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Mohammad,</p>
<p>&gt;&gt;&gt;&gt; I think fetching the object before deleting it can cause performance problems. The reason is what if the object have multiple foreign keys and it retrieves all the data from the other table? What if the object is heavily populated with lots of fields? </p>
<p>LINQ to SQL supports the ability to lazily populate associations - which means that if the object you are deleting has foreign key relationships, you do not need to retrieve the other data from the other rows. &nbsp;</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3132357">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 12:14 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi André,</p>
<p>&gt;&gt;&gt;&gt;&gt; How does the RemoveAll statement gets translated to SQL? As a series of "delete from Products where ProductId = x" or as "delete from Products where ProductId in (initial query)" or as "delete from Products where ProductId in (x, y, z)"</p>
<p>The Remove statements will be executed as delete statements that remove each row (not as a filter on the actual property - but rather one that filters by productID).</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3132375">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 12:14 PM
                            by
                            <a title="Vikram" rel="nofollow" href="http://www.vikramlakhotia.com/">Vikram</a>
                            
	                    </div>
	                    <p>Can we also have video of these stuff in action. I hope I am not asking for too much</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3132423">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 12:16 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Dennis,</p>
<p>&gt;&gt;&gt;&gt; How do you do caching? Is it possible to intercept calls to e.g. .Single and serve an item from cache? How do you then do invalidation of same?</p>
<p>By default, if you perform the same query twice on the same DataContext, the second call will automatically be served from the cache. &nbsp;</p>
<p>You could alternatively build a richer cache mechanism that took LINQ queries and then first resolved them against a local cache before accessing the remote database. &nbsp;This isn't built-in today - although the hooks are there to enable it. &nbsp;Hopefully someone will go ahead and implement it!</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3132618">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 12:20 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Steve,</p>
<p>&gt;&gt;&gt;&gt;&gt; Thanks for this post very helpfull. &nbsp;Although when will beta 2 be shipping so we can try partial methods ? &nbsp;or can you give an example of OnPhoneChanging without partial method use for us still on beta 1 ? &nbsp;</p>
<p>Beta2 will be out shortly (next week or so) so it is probably best to just wait and use that. :-) </p>
<p>&gt;&gt;&gt;&gt;&gt; Also in a future post could you please give us an example of how we can move Linq over the internet to say a Silverlight client or do you know of an existing sample that does this ? &nbsp;eg. have a silverlight client get data from linq on the server user changes data in client and sends back to server for update. &nbsp;</p>
<p>Yep - this is on the list to blog. &nbsp;One of the powerful things about Silverlight is that it supports LINQ on the client, which enables a bunch of really powerful scenarios (where you can use LINQ to SQL on the server to retrieve data - send it down to the client, and then use LINQ to Objects to locally query it, make updates, and then send it back).</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3132752">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 12:23 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi JasonBSteele,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; In your validation example above you say "Within this validation method I can check any of the entity's property values (and even obtain read-only access to its associated objects)" &nbsp;So it looks like implementing business logic that affects other entities can't be done in OnValidate(). Can other entities be updated during InsertOrder? Is this where I would put business logic rather than just validation logic?</p>
<p>You can access any of the other entity objects within the OnValidate and OnPropertyChanging events - you just want to avoid modifying them (which you really shouldn't do with validation anyway).</p>
<p>For adding additional logic to insert/change more entities, you can do this either within the InsertOrder() method, or by adding your own method to the DataContext that you call manually for inserts - and in which you encapsulate all of the creation/update logic.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3132806">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 12:25 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Koistya `Navin,</p>
<p>&gt;&gt;&gt;&gt;&gt; Naming convention question: How should I name SQL Server 2005 Db tables, ex.: [Membership].[User] or [Membership].[Users] (with or without 's' at the end of each table's name)? &nbsp;..with respect to LINQ to SQL db model designing.</p>
<p>LINQ to SQL supports automatic "pluralization" within the LINQ to SQL designer. &nbsp;This means that you can name a table "Users", "Products", "Orders", etc - and the data model classes generated will automatically be named "User", "Product", "Order" (no s). &nbsp;</p>
<p>You can always override the names though within the LINQ to SQL designer, though, so if you don't like the default name you can easily change it to whatever you want.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3132861">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 12:27 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Vikram,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; Can we also have video of these stuff in action. I hope I am not asking for too much</p>
<p>We'll definitely be doing a lot of videos showing LINQ to SQL off. &nbsp;Here is an old one from January of this year of me doing a basic one: <a rel="nofollow" target="_new" href="http://weblogs.asp.net/scottgu/archive/2007/01/28/video-using-linq-with-asp-net-in-vs-orcas-part-1.aspx">weblogs.asp.net/.../video-using-linq-with-asp-net-in-vs-orcas-part-1.aspx</a></p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3132895">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 12:28 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Paraag,</p>
<p>&gt;&gt;&gt;&gt;&gt; Any Idea which tools/advantages Visual Web Developer &nbsp;will carry for LINQ, when compared with VS2008. I am talking about SQL Designer, OR/M facilities, etc. Are there any important tools/advantages missing for LINQ in VWD...?</p>
<p>All of the LINQ to SQL features - both the runtime as well as all of the designer/tool support - is available in the free Visual Web Developer Express edition. &nbsp;So you don't miss anything. </p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3133230">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 12:53 PM
                            by
                            <a title="Josh Stodola" rel="nofollow" href="http://blog.josh420.com/">Josh Stodola</a>
                            
	                    </div>
	                    <p>Thanks Scott, I will be looking forward to the VB examples. &nbsp;I can totally understand how it would have been confusing to originally include both samples.</p>
<p>THANK YOU VERY MUCH!!</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3133399">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 12:59 PM
                            by
                            Ben Hayat
                            
	                    </div>
	                    <p>Hi Scott;</p>
<p>One of your answers prompted another question:</p>
<p>&gt;&gt;Yep - this is on the list to blog. &nbsp;One of the powerful things about Silverlight is that it supports LINQ on the client, which enables a bunch of really powerful scenarios (where you can use LINQ to SQL on the server to retrieve data - send it down to the client, and then use LINQ to Objects to locally query it, make updates, and then send it back).&lt;&lt;</p>
<p>The SilverLight (SilverBullet) is going to solve many current issues for developing and deploying thin clients. Currently, for my thin client, I have to worry about installing all the .Net (if client doesn't have), all the DLLs and any third party DLL.</p>
<p>If I develop a SilverLight app using C# that uses some third party DLL, and when the consumer wants to run my silverlight app, does the SilverLight deployment system(engine), downloads and installs any of my DLLs that I'm using in my App.?</p>
<p>Thanks!</p>
<p>P.S. I think SilverLight is going to be a major direction for new developments...</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3135607">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 2:39 PM
                            by
                            JasonBSteele
                            
	                    </div>
	                    <p>Scott,</p>
<p>Thanks for the feedback on wgere to put business rules.</p>
<p>I also mentioned being able to get at original values:</p>
<p>&gt;Also, can I easily look at the original values of properties, or &gt;even collections of related entities? (It was a shame that with &gt;stongly typed datasets you had to go back up to the Object typed &gt;DataRow("FieldName", OriginalValue) to get to original values)</p>
<p>Will they be available for use within my business logic, or will they only be available in the scope of the OnPropertyChanging? Using your example above you could use this.phoneNumber to get the original value before it is changed, but ideally the original value would always be available. </p>
<p>On a different subject, I tried returning one of the Entity objects from a web service but it complained about not being able to serialise circular references. I can't find much ino on the Detach and Attach methods - should I be Detaching it first?</p>
<p>Many thanks,</p>
<p>Jason</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3136349">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 3:17 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Ben,</p>
<p>&gt;&gt;&gt;&gt;&gt; If I develop a SilverLight app using C# that uses some third party DLL, and when the consumer wants to run my silverlight app, does the SilverLight deployment system(engine), downloads and installs any of my DLLs that I'm using in my App.?</p>
<p>If you reference an assembly from a Silverlight application, it will automatically be downloaded and run by Silverlight. &nbsp;You don't need to copy/deploy it onto a client machine manually.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3136727">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 4:00 PM
                            by
                            Kiran
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>I am not yet very familiar with LINQ to SQL, started to learn. My question is "are there any chances for vulnerabilities like SQL Injection because of using LINQ to SQL in web applications"?</p>
<p>Thanks</p>
<p>Kiran</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3136765">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 4:02 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Kiran,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; "are there any chances for vulnerabilities like SQL Injection because of using LINQ to SQL in web applications"?</p>
<p>LINQ to SQL is typesafe and automatically encodes all parameters correctly. &nbsp;This protects you against SQL Injection attacks.</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3137095">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 4:57 PM
                            by
                            Ben Hayat
                            
	                    </div>
	                    <p>&gt;&gt;If you reference an assembly from a Silverlight application, it will automatically be downloaded and run by Silverlight. &nbsp;You don't need to copy/deploy it onto a client machine manually.&lt;&lt;</p>
<p>Man-o-man! I think I'm falling in love ;-)</p>
<p>So when do you think we can Rock &amp; Roll with SilverLight and LINQ? Did you say about six (long) months?</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3138089">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 7:14 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Jason,</p>
<p>&gt;&gt;&gt;&gt;&gt; Will they be available for use within my business logic, or will they only be available in the scope of the OnPropertyChanging? Using your example above you could use this.phoneNumber to get the original value before it is changed, but ideally the original value would always be available. </p>
<p>In Beta2 you can use the "GetOriginalEntityState" method from within your DataContext partial class to retrieve an instance of </p>
<p>partial void UpdateCustomer(Customer instance) {</p>
<p> &nbsp; &nbsp;Customer original = this.Customers.GetOriginalEntityState(current);</p>
<p> &nbsp; &nbsp;// todo...</p>
<p>}</p>
<p>You can then do whatever comparison you want with this and the new value to be updated.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3138830">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 13, 2007 8:00 PM
                            by
                            <a title="Juan Mar&amp;#195;ƒ&amp;#194;&amp;#173;a" rel="nofollow" href="http://thinkingindotnet.wordpress.com/">Juan MarÃƒÂ­a</a>
                            
	                    </div>
	                    <p>Great and extensive post.</p>
<p>You can read in spanish here:</p>
<p><a rel="nofollow" target="_new" href="http://thinkingindotnet.wordpress.com/2007/07/13/linq-to-sql-4%c2%aa-parte-actualizando-la-base-de-datos/">thinkingindotnet.wordpress.com/.../linq-to-sql-4%c2%aa-parte-actualizando-la-base-de-datos</a></p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3144204">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, July 14, 2007 7:31 AM
                            by
                            Steve
                            
	                    </div>
	                    <p>Thanks for the reply sounds great and beta 2 out so soon you made my weekend. &nbsp;I cant wait for that linq to sql to object to linq to silverlight and back down again demo ;) .</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3144355">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, July 14, 2007 7:53 AM
                            by
                            <a title="Majid Shahabfar" rel="nofollow" href="http://www.persiadevelopers.com/">Majid Shahabfar</a>
                            
	                    </div>
	                    <p>Dear Scott,</p>
<p>Thanks for great LINQ to SQL blog series.</p>
<p>Now I want to know which one is faster, using LINQ to SQL or SPROC?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3144841">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, July 14, 2007 9:23 AM
                            by
                            JasonBSteele
                            
	                    </div>
	                    <p>Scott,</p>
<p>Thanks for your reply GetOriginalEntityState seems ideal :)</p>
<p>The second part of my previous quote asked "I tried returning one of the Entity objects from a web service but it complained about not being able to serialise circular references. I can't find much ino on the Detach and Attach methods - should I be Detaching it first?"</p>
<p>Also, a few other posts have mentioned using a LINQ to SQL DataContext from a remote (Silverlight) client.</p>
<p>What's the story about about round tripping entity objects. Will we have to wait for Astoria (<a rel="nofollow" target="_new" href="http://astoria.mslivelabs.com/">http://astoria.mslivelabs.com</a>) before we have the complete solution?</p>
<p>I aprreciate that this subject is worthy of a Part of it's own and maybe outside of what you want to cover.</p>
<p>Many thanks,</p>
<p>Jason</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3155026">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Sunday, July 15, 2007 12:13 PM
                            by
                            <a title="Zubair.NET!" rel="nofollow" href="http://zubairdotnet.blogspot.com/">Zubair.NET!</a>
                            
	                    </div>
	                    <p>When extending the DataContext class for using 'Custom Entity Insert/Update/Delete Method Validation', am I limited to using method names as 'InsertOrder' or 'UpdateOrder' or can I change them to something else for instance 'AddOrder' and let the framework trigger this method instead?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3159115">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Sunday, July 15, 2007 3:56 PM
                            by
                            Ben Hayat
                            
	                    </div>
	                    <p>Hi Scott;</p>
<p>As I'm following your blogs on SQL to LINQ, I can't help it to close or dismiss the other technology that MS is cooking (ADO.Net Entity Framework). I'm a bit perplex as to the existence of these two technologies side by side.</p>
<p>Using the visual designer and creating a datacontext, can give us a well rounded ORM that encapsulates the ORM part and relationships. What does ADO.Net EF offers that SQL To Linq doesn't? What will be the future? Is SQL To LINQ a stepping stone to ADO.Net EF?</p>
<p>Can you shed some light on this issue please?</p>
<p>Thanks!</p>
<p>..Ben</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3159995">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Sunday, July 15, 2007 6:29 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Jason,</p>
<p>&gt;&gt;&gt;&gt; The second part of my previous quote asked "I tried returning one of the Entity objects from a web service but it complained about not being able to serialise circular references. I can't find much ino on the Detach and Attach methods - should I be Detaching it first?"</p>
<p>I will add this topic to my list to blog about in the future. &nbsp;It is probably worthy of its own blog post (I also need to-do a little more research to get the right answer &lt;g&gt;).</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3160002">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Sunday, July 15, 2007 6:31 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Zubair,</p>
<p>&gt;&gt;&gt;&gt; When extending the DataContext class for using 'Custom Entity Insert/Update/Delete Method Validation', am I limited to using method names as 'InsertOrder' or 'UpdateOrder' or can I change them to something else for instance 'AddOrder' and let the framework trigger this method instead?</p>
<p>The InsertOrder, UpdateOrder, etc methods I talked about above were validation methods - and so can logically be considered internal to the DataContext. &nbsp;They provide you with a single point to add your validation and business rules logic.</p>
<p>You can absolutely add additional methods to the DataContext which are then callable from outside. &nbsp;Just add them to the DataContext's partial class, and you can then implement their logic however you want. &nbsp;When they go to persist an entity, the validation methods will also then fire for you to add domain specific validation logic there if you want.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3160015">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Sunday, July 15, 2007 6:40 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Ben,</p>
<p>&gt;&gt;&gt;&gt; Using the visual designer and creating a datacontext, can give us a well rounded ORM that encapsulates the ORM part and relationships. What does ADO.Net EF offers that SQL To Linq doesn't? What will be the future? Is SQL To LINQ a stepping stone to ADO.Net EF?</p>
<p>One of the things about data access is that different database scenarios sometimes require different mapping approaches, and different scenarios often dictate different needs at the ORM layer level.</p>
<p>What we've tried to-do with LINQ is to separate the query language and language integration layer from the data provider layer. &nbsp;This means you can use LINQ to web-services, databases, XML files, or plain old objects using a standard programming model and query syntax. &nbsp;It also means you can plug-in whatever ORM implementation works best for you - whether it is LINQ to SQL, LINQ to Entities, LINQ to NHibernate, etc.</p>
<p>In terms of specific differences between LINQ to SQL and LINQ to Entities, LINQ to Entities provides some richer mapping capabilities (for example: native M:M relationship support and a few other nice things) that you can use. &nbsp;However, for 90%+ of application scenarios I find LINQ to SQL perfect for my needs, and it has great designer and tooling support today that makes it really productive to use.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3166943">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, July 16, 2007 6:38 AM
                            by
                            <a title="Eddy Young" rel="nofollow" href="http://priscimon.com/blog">Eddy Young</a>
                            
	                    </div>
	                    <p>Hello Scott,</p>
<p>Thanks for the great series on LINQ. Everything I have read so far is very promising, and I'm looking forward to using LINQ in my applications.</p>
<p>I have a question that I have not seen addressed in any of your blogs: how does LINQ address object equality? Say, you execute two LINQ queries that return the same record, are the two objects representing equal in anyway? Would an update to one affect the other?</p>
<p>Thanks,</p>
<p>Eddy</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3170379">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, July 16, 2007 9:39 AM
                            by
                            Generating and discovering datacontexts on the fly
                            
	                    </div>
	                    <p>I have an application with a static configuration database and an unknown number of content databases with unknown structures. I hold the meta-data for these databases in the configuration database (similar to SharePoint, except the structure of a SharePoint content database is known in advance).</p>
<p>Can I use LINQ to access the content databases? The only thing I can think of that might work is generating sprocs in the content database to present a common interface.</p>
<p>Any suggestions?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3170618">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, July 16, 2007 10:04 AM
                            by
                            AzamSharp
                            
	                    </div>
	                    <p>Hi Scott, </p>
<p>Thanks for all the answers. I am thinking of using LINQ, DLINQ in one of my projects but I am having a huge layering problem. How do you layer your application when you are using DLINQ? In your examples your are creating the database connection on the client side like the following: </p>
<p>Northwind northwind = new Northwind(connectionString); </p>
<p>I don't want to do this on the client side. But the problem is that even if I put that in the separate project the client will still be able to access it since the classes and the dbml (mapping) files are generated inside the same project. Is there any way to create a DLINQ application in which the client is not able to create a direct connection to the database like Northwind n = new Northwind(connectionString); I prefer the following method: </p>
<p>PersonManager.GetPersonByID(34); </p>
<p>Thanks</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3182427">#</a>
	                        <span>
	                            LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 2:03 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx">ScottGu's Blog</a>
                            
	                    </div>
	                    <p>Over the last few weeks I've been writing a series of blog posts that cover LINQ to SQL. LINQ to SQL</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3183227">#</a>
	                        <span>
	                            LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 3:14 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://labnet.cc.isel.ipl.pt/blogs/aspnet/archive/2007/07/17/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx">ASP.NET</a>
                            
	                    </div>
	                    <p>Over the last few weeks I've been writing a series of blog posts that cover LINQ to SQL. LINQ to SQL</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3193229">#</a>
	                        <span>
	                            ASP.NET 3.5 will have a LinqDataSource
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 4:43 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://blogs.msdn.com/publicsector/archive/2007/07/17/asp-net-3-5-will-have-a-linqdatasource.aspx">Public Sector Developer Weblog</a>
                            
	                    </div>
	                    <p>I've been delivering a "What's New for Web Developers in Visual Studio 2008 &amp;amp; the Microsoft ASP.NET</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3193620">#</a>
	                        <span>
	                            ASP.NET 3.5 will have a LinqDataSource
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 5:25 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://geeks.ms/blogs/roller/archive/2007/07/17/asp-net-3-5-will-have-a-linqdatasource.aspx">Noticias externas</a>
                            
	                    </div>
	                    <p>I&amp;#39;ve been delivering a &amp;quot;What&amp;#39;s New for Web Developers in Visual Studio 2008 &amp;amp; the Microsoft</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3200651">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 2:25 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Eddy,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; I have a question that I have not seen addressed in any of your blogs: how does LINQ address object equality? Say, you execute two LINQ queries that return the same record, are the two objects representing equal in anyway? Would an update to one affect the other?</p>
<p>LINQ to SQL provides object equality. &nbsp;This means that if you have two separate LINQ queries that both return the same record, each query will return back the same object instance that represents it. &nbsp;This means that if you update it in one place, the change will be reflected consistently (which is the right behavior).</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3200718">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 2:32 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Generating and discovering datacontexts on the fly,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; I have an application with a static configuration database and an unknown number of content databases with unknown structures. I hold the meta-data for these databases in the configuration database (similar to SharePoint, except the structure of a SharePoint content database is known in advance).</p>
<p>I don't think LINQ to SQL would work that well for this scenario. &nbsp;But you could build your own LINQ provider that handled this. &nbsp;Bart has a cool post on building a LINQ provider for SharePoint that might help: <a rel="nofollow" target="_new" href="http://community.bartdesmet.net/blogs/bart/archive/2007/06/18/linq-to-sharepoint-announcing-the-0-2-alpha-release.aspx">community.bartdesmet.net/.../linq-to-sharepoint-announcing-the-0-2-alpha-release.aspx</a></p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3200730">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 2:34 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi AzamSharp,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; I don't want to do this on the client side. But the problem is that even if I put that in the separate project the client will still be able to access it since the classes and the dbml (mapping) files are generated inside the same project. Is there any way to create a DLINQ application in which the client is not able to create a direct connection to the database like Northwind n = new Northwind(connectionString); I prefer the following method: </p>
<p>One approach you could use would be to make the NorthwindDataContext internal, and then subclass your own public class that only had a constructor that took no arguments. &nbsp;That way you could prevent a user instantiating the NorthwindDataContext with a custom connectionstring.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3204689">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 7:02 AM
                            by
                            Andrew Myhre
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>First - thanks for everything you're doing for .Net and people like me.</p>
<p>In a situation where I'm using AJAX over Web Services, let's say my service provides a method SaveCategory(Category myCategory).</p>
<p>The myCategory object is not associated with my DataContext, and if I wanted to use the method equally for Insert and Update operations, there may not be corresponding data in the data store.</p>
<p>Is the DataContext.Category.Attach() method intended for this situation? Does it place the myCategory object within the DataContext, so that I can persist changes?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3206137">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 8:11 AM
                            by
                            Dave
                            
	                    </div>
	                    <p>Thanks for the posts Scott. They have been really helpful. Regarding the DataContext stuff, I will probably just go back to the 'old' way, since there are already a lot of learning curves in this project!</p>
<p>Thanks again!</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3206142">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 8:12 AM
                            by
                            <a title="Eddy Young" rel="nofollow" href="http://priscimon.com/blog">Eddy Young</a>
                            
	                    </div>
	                    <p>Thank you very much for your answer, Scott. I guess the next question is, how would this work in a distributed system? :-)</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3207574">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 11:26 AM
                            by
                            SteveP
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>Great post, however there is something i am finding hard to get info about. In ASP.Net is it possible to modify a dataset over a number of postbacks then submit the changes at the end? The problem I see currently is that the same datacontext which was initially used to get the dataset needs to be used when the changes are submitted. Storing the dataset in session as it is being modified does not feel too bad, but would I have to store the datacontext as well? Many thanks.</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3207590">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 11:30 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi SteveP,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Great post, however there is something i am finding hard to get info about. In ASP.Net is it possible to modify a dataset over a number of postbacks then submit the changes at the end? The problem I see currently is that the same datacontext which was initially used to get the dataset needs to be used when the changes are submitted. Storing the dataset in session as it is being modified does not feel too bad, but would I have to store the datacontext as well? Many thanks.</p>
<p>LINQ to SQL has the ability to disconnect and then later attach a data model object to a DataContext. &nbsp;So what you'd end up doing is rendering the page initially, and then have the DataContext go out of scope. &nbsp;On a subsequent postback you could then attach the DataModel back to a new DataContext for saving it. &nbsp;I'll cover this in a future blog post.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3207608">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 11:32 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Andrew,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; In a situation where I'm using AJAX over Web Services, let's say my service provides a method SaveCategory(Category myCategory). &nbsp;The myCategory object is not associated with my DataContext, and if I wanted to use the method equally for Insert and Update operations, there may not be corresponding data in the data store. &nbsp;Is the DataContext.Category.Attach() method intended for this situation? Does it place the myCategory object within the DataContext, so that I can persist changes?</p>
<p>Yep - the Attach() method on the DataContext will be what you are after. &nbsp;I'm going to try and do a dedicated blog post on this in the future to walkthrough how you can use it.</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3207956">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 12:16 PM
                            by
                            SteveP
                            
	                    </div>
	                    <p>thanks for the response. I assume this will be a beta2 feature? as the change tracking is currently being done in the datacontext, i guess there is no way at the moment that the new data context would know what has changed in the data model in the meantime (especially regarding deletes).</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3228051">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 19, 2007 7:12 PM
                            by
                            James
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>Thanks for this clarification - Is one able to access a query as an object? E.g. can it be passed as a parameter to something else (as in NHibernate)?</p>
<p>The ability to do that is really useful for this scenario: One has a general query, which is reused by methods that just add on their specific criteria before retrieval.</p>
<p>E.g (this it the NH approach, so lacks the sugar of LINQ, but the idea should be clear)</p>
<p>IQuery q = GetGeneralQuery();</p>
<p>q.Add(cond);</p>
<p>ExecuteQuery(q);</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3238073">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 20, 2007 11:24 AM
                            by
                            AzamSharp
                            
	                    </div>
	                    <p>&gt;&gt;&gt;One approach you could use would be to make the NorthwindDataContext internal, and then subclass your own public class &gt;&gt;&gt;that only had a constructor that took no arguments. &nbsp;That way you could prevent a user instantiating the &gt;&gt;&gt;NorthwindDataContext with a custom connectionstring.</p>
<p>Hi Scott, </p>
<p>You cannot make the NorthwindDataContext internal and then make a custom class which inherits from the NorthwindDataContext. If you make the NorthwindDataContext class as internal then you cannot have a subclass which is public since it will be more accessible then its base class. </p>
<p>Also, you cannot do any changes in the NorthwindDataContext.designer.cs class since the next time you build the application your changes will be gone. </p>
<p>If seems that DLINQ is forcing a developer to write the data access code in the UI!!</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3248796">#</a>
	                        <span>
	                            LINQ to SQL (パート 4 - データベースの更新)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Sunday, July 22, 2007 1:18 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://blogs.wankuma.com/chicasharp/archive/2007/07/22/86435.aspx">Chica's Blog</a>
                            
	                    </div>
	                    <p>LINQ to SQL (パート 4 - データベースの更新)</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3267667">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 24, 2007 2:16 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi James,</p>
<p>&gt;&gt;&gt;&gt;&gt; Thanks for this clarification - Is one able to access a query as an object? E.g. can it be passed as a parameter to something else (as in NHibernate)? &nbsp;The ability to do that is really useful for this scenario: One has a general query, which is reused by methods that just add on their specific criteria before retrieval. &nbsp;E.g (this it the NH approach, so lacks the sugar of LINQ, but the idea should be clear)</p>
<p>IQuery q = GetGeneralQuery();</p>
<p>q.Add(cond);</p>
<p>ExecuteQuery(q);</p>
<p>Yes - you can pass queries as parameters. &nbsp;They are strongly typed Func&lt;T&gt; objects - so you also preserve type-checking when you do this.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3287583">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 26, 2007 4:38 PM
                            by
                            Chien-Hao (Benjamin) Chi
                            
	                    </div>
	                    <p>This is awesome! It covers many real world scenarios.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3342593">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 31, 2007 12:57 PM
                            by
                            Alexander
                            
	                    </div>
	                    <p>Hi Scott!</p>
<p>I have a question: what result type will Linq to Sql generate for such stored procedure:</p>
<p>CREATE &nbsp;PROCEDURE dbo.pr_some </p>
<p>AS</p>
<p>SELECT *</p>
<p>FROM dbo.table1</p>
<p>SELECT *</p>
<p>FROM dbo.table2</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3350464">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 01, 2007 2:02 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Alexander,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; I &nbsp;have a question: what result type will Linq to Sql generate for such stored procedure:</p>
<p>CREATE &nbsp;PROCEDURE dbo.pr_some </p>
<p>AS</p>
<p>SELECT *</p>
<p>FROM dbo.table1</p>
<p>SELECT *</p>
<p>FROM dbo.table2</p>
<p>By default when you use the LINQ to SQL designer the above stored procedure will generate a new entity class whose structure maps to the return type of the SPROC. If you have an existing entity that matches this signature, you can optionally drag the sproc onto it in the designer in order to generate a method that returns a datatype typed as that entity class.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3352446">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 01, 2007 4:02 AM
                            by
                            Alexander
                            
	                    </div>
	                    <p>Hi Scott!</p>
<p>Thank you for your answer, but how can I create entity class that will store data from two select statements? In SqlDataReader I could use NextResult method. Is there anything like this in LINQ to SQL?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3374417">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, August 02, 2007 5:45 PM
                            by
                            <a title="erkan saldır" rel="nofollow" href="http://www.erkansaldir.com/">erkan saldır</a>
                            
	                    </div>
	                    <p>Thank you for great articles</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3383998">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, August 03, 2007 12:29 PM
                            by
                            Houman
                            
	                    </div>
	                    <p>Hello Scott,</p>
<p>How would you retrieve the Category Entity for a Product with ProductID == 2?</p>
<p>Obviously you could search for a product with that ProductID and retrieve the CategoryID then in a second call you could search for the Category with that CategoryID. But these are two calls. &nbsp;Is there a simpler way in one line? &nbsp;Or just in general how would you write this in your style?</p>
<p>Many Thanks,</p>
<p>Houman</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3401941">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Sunday, August 05, 2007 1:14 PM
                            by
                            bill burrows
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>Great series! Thanks bunch. I am trying the "adding a new order" code from your "Updates across Relationships" section. Whne I try this as a web application, the update works fine. However, if I create a windows application and try the same code, the database does not get updated. Do you have any ideas of why?</p>
<p>Thanks.</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3408865">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, August 06, 2007 1:31 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Bill,</p>
<p>&gt;&gt;&gt;&gt;&gt; Great series! Thanks bunch. I am trying the "adding a new order" code from your "Updates across Relationships" section. Whne I try this as a web application, the update works fine. However, if I create a windows application and try the same code, the database does not get updated. Do you have any ideas of why?</p>
<p>That sounds pretty odd. &nbsp;Are you sure the code is the same? &nbsp;LINQ to SQL is definitely supported with windows applications as well, so should work fine.</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3408909">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, August 06, 2007 1:35 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Houman,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; How would you retrieve the Category Entity for a Product with ProductID == 2?</p>
<p>You should be able to write this code:</p>
<p>Category c = northwind.Products.Single(p=&gt;p.ProductID == 2).Select(p=&gt;p.Category);</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3445694">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, August 09, 2007 4:25 AM
                            by
                            <a title="Kangnoz" rel="nofollow" href="http://kangnoz/">Kangnoz</a>
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>You said,We can add a partial class for our "Order" entity and implement the OnValidate() partial method that will be invoked prior to the entity's values being persisted into the database.</p>
<p>I can't find the invoking code of OnValidate method,after trace the application,I think it invoked at the beginning of SubmitChanges() method. But OnValidate is a private method, how did it invoked?</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3448340">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, August 09, 2007 1:52 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Kangnoz,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; You said,We can add a partial class for our "Order" entity and implement the OnValidate() partial method that will be invoked prior to the entity's values being persisted into the database. &nbsp;I can't find the invoking code of OnValidate method,after trace the application,I think it invoked at the beginning of SubmitChanges() method. But OnValidate is a private method, how did it invoked?</p>
<p>OnValidate is a partial method, and is called from the LINQ to SQL framework automatically. &nbsp;If you look in the code-generated by the LINQ to SQL designer I think you'll see the code where this happens.</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3454823">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, August 10, 2007 4:00 AM
                            by
                            manu
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>I'm trying to change the Default Methods (delete/insert/update) of entity classes, but the fields are disabled!</p>
<p>I'm using Visual Web Developer Express, is it a feauture of Visual Studio? </p>
<p>manu</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3524696">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, August 16, 2007 11:46 AM
                            by
                            Christian Nielsen
                            
	                    </div>
	                    <p>Hi Scott.</p>
<p>I've been looking a bit into designing a layered webapplication using LINQ to SQL in the middle tier. I can't seem to find a good way to handle something as simple as a standard update scenario in a stateless invironment. </p>
<p>Basically, how is a method like this supposed to be implemented:</p>
<p>public void Update(Person p)</p>
<p>{</p>
<p> &nbsp; &nbsp;DataContext db = new DataContext();</p>
<p> &nbsp; &nbsp;//What goes here?</p>
<p>}</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3528254">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, August 16, 2007 5:58 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Christian,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; I've been looking a bit into designing a layered webapplication using LINQ to SQL in the middle tier. I can't seem to find a good way to handle something as simple as a standard update scenario in a stateless invironment. </p>
<p>You can use the "Attach()" method on tables to add disconnected entities into the DataContext for tracking. &nbsp;There has been some confusion on how to use this - I'm planning on doing a detailed blog post that describes it in more detail.</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3608806">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, August 24, 2007 5:40 PM
                            by
                            <a title="Dave Sanders" rel="nofollow" href="http://www.steelsphere.com/">Dave Sanders</a>
                            
	                    </div>
	                    <p>Hi Scott, sorry so many questions today, but I'm finally able to spend a day digging into this stuff. &nbsp;</p>
<p>First question: is there a better place to post questions? :) &nbsp;Is there a newsgroup / list that you and others from MS are actually responding on? &nbsp;I don't typically have good luck on microsoft.public newsgroups.. :(</p>
<p>Second: how do you get an object to refresh its related objects with what's currently in the database? &nbsp;For example, I have Object A, which is related to Object B via a relationship. &nbsp;I go in and delete object B from the database, but when I ask A for its this.B.Count(), its still coming back as "1". &nbsp;But I can query the DB and see that object B is definitely gone.</p>
<p>thx</p>
<p>Dave (again :)</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3633524">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, August 27, 2007 8:16 AM
                            by
                            vik
                            
	                    </div>
	                    <p>i have bound a GridView with linqDataSource and there is a date column as well. now, i have created a TemplateColumn for displaying and the input of date since i am using AJAXCalendarExtender for date input. All the values in gridview are getting updated except the date. LinqDataSource is set to update automatically. any idea, what i am missing ?</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3636678">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, August 27, 2007 5:07 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Dave,</p>
<p>&gt;&gt;&gt;&gt;&gt; First question: is there a better place to post questions? :) &nbsp;Is there a newsgroup / list that you and others from MS are actually responding on? &nbsp;I don't typically have good luck on microsoft.public newsgroups.. :(</p>
<p>The LINQ forum is probably the best place to ask LINQ related questions: <a rel="nofollow" target="_new" href="http://forums.microsoft.com/MSDN/ShowForum.aspx?ForumID=123&SiteID=1">forums.microsoft.com/.../ShowForum.aspx</a></p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; Second: how do you get an object to refresh its related objects with what's currently in the database? &nbsp;For example, I have Object A, which is related to Object B via a relationship. &nbsp;I go in and delete object B from the database, but when I ask A for its this.B.Count(), its still coming back as "1". &nbsp;But I can query the DB and see that object B is definitely gone.</p>
<p>You should be able to call the DataContext.Refresh() method to refresh the current state of the database in your object graphs I believe.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3638577">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, August 27, 2007 8:00 PM
                            by
                            Eric
                            
	                    </div>
	                    <p>Hi, </p>
<p>What are the different way to update the generated entity classes when the database schema changes?</p>
<p>thanks,</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3641224">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, August 28, 2007 12:53 AM
                            by
                            <a title="JNatUK" href="http://weblogs.asp.net/user/Profile.aspx?UserID=4994">JNatUK</a>
                            
	                    </div>
	                    <p>Hi,</p>
<p>Thanks for the info very helpful. I created a new LINQ to SQL file using Orcas &amp; when I build my project I get a 'Invalid token 'void' in class, struct, or interface member declaration' on the designer file at the following lines </p>
<p> partial void OnLoaded();</p>
<p> &nbsp; &nbsp;partial void OnValidate();</p>
<p> &nbsp; &nbsp;partial void OnCreated();</p>
<p>This code is generated, how do i get rid of the error?</p>
<p>ta</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3648042">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, August 28, 2007 4:54 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi JNatUK,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Thanks for the info very helpful. I created a new LINQ to SQL file using Orcas &amp; when I build my project I get a 'Invalid token 'void' in class, struct, or interface member declaration' on the designer file at the following lines </p>
<p>Hmmm - are you doing this with Beta2? &nbsp;</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3648044">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, August 28, 2007 4:55 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Eric,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; What are the different way to update the generated entity classes when the database schema changes?</p>
<p>You can delete and recreate the entity using the LINQ to SQL designer, or chain the SqlMetal utility to run as part of your build process (to recreate the entities each time).</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3656714">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 29, 2007 11:35 AM
                            by
                            Stas
                            
	                    </div>
	                    <p>what would be a VB.NET equivalent of this line?</p>
<p>Category beverages = northwind.Categories.Single(c =&gt; c.CategoryName == 'Beverages');</p>
<p>thanks in advance.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3657068">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 29, 2007 12:34 PM
                            by
                            Michael
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>Great stuff - Very flexible and powerful ORM system, and very easy to use.</p>
<p>Two questions:</p>
<p>1 - Is there a bug in the way it deals with default dates in the database by default or am I doing something wrong?</p>
<p>I have a [CreatedDate] column with default GetUTCDate() value in the database. When I generate a LINQ to SQL class from the table and try to do an insert without explicitly setting the CreatedDate property, it tries to put 01/01/0001 into the column instead of letting SQL insert the current UTC date. The insert fails because of the invalid date. </p>
<p>2 - Is there as way to see what SQL that LINQ is generating and have it available to write to the debug window or include in an exception if there is a problem? In the above example, I got the usual invalid date time exception but it was initially difficult to tell what happened because I could not see the SQL or the parameters being passed. I did read that you typically use profiler to do this, but it would be helpful to have this available within the IDE while debugging as we don't have SA access in SQL server 2000 and can't run profiler, and also it would help in a production environment to see the SQL if an exception was thrown.</p>
<p>Thanks,</p>
<p>Michael</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3703260">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, September 01, 2007 8:02 PM
                            by
                            JPG
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>In a scenario with a Formview and LinqDataSource,</p>
<p>Is there a way to intercept the insert to modified the value of a specific field base on a Session variable?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3722561">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, September 03, 2007 3:46 PM
                            by
                            Marcel
                            
	                    </div>
	                    <p>HOw can your return the last IDENTITY with LINQ (like SELECT SCOPE_IDENTITY())?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3740889">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, September 04, 2007 11:47 PM
                            by
                            Colin
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>Thanks for all the great content on your blog. &nbsp;I've got a question that I've been unable to find the answer for: what is the story for cross-database CRUD operations in LINQ?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3779359">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, September 07, 2007 9:49 AM
                            by
                            <a title="JoeBuddha" href="http://weblogs.asp.net/user/Profile.aspx?UserID=4171">JoeBuddha</a>
                            
	                    </div>
	                    <p>I'm using Beta 2, and I can't seem to get the database to update. No matter how I set the ObjectTrackingEnabled, the associated databases are still flagged as read-only. I finally had to use the ExecuteCommand method to update by hand. Could I be missing something here?</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3796996">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, September 08, 2007 2:53 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Stas,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; what would be a VB.NET equivalent of this line? Category beverages = northwind.Categories.Single(c =&gt; c.CategoryName == 'Beverages');</p>
<p>Here is the VB equivalent:</p>
<p> &nbsp; &nbsp; Dim beverages = northwind.Categories.Single(Function(c) c.CategoryName = "Beverages")</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3797025">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, September 08, 2007 2:59 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Michael,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; 1 - Is there a bug in the way it deals with default dates in the database by default or am I doing something wrong?I have a [CreatedDate] column with default GetUTCDate() value in the database. When I generate a LINQ to SQL class from the table and try to do an insert without explicitly setting the CreatedDate property, it tries to put 01/01/0001 into the column instead of letting SQL insert the current UTC date. The insert fails because of the invalid date. </p>
<p>That is a good question. &nbsp;Can you send me an email (scottgu@microsoft.com) with details on this? &nbsp;I can then loop you in with folks on the LINQ to SQL team to investigate.</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 2 - Is there as way to see what SQL that LINQ is generating and have it available to write to the debug window or include in an exception if there is a problem? In the above example, I got the usual invalid date time exception but it was initially difficult to tell what happened because I could not see the SQL or the parameters being passed. I did read that you typically use profiler to do this, but it would be helpful to have this available within the IDE while debugging as we don't have SA access in SQL server 2000 and can't run profiler, and also it would help in a production environment to see the SQL if an exception was thrown.</p>
<p>There is a "Log" property on DataContext objects that you can use to retrieve the raw SQL query and command text being set to the database. &nbsp;I need to think of a way to easily hook this up in the context of an ASP.NET web application - but you should be able to use this. &nbsp;Typically what I personally do is just hook up the SQL Profiler at the database layer to watch what is going on.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3797042">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, September 08, 2007 3:01 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi JPG,</p>
<p>&gt;&gt;&gt;&gt;&gt; In a scenario with a Formview and LinqDataSource, Is there a way to intercept the insert to modified the value of a specific field base on a Session variable?</p>
<p>Yes - you can handle an Inserting event on the LinqDataSource or FormView control to inject additional values into the object (pulled from anywhere) before the insert happens.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#3797347">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 4 - Updating our Database)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, September 08, 2007 3:31 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Joe,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; I'm using Beta 2, and I can't seem to get the database to update. No matter how I set the ObjectTrackingEnabled, the associated databases are still flagged as read-only. I finally had to use the ExecuteCommand method to update by hand. Could I be missing something here?</p>
<p>Hmm - that is odd. &nbsp;Can you check to make sure your database has a primary key set? &nbsp;That is one possible issue that I can think of that might cause the entities to be read-only.</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#5612418">#</a>
	                        <span>
	                            Nathan Li&amp;#8217;s Blog  &amp;raquo; Blog Archive   &amp;raquo; Insert/Delete using LINQ to SQL in Visual Studio 2008
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, January 17, 2008 5:27 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://www.nathanli.net/?p=46">Nathan Li’s Blog  » Blog Archive   » Insert/Delete using LINQ to SQL in Visual Studio 2008</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;Nathan Li&amp;#8217;s Blog &nbsp;&amp;raquo; Blog Archive &nbsp; &amp;raquo; Insert/Delete using LINQ to SQL in Visual Studio 2008</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#5838522">#</a>
	                        <span>
	                            LINQ TO SQL CanBeNull being ignored
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, February 22, 2008 12:58 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://rocksthoughts.com/blog/archive/2008/02/22/linq-to-sql-canbenull-being-ignored.aspx">Rocks Thoughts</a>
                            
	                    </div>
	                    <p>LINQ TO SQL CanBeNull being ignored</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#5877883">#</a>
	                        <span>
	                            Detailed Look: Key components in LINQ to SQL and their Key Roles
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, February 28, 2008 9:19 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://userfriendlythinking.com/blogs/corey_gaudin/archive/2008/02/26/detailed-look-key-components-in-linq-to-sql-and-their-key-roles.aspx">Corey Gaudin</a>
                            
	                    </div>
	                    <p>As part of this blog, I plan to have an on-going set of articles that takes a detailed look into some</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#6065271">#</a>
	                        <span>
	                            .net tricky.  &amp;raquo; Blog Archiv   &amp;raquo; LINQ
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, April 04, 2008 11:57 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://roma.yourweb.de/dotnet30/?p=3">.net tricky.  » Blog Archiv   » LINQ</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;.net tricky. &nbsp;&amp;raquo; Blog Archiv &nbsp; &amp;raquo; LINQ</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#6365973">#</a>
	                        <span>
	                            ???????????????  &amp;raquo; Blog Archive   &amp;raquo;  LINQ to SQL??????Part 4 - Updating our Database
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Sunday, July 06, 2008 4:57 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://www.jinlei.name/?p=113">???????????????  » Blog Archive   »  LINQ to SQL??????Part 4 - Updating our Database</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;??????????????? &nbsp;&amp;raquo; Blog Archive &nbsp; &amp;raquo; &nbsp;LINQ to SQL??????Part 4 - Updating our Database</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#6648672">#</a>
	                        <span>
	                            Question on .SubmitChanges
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, September 30, 2008 10:38 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://linqinaction.net/blogs/roller/archive/2008/09/29/question-on-submitchanges.aspx">LINQ in Action roller</a>
                            
	                    </div>
	                    <p>Hi everyone, When you call .SubmitChanges, does it perform one UPDATE to the database, or are multiple</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#6654123">#</a>
	                        <span>
	                            Validation rules with LINQ-why should they exist under the App_Code folder?
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, October 02, 2008 3:26 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://linqinaction.net/blogs/roller/archive/2008/10/01/validation-rules-with-linq-why-should-they-exist-under-the-app-code-folder.aspx">LINQ in Action roller</a>
                            
	                    </div>
	                    <p>Hi everyone, I was reading Scott's blog on validation rules <a rel="nofollow" target="_new" href="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog.htm">weblogs.asp.net/.../linq-to-sql-part-4-updating-our-database.aspx</a></p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#6656771">#</a>
	                        <span>
	                            Question on LINQ - Why use validation rule on entire change list for transaction?
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, October 03, 2008 3:02 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://linqinaction.net/blogs/roller/archive/2008/10/02/question-on-linq-why-use-validation-rule-on-entire-change-list-for-transaction.aspx">LINQ in Action roller</a>
                            
	                    </div>
	                    <p>Looking at the following blog (validation rules), <a rel="nofollow" target="_new" href="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog.htm">weblogs.asp.net/.../linq-to-sql-part-4-updating-our-database.aspx</a></p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#6763338">#</a>
	                        <span>
	                            New and Notable 177
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, December 02, 2008 8:38 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://samgentile.com/Web/new-and-notable/new-and-notable-177/">Sam Gentile's Blog</a>
                            
	                    </div>
	                    <p>Multithreading and Concurrency Software Transactional Memory Part IV - Thread-Bound Transactions Software Transactional Memory Part V - Integration with System.Transactions Parallel LINQ Restating the Concurrency Problem Herb Sutter is starting a new</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#6774997">#</a>
	                        <span>
	                            转载:LINQ to SQL更新数据库操作 
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, December 09, 2008 7:39 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://www.cnblogs.com/ASPNET2008/archive/2008/12/09/1351370.html">姜敏</a>
                            
	                    </div>
	                    <p>LINQ to SQL更新数据库操作</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#6820444">#</a>
	                        <span>
	                            ASP.NET MVC Archived Buzz, Page 1
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, January 05, 2009 10:38 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://aspdotnetmvc.com/buzz/default.aspx">ASP.NET MVC Archived Buzz, Page 1</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;ASP.NET MVC Archived Buzz, Page 1</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#7181538">#</a>
	                        <span>
	                            Using linq correctly in ASP.NET (Business Layer?)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, August 25, 2009 11:12 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://www.cnblogs.com/hanshuifang/archive/2009/08/26/1554193.html">汗水房</a>
                            
	                    </div>
	                    <p>这篇帖子的一个回复中列举了许多关于LINQ使用中层次划分的链接，很不错。UsinglinqcorrectlyinASP.NET(BusinessLayer?)Thursday,...</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx#7226846">#</a>
	                        <span>
	                            LINQ to SQL (Part 5 &amp;#8211; Binding UI using the ASP:LinqDataSource Control) &amp;nbsp;|&amp;nbsp;Vietnam Developer Club
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, October 10, 2009 12:34 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://www.vndeveloper.com/vn/index.php/2009/10/10/linq-to-sql-part-5-binding-ui-using-the-asplinqdatasource-control/">LINQ to SQL (Part 5 – Binding UI using the ASP:LinqDataSource Control) &nbsp;|&nbsp;Vietnam Developer Club</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;LINQ to SQL (Part 5 &amp;#8211; Binding UI using the ASP:LinqDataSource Control) &amp;nbsp;|&amp;nbsp;Vietnam Developer Club</p>

        	            
	                </div>
	            
                    </div>
                
            
            
            
                
        
        
                </div></div>

            </div>
            <div id="contentfooter">
                
				    <div> <span><a href="http://www.microsoft.com/info/cpyright.mspx">Terms of Use</a></span></div>
					
				
            </div>       
        </div>
    </div>
    <script type="text/javascript" src="./LINQ to SQL (Part 4 - Updating our Database) - ScottGu's Blog_files/omniture_all.js"></script>
            <noscript>&lt;a href="http://www.omniture.com" title="Web Analytics"&gt;&lt;img
                src="http://msstonojsaspnet.112.2O7.net/b/ss/msstonojsaspnet/1/H.20.2--NS/0"
                height="1" width="1" border="0" alt="" /&gt;&lt;/a&gt;</noscript>
    

<!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
<rdf:Description
rdf:about="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx"
dc:identifier="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx"
dc:title="LINQ to SQL (Part 4 - Updating our Database)"
trackback:ping="http://weblogs.asp.net/scottgu/trackback.ashx?PostID=3106224" />
</rdf:RDF>
-->
<script type="text/javascript">
// <![CDATA[
Telligent_Modal.Configure('/utility/loading.htm',['Modal'],['ModalTitle'],['ModalClose'],['ModalContent'],['ModalFooter'],['ModalResize'],['ModalMask'],100);
// ]]>
</script><script type="text/javascript">
// <![CDATA[
var ctl00_Main_WeblogPostRating1=new PostRating('ctl00_Main_WeblogPostRating1','ctl00_Main_WeblogPostRating1','ctl00_Main_WeblogPostRating1_Value', 5, 'http://i1.asp.net/wan/default/images/common/', false, 'CommonRateControl','CommonRateControlActive','CommonRateControlReadOnly',['Terrible','Poor','Fair','Average','Good','Excellent'],true,true);
// ]]>
</script>
<script type="text/javascript">
//<![CDATA[

WebForm_InitCallback();//]]>
</script>
<script type="text/javascript">
            // <![CDATA[
            var ctl00_Main_WeblogPostRating1_ajax={"SaveRating":function(rating,successFunction,failureFunction){WebForm_DoCallback('ctl00$Main$WeblogPostRating1',rating,successFunction,rating,failureFunction,false)}};
            // ]]>
            </script><script type="text/javascript">
// <![CDATA[
window.ctl00_Main_ctl06_ctl01 = new Telligent_InlineEditorPanel('ctl00_Main_ctl06_ctl01','ctl00_Main_ctl06_ctl01','ctl00_Main_ctl06_ctl01_State','ctl00_Main_ctl06_ctl00',false,null,null,null);
// ]]>
</script></form>


</body></html>