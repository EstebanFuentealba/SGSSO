<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional-dtd">
<!-- saved from url=(0121)http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head id="ctl00_ctl00"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta name="description" content="ASP.NET, Visual Studio, ASP.NET 2.0, .NET ">
<meta name="keywords" content="ASP.NET, Visual Studio, ASP.NET 2.0, .NET ">
<meta name="GENERATOR" content="CommunityServer 2007 SP1 (Build: 20510.895)">
<link rel="pingback" href="http://weblogs.asp.net/scottgu/pingback.aspx">
<link rel="shortcut icon" type="image/ico" href="http://weblogs.asp.net/favicon.ico">
<link rel="alternate" type="application/rss+xml" title="ScottGu&#39;s Blog  (RSS 2.0)" href="http://weblogs.asp.net/scottgu/rss.aspx">
<link rel="alternate" type="application/atom+xml" title="ScottGu&#39;s Blog  (Atom 1.0)" href="http://weblogs.asp.net/scottgu/atom.aspx">
<link rel="alternate" type="application/rss+xml" title="ScottGu&#39;s Blog  - All Comments (RSS 2.0)" href="http://weblogs.asp.net/scottgu/rsscomments.aspx">
<link rel="alternate" type="application/rss+xml" title="LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control) - Comments for this post (RSS 2.0)" href="http://weblogs.asp.net/scottgu/rsscomments.aspx?PostID=3182426">

	
	<meta http-equiv="X-UA-Compatible" content="IE=7">
	<link rel="stylesheet" href="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/style.css" type="text/css" media="screen">
	<link rel="stylesheet" href="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/print.css" type="text/css" media="print">
	<link rel="stylesheet" href="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/DynamicStyle.aspx" type="text/css" media="screen">
	<!--[if lte IE 6]>
		<style>
		#titleWrapper { padding: 62px 65px 14px 14px; border-bottom: solid 1px #000; border-right: solid 1px #000;}
		</style>
	<![endif]-->
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://weblogs.asp.net/scottgu/rsd.ashx">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" title="WLWManifest" href="http://weblogs.asp.net/scottgu/wlwmanifest.ashx">
<title>
	LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control) - ScottGu's Blog
</title></head>
<body>
    <form name="aspnetForm" method="post" action="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog.htm" id="aspnetForm">
<div>
<input type="hidden" name="__EVENTTARGET" id="__EVENTTARGET" value="">
<input type="hidden" name="__EVENTARGUMENT" id="__EVENTARGUMENT" value="">
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="/wEPDwULLTE3MDQ0Njc3MDNkZGGxIdN4f8DDhPlg2TGLA9S0FlHm">
</div>

<script type="text/javascript">
//<![CDATA[
var theForm = document.forms['aspnetForm'];
if (!theForm) {
    theForm = document.aspnetForm;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
//]]>
</script>


<script src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/WebResource.axd" type="text/javascript"></script>


<script src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/WebResource(1).axd" type="text/javascript"></script>
<script src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/WebResource(2).axd" type="text/javascript"></script>
<script src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/WebResource(3).axd" type="text/javascript"></script>
<script src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/WebResource(4).axd" type="text/javascript"></script>
<script src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/WebResource(5).axd" type="text/javascript"></script>
    			

        <div id="wrapper">
            <div id="container">
                <div id="header">
		            <div id="titleWrapper">
		            	<div id="title">
	                        <h1><a class="headermaintitle" href="http://weblogs.asp.net/scottgu/default.aspx">ScottGu's Blog </a></h1>
	                        <div>Scott Guthrie lives in Seattle and builds a few products for Microsoft</div>
	                    </div>
                    </div> 
                </div>
                <div id="navigation">
        	        <div id="welcome">
				        
        <a href="http://weblogs.asp.net/login.aspx?ReturnUrl=%2fscottgu%2farchive%2f2007%2f07%2f16%2flinq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx">Sign in </a>
         | <a href="http://weblogs.asp.net/user/CreateUser.aspx?ReturnUrl=">Join</a>
     


		        	</div>
                	<ul>
                		<li><a href="http://weblogs.asp.net/scottgu/default.aspx">Home</a></li>
			            
			            <li><a href="http://weblogs.asp.net/scottgu/about.aspx">About</a></li>
			            <li><a href="http://weblogs.asp.net/scottgu/rss.aspx">RSS</a></li>
			            <li><a href="http://weblogs.asp.net/scottgu/atom.aspx">Atom</a></li>
		                <li id="RssComments"><a href="http://weblogs.asp.net/scottgu/rsscomments.aspx">Comments RSS</a></li>
			            
                	</ul>
                </div>
                <div id="contentwrapper">                    
                        
                
                    <div id="sidebar-a">
                        <div id="TasksSideBar">    
                            
                            
                        </div>                                
                        <div id="SubscriptionsSideBar">
			                    
                        </div>
                        <div id="SearchSideBar">
                            <div id="Search">
                                <h3>Search</h3>
                                <ul>
                                <div id="Search" align="left">
                                            <li><input name="ctl00$SideBar$ctl02$ctl00$SearchBox" type="text" id="ctl00_SideBar_ctl02_ctl00_SearchBox" class="searchBox" button="SearchButton" onclick="if(this.defaultValue==this.value) this.value=&#39;&#39;;" onblur="if(this.value==&#39;&#39;) this.value=this.defaultValue;"> <input type="submit" name="ctl00$SideBar$ctl02$ctl00$SearchButton" value="Go" id="ctl00_SideBar_ctl02_ctl00_SearchButton" class="SearchButton"></li>
                                    </div>
                                </ul>
                            </div>
                         </div>
            		        
                        
                        <div id="TagSideBar">
                                <h3>Tags</h3>
                            <ul class="SidebarTagCloud">
<li class="Tag1"><a href="http://weblogs.asp.net/scottgu/archive/tags/.NET/default.aspx" rel="tag">.NET</a></li>
<li class="Tag5"><a href="http://weblogs.asp.net/scottgu/archive/tags/Ajax/default.aspx" rel="tag">Ajax</a></li>
<li class="Tag1"><a href="http://weblogs.asp.net/scottgu/archive/tags/ASP.NET/default.aspx" rel="tag">ASP.NET</a></li>
<li class="Tag2"><a href="http://weblogs.asp.net/scottgu/archive/tags/Atlas/default.aspx" rel="tag">Atlas</a></li>
<li class="Tag6"><a href="http://weblogs.asp.net/scottgu/archive/tags/Azure/default.aspx" rel="tag">Azure</a></li>
<li class="Tag6"><a href="http://weblogs.asp.net/scottgu/archive/tags/Commerce+Server/default.aspx" rel="tag">Commerce Server</a></li>
<li class="Tag1"><a href="http://weblogs.asp.net/scottgu/archive/tags/Community+News/default.aspx" rel="tag">Community News</a></li>
<li class="Tag3"><a href="http://weblogs.asp.net/scottgu/archive/tags/Data/default.aspx" rel="tag">Data</a></li>
<li class="Tag3"><a href="http://weblogs.asp.net/scottgu/archive/tags/IIS7/default.aspx" rel="tag">IIS7</a></li>
<li class="Tag5"><a href="http://weblogs.asp.net/scottgu/archive/tags/jQuery/default.aspx" rel="tag">jQuery</a></li>
<li class="Tag4"><a href="http://weblogs.asp.net/scottgu/archive/tags/Link+Listing/default.aspx" rel="tag">Link Listing</a></li>
<li class="Tag3"><a href="http://weblogs.asp.net/scottgu/archive/tags/LINQ/default.aspx" rel="tag">LINQ</a></li>
<li class="Tag2"><a href="http://weblogs.asp.net/scottgu/archive/tags/MVC/default.aspx" rel="tag">MVC</a></li>
<li class="Tag6"><a href="http://weblogs.asp.net/scottgu/archive/tags/NuGet/default.aspx" rel="tag">NuGet</a></li>
<li class="Tag4"><a href="http://weblogs.asp.net/scottgu/archive/tags/Security/default.aspx" rel="tag">Security</a></li>
<li class="Tag2"><a href="http://weblogs.asp.net/scottgu/archive/tags/Silverlight/default.aspx" rel="tag">Silverlight</a></li>
<li class="Tag4"><a href="http://weblogs.asp.net/scottgu/archive/tags/SQL+Server/default.aspx" rel="tag">SQL Server</a></li>
<li class="Tag3"><a href="http://weblogs.asp.net/scottgu/archive/tags/Talks/default.aspx" rel="tag">Talks</a></li>
<li class="Tag2"><a href="http://weblogs.asp.net/scottgu/archive/tags/Tips+and+Tricks/default.aspx" rel="tag">Tips and Tricks</a></li>
<li class="Tag1"><a href="http://weblogs.asp.net/scottgu/archive/tags/Visual+Studio/default.aspx" rel="tag">Visual Studio</a></li>
<li class="Tag6"><a href="http://weblogs.asp.net/scottgu/archive/tags/Web+Forms/default.aspx" rel="tag">Web Forms</a></li>
<li class="Tag5"><a href="http://weblogs.asp.net/scottgu/archive/tags/Windows+Phone/default.aspx" rel="tag">Windows Phone</a></li>
<li class="Tag4"><a href="http://weblogs.asp.net/scottgu/archive/tags/WPF/default.aspx" rel="tag">WPF</a></li>
<li class="Tag5"><a href="http://weblogs.asp.net/scottgu/archive/tags/WPF_2F00_E/default.aspx" rel="tag">WPF/E</a></li>
</ul>
</div>
                        
                        
                        <div id="NewsSidebar">
                                <h3>News</h3>
                                <ul>
                            <iframe src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/cm.htm" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

<br><br>

<iframe src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/cm(1).htm" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>

                                </ul>
                            </div>
                                            
                        
                        <div id="NavSideBar"><h3>Navigation</h3>
<ul>
<li><a href="http://weblogs.asp.net/">Home</a></li><li><a href="http://weblogs.asp.net/">Blogs</a></li>
</ul></div>
                             
                        
                        <div id="ArchiveSideBar"><h3>Archives</h3>
<ul>
<li><a href="http://weblogs.asp.net/scottgu/archive/2011/09.aspx">September 2011 (3)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2011/08.aspx">August 2011 (3)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2011/06.aspx">June 2011 (1)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2011/05.aspx">May 2011 (7)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2011/04.aspx">April 2011 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2011/03.aspx">March 2011 (5)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2011/02.aspx">February 2011 (5)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2011/01.aspx">January 2011 (6)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/12.aspx">December 2010 (10)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/11.aspx">November 2010 (7)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/10.aspx">October 2010 (5)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/09.aspx">September 2010 (10)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/08.aspx">August 2010 (8)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/07.aspx">July 2010 (10)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/06.aspx">June 2010 (7)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/05.aspx">May 2010 (9)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/04.aspx">April 2010 (12)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/03.aspx">March 2010 (6)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/02.aspx">February 2010 (8)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2010/01.aspx">January 2010 (8)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/12.aspx">December 2009 (4)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/11.aspx">November 2009 (4)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/10.aspx">October 2009 (7)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/09.aspx">September 2009 (6)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/08.aspx">August 2009 (6)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/07.aspx">July 2009 (3)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/06.aspx">June 2009 (3)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/05.aspx">May 2009 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/04.aspx">April 2009 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/03.aspx">March 2009 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/02.aspx">February 2009 (1)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2009/01.aspx">January 2009 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/12.aspx">December 2008 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/11.aspx">November 2008 (5)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/10.aspx">October 2008 (5)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/09.aspx">September 2008 (4)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/07.aspx">July 2008 (1)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/06.aspx">June 2008 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/05.aspx">May 2008 (4)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/04.aspx">April 2008 (7)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/03.aspx">March 2008 (6)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/02.aspx">February 2008 (7)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2008/01.aspx">January 2008 (8)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/12.aspx">December 2007 (8)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/11.aspx">November 2007 (9)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/10.aspx">October 2007 (7)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/09.aspx">September 2007 (9)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/08.aspx">August 2007 (13)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/07.aspx">July 2007 (12)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/06.aspx">June 2007 (10)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/05.aspx">May 2007 (9)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/04.aspx">April 2007 (12)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/03.aspx">March 2007 (9)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/02.aspx">February 2007 (9)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/01.aspx">January 2007 (12)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/12.aspx">December 2006 (12)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/11.aspx">November 2006 (14)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/10.aspx">October 2006 (14)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/09.aspx">September 2006 (15)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/08.aspx">August 2006 (17)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/07.aspx">July 2006 (17)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/06.aspx">June 2006 (14)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/05.aspx">May 2006 (17)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/04.aspx">April 2006 (23)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/03.aspx">March 2006 (12)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/02.aspx">February 2006 (27)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2006/01.aspx">January 2006 (35)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/12.aspx">December 2005 (29)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/11.aspx">November 2005 (17)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/10.aspx">October 2005 (9)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/09.aspx">September 2005 (8)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/08.aspx">August 2005 (11)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/06.aspx">June 2005 (1)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/05.aspx">May 2005 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/04.aspx">April 2005 (4)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/03.aspx">March 2005 (4)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/02.aspx">February 2005 (1)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2005/01.aspx">January 2005 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2004/11.aspx">November 2004 (9)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2004/10.aspx">October 2004 (5)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2003/12.aspx">December 2003 (4)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2003/11.aspx">November 2003 (7)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2003/10.aspx">October 2003 (15)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2003/09.aspx">September 2003 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2003/05.aspx">May 2003 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2003/04.aspx">April 2003 (3)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2003/03.aspx">March 2003 (2)</a></li><li><a href="http://weblogs.asp.net/scottgu/archive/2003/02.aspx">February 2003 (5)</a></li>
</ul></div> 
                        
                        
                        
                                    <h3>Favorite Links</h3>
                                    <div id="LinkSideBar">
                                        
<ul class="CommonSidebarList">
<li><a href="http://www.scottgu.com/">ScottGu.com</a></li><li><a href="http://asp.net/">ASP.Net Home</a></li><li><a href="http://www.nikhilk.net/">Nikhil Kothari</a></li><li><a href="http://www.dotnetslackers.com/">DotNetSlackers</a></li><li><a href="http://www.aspalliance.com/">ASPAlliance</a></li><li><a href="http://blog.joycode.com/scottgu/">My Blog in Chinese</a></li><li><a href="http://weblogs.asp.net/scottgufrench/default.aspx">My Blog in French</a></li><li><a href="http://thinkingindotnet.wordpress.com/category/scott-guthrie/">My Blog in Spanish</a></li><li><a href="http://weblogs.asp.net/scottguportuguese/">My Blog in Portuguese</a></li>
</ul>
                                    </div>
                            
                    </div>
                

                <div id="content"><div id="content2">
	                
    <h2 class="pageTitle">
       LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)               
    </h2>
    <div class="post">
        <div class="postsub">
            <font face="arial" size="2"> <p>Over the last few weeks I've been writing a series of blog posts that cover LINQ to SQL.&nbsp; LINQ to SQL is a built-in O/RM (object relational mapper) that ships in the .NET Framework 3.5 release, and which enables you to easily model relational databases using .NET classes.&nbsp; You can use LINQ expressions to query the database with them, as well as update/insert/delete data.  </p><p>Below are the first four parts of my LINQ to SQL series:  </p><ul> <li><a href="http://weblogs.asp.net/scottgu/archive/2007/05/19/using-linq-to-sql-part-1.aspx" target="_blank">Part 1: Introduction to LINQ to SQL</a>  </li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/05/29/linq-to-sql-part-2-defining-our-data-model-classes.aspx" target="_blank">Part 2: Defining our Data Model Classes</a>  </li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/06/29/linq-to-sql-part-3-querying-our-database.aspx" target="_blank">Part 3: Querying our Database</a>  </li><li><a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx" target="_blank">Part 4: Updating our Database</a></li></ul> <p>In these previous LINQ to SQL blog posts I focused on how you can programmatically use LINQ to SQL to easily query and update data within a database.</p> <p>In today's blog post I'll cover the new &lt;asp:LinqDataSource&gt; control that is shipping as part of ASP.NET in the upcoming&nbsp;.NET 3.5 release.&nbsp; This control is a new datasource control for ASP.NET (like the ObjectDataSource and SQLDataSource controls that shipped with ASP.NET 2.0) which makes declaratively binding ASP.NET UI controls to LINQ to SQL data models super easy.</p> <h3><u>Sample Application We'll be Building</u></h3> <p>The simple data editing web application I'll walkthrough building in this tutorial&nbsp;is a basic data entry/manipulation front-end for products within a database:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step03.jpg"> </p> <p>The application will support the following end-user features:</p> <ol> <li>Allow users to filter the products by category  </li><li>Allow users to sort the product listing by clicking on a column header (Name, Price, Units In Stock, etc)  </li><li>Allow users to skip/page over multiple product listings (10 products per page)  </li><li>Allow users to edit and update any of the product details in-line on the page  </li><li>Allow users to delete products from the list</li></ol> <p>The web&nbsp;application will be implemented with a clean object-oriented data model built using the LINQ to SQL ORM.</p> <p>All of the business rules and business validation logic will be implemented in our data model tier - and <u>not</u> within the UI tier or in any of the UI pages.&nbsp; This will ensure that: 1) a consistent set of business rules are used everywhere within the application, 2) we write less code and don't repeat ourselves, and 3) we can easily modify/adapt our business rules at a later date and not have to update them in dozens of different places across our application.</p> <p>We will also take advantage of the built-in paging/sorting support within LINQ to SQL to ensure that features like the product listing paging/sorting are performed not in the middle-tier, but rather in the database (meaning only 10 products are retrieved from the database at any given time - we <u>are not</u> retrieving thousands of rows and doing the sorting/paging within the web-server).&nbsp; </p> <h3><u>What is the &lt;asp:LinqDataSource&gt; control and how does it help?</u></h3> <p>The &lt;asp:LinqDataSource&gt; control is an ASP.NET control that implements the <a href="http://msdn2.microsoft.com/en-us/library/ms227679.aspx" target="_blank">DataSourceControl pattern</a>&nbsp;introduced with ASP.NET 2.0.&nbsp; It is similar to the ObjectDataSource and SqlDataSource controls in that it can be used to declaratively bind other ASP.NET controls on a page to a datasource.&nbsp; Where it differs is that instead of binding directly to a database (like the SqlDataSource) or to a generic class (like the ObjectDataSource), the &lt;asp:linqdatasource&gt; is designed to bind against a LINQ enabled data model.</p> <p>One of the benefits of using the &lt;asp:linqdatasource&gt; control is that it leverages the flexibility that LINQ based ORMs&nbsp;provide.&nbsp; You don't need to define custom query/insert/update/delete methods for the datasource to call - instead you can point the &lt;asp:linqdatasource&gt; control at your data model, identify what entity table you want it to work against, and then bind any ASP.NET UI control against the &lt;asp:linqdatasource&gt; and have them work with it.</p> <p>For example, to get a basic product listing UI on my page that works against Product entities within a LINQ to SQL data model, I could simply declare a &lt;asp:linqdatasource&gt; on my page that points to my LINQ to SQL datacontext class, and&nbsp;identify the entities (for example: Products)&nbsp;in the LINQ to SQL data model I want to bind against.&nbsp; I could then point a GridView at it (by settings its DataSourceID property) to get a grid-like view of the Product content:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step05.jpg"> </p> <p>Without having to-do anything else, I can run the page and have a&nbsp;listing of my Product data with built-in support for paging and sorting over the data.&nbsp; I can add a edit/delete button&nbsp;on the Grid and automatically have update support as well.&nbsp; I don't need to add any methods, map any parameters,&nbsp;or write any code for the &lt;asp:LinqDataSource&gt; to handle both these querying and updating scenarios - it can work against the LINQ to SQL data model we point it against and do these operations automatically.&nbsp; When updates are made, the LINQ to SQL ORM will automatically ensure that all business rules and validation logic we've added (as partial methods) to the LINQ to SQL data model pass before persisting anything to the database.</p> <blockquote> <p><em><strong>Important</strong>: The beauty of LINQ and LINQ to SQL is that it obviously isn't tied to being used only in UI scenarios - or with particular UI binding controls like the LinqDataSource.&nbsp; As you've seen in my previous posts in this series, writing code using the LINQ to SQL ORM is extremely clean.&nbsp; You can always write custom UI code to directly work against your LINQ to SQL data model if you prefer, or when you find a UI scenario that isn't particularly suited to using the &lt;asp:linqdatasource&gt;.</em>&nbsp; </p></blockquote> <p>The below sections walkthrough using LINQ to SQL and the &lt;asp:LinqDataSource&gt; control to build the web application scenario I defined above.</p> <h3><u>Step 1: Define our Data Model</u></h3> <p>We'll&nbsp;begin working on&nbsp;the application by first defining the data model we'll use to represent our database.&nbsp; </p> <p>I discussed how to create a LINQ to SQL data model using VS 2008's LINQ to SQL designer&nbsp;in <a href="http://weblogs.asp.net/scottgu/archive/2007/05/29/linq-to-sql-part-2-defining-our-data-model-classes.aspx" target="_blank">Part 2</a> of this series.&nbsp; Below is a screenshot of the data model classes I can quickly create using the LINQ to SQL designer to model the "Northwind" sample database:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step35.jpg"> </p> <p>We'll revisit our data model in Step&nbsp;5 of this tutorial below&nbsp;when we add some business validation&nbsp;rules to it.&nbsp; But to begin with we'll just use the above data model as-is to build our UI.</p> <h3><u>Step 2: Creating a Basic Product Listing</u></h3> <p>We'll start our UI by creating an ASP.NET page with a &lt;asp:gridview&gt; control on it and use some CSS to style it:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step1.jpg"> </p> <p>We could write code to programmatically bind our data model to the GridView (like I did in <a href="http://weblogs.asp.net/scottgu/archive/2007/06/29/linq-to-sql-part-3-querying-our-database.aspx" target="_blank">Part 3</a> of this series), or alternatively I could use the new &lt;asp:linqdatasource&gt; control to bind the GridView to our data model.&nbsp; </p> <p>VS 2008 includes&nbsp;build-in designer support to make it easy to&nbsp;connect up our GridView (or any&nbsp;other ASP.NET&nbsp;server control) to LINQ data.&nbsp; To bind our grid above to&nbsp;the data model we created earlier,&nbsp;we can switch into design-view, select the GridView, and then select the "New Data Source..." option within the "Choose Data Source:" drop-down:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step2.jpg"> </p> <p>This will bring up a dialog box that lists the available datasource options to create.&nbsp; Select the new "LINQ" option in the dialog box and name the resulting &lt;asp:linqdatasource&gt; control you want to create:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step3.jpg"> </p> <p>The &lt;asp:linqdatasource&gt; designer will then display the available LINQ to SQL DataContext classes that your application can use (including those in class libraries that you are referencing):</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step4.jpg"> </p> <p>We'll want to select the data model we created with the LINQ to SQL designer earlier.&nbsp; We'll then want to select the table within our data model that we want to be the primary entity for the &lt;asp:linqdatasource&gt; to bind against.&nbsp; For this scenario we'll want to select the "Products" entity class we built.&nbsp; We'll also want to select the "Advanced" button and enable updates and deletes for the datasource:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step5.jpg"> </p> <p>When we click the "Finish" button above, VS 2008 will declare a &lt;asp:linqdatasource&gt; within our .aspx page, and update the &lt;asp:gridview&gt; to point to it (via its DataSourceID property).&nbsp; It will also automatically provide column declarations in the Grid based on the schema of the Product entity we choose to bind against:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step6.jpg"> </p> <p>We can then&nbsp;pull up the "smart task" context UI of the GridView and indicate that we want to enable paging, sorting, editing and deleting on it:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step7.jpg"> </p> <p>We can then press F5 to run our application, and have a product listing page with full paging and sorting support (note the paging indexes at the bottom of the grid below): </p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step9.jpg"> </p> <p>We can also select the "edit" or "delete" button on each row to update the data:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step10.jpg"> </p> <p>If we flip into source view on the page, we'll see that the markup of the page contains the content below.&nbsp; The &lt;asp:linqdatasource&gt; control points at the LINQ to SQL DataContext we created earlier, as well as the entity table we want to bind against.&nbsp; The GridView then points at the &lt;asp:linqdatasource&gt; control (via its DataSourceID) and indicates which columns should be included in the grid, what their header text should be, as well as what sort expression to use when the column header is selected.&nbsp;</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step28.jpg"> </p> <p>Now that we have the basics of our web UI working against our LINQ to SQL data-model, we can go ahead and further customize the UI and behavior.</p> <h3><u>Step 3: Cleaning up our Columns</u></h3> <p>Our GridView above has a lot of columns defined within it, and two of the column values (the SupplierID and the CategoryID) are currently foreign-key numbers --&nbsp;which certainly&nbsp;isn't the ideal way to represent them to an end-user.&nbsp;</p> <p><u>Removing Unnecessary Columns</u>&nbsp;</p> <p>We can start cleaning up our UI by deleting a few of the columns we don't need.&nbsp; I can do this in source mode (simply nuke the &lt;asp:boundfield&gt; declarations) or in designer mode (just click on the column in the designer and choose the "Remove" task).&nbsp; For example, we could remove the "QuantityPerUnit" column below and re-run our application to get this slightly cleaner UI:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step11.jpg"> </p> <p>If you have used the &lt;asp:ObjectDataSource&gt; control before and explicitly passed update parameters to update methods (the default when using DataSet based TableAdapters) one of the things you know can be painful is that you&nbsp;have&nbsp;to change the method signatures of your TableAdapter's update methods when the parameters based by your UI are modified.&nbsp; For example: if we deleted a column in our grid (like above), we'd end up having to modify our TableAdapter to support update methods without that parameter.</p> <p>One of the really nice things about the &lt;asp:LinqDataSource&gt; control is that you <u>do not</u> need to-do these types of changes.&nbsp; Simply delete (or add)&nbsp;a column from your UI and re-run the application - no other changes are required.&nbsp; This makes changing web UI built using the &lt;asp:LinqDataSource&gt; much easier, and enables much faster scenarios&nbsp;iterations within an application.</p> <p><u>Cleaning up the SupplierID and CategoryID Columns</u></p> <p>Currently we are displaying the foreign-key integer values in our GridView for the Supplier and Category&nbsp;of each Product:&nbsp; </p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step25.jpg"> </p> <p>While accurate from a data model perspective, it isn't very end-user friendly.&nbsp; What I really want to-do is to display the CategoryName and SupplierName instead, and provide a drop-downlist while in Edit mode to enable end-users to easily associate the SupplierID and CategoryID values.</p> <p>I can change the GridView to display the Supplier Name and Category Name instead of the ID's by replacing the default &lt;asp:BoundField&gt; in our GridView with an &lt;asp:TemplateField&gt;.&nbsp; Within this TemplateField I can add any content I want to customize the look of the column.&nbsp; </p> <p>In the source code below I'm going to take advantage of the fact that each Product class in the LINQ to SQL data model we created has a Supplier and Category property on it. What this means is that I can easily databind their Supplier.CompanyName and Category.CategoryName sub-properties within our Grid:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step26.jpg"> &nbsp;</p> <p>And now when I run the application I get the human readable Category and Supplier name values instead:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step14.jpg"> </p> <p>To get drop-down list UI for the Supplier and Category columns while in Edit-Mode in the Grid, I will first&nbsp;add two additional &lt;asp:LinqDataSource&gt; controls&nbsp;to my page.&nbsp; I will configure these to bind against the Categories and Suppliers within the LINQ to SQL data model we created earlier:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step15.jpg"> </p> <p>I can then go back to the &lt;asp:TemplateField&gt; columns we added to our GridView earlier and customize their edit appearance (by specifying an EditItemTemplate).&nbsp; We'll customize each column to have a dropdownlist control when in edit mode, where the available values in the dropdownlists are pulled from the categories and suppliers datasource controls above, and where we two-way databind the selected value to the Product's SupplierID and CategoryID&nbsp;foreign keys:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step27.jpg"> </p> <p>And now when&nbsp;end-users click edit in the GridView, they are presented a drop-down list of all valid Supplier's to associate the product with:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step17.jpg"> </p> <p>And when they hit save the Product is updated appropriately (the GridView will use the DropDownList's currently selected value to bind the SupplierID).</p> <h3><u>Step 4: Filtering our Product Listing</u></h3> <p>Rather than show all products within the database, we can update our UI to include a dropdownlist that allows the user to filter the products by a particular category.&nbsp; </p> <p>Because we already added a &lt;asp:LinqDataSource&gt; control to the page earlier that references our Categories within our LINQ to SQL data model, all I need to-do to create a drop-downlist control at the top of the page that binds against this.&nbsp; For example:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step18.jpg"> </p> <p>When I run the page I'll now get a filter dropdownlist of all categories at the top of the page:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step19.jpg"> </p> <p>My last step is to configure the GridView to only show those Products in the category the end-user selects from the dropdownlist.&nbsp; The easiest way to-do this is by selecting the "Configure DataSource" option in the GridView smart task:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step20.jpg"> </p> <p>This will bring me back to the &lt;asp:LinqDataSource&gt; control's design-time UI that we used at the very beginning of this tutorial.&nbsp; I can select the "Where" button within this to add a binding filter to the datasource control.&nbsp; I can add any number of filter expressions, and declaratively pull the values to filter by from a variety of places (for example: from the querystring, from form-values, from other controls on the page, etc):</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step21.jpg"> </p> <p>Above I'm going to choose to filter by the Products by their CategoryID value, and then retrieve this CategoryID from the DropDownList control we just created on our page:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step22.jpg"> </p> <p>When we hit finish, the &lt;asp:linqdatasource&gt; control in our page will have been updated to reflect this filter clause like so:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step23.jpg"> </p> <p>And when we now run the page the end-user will now be able to select from the available Categories in the filter drop-downlist and page, sort, edit and delete just the products in that category:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step24.jpg"> </p> <p>The &lt;asp:LinqDataSource&gt; control will automatically apply the appropriate LINQ filter expression when working against our LINQ to SQL data model classes to ensure that only the required data is retrieved from the database (for example: in the Grid above only the 3 rows of Product data from the second page of Confection products will be retrieved from the database).</p> <p>You can optionally handle the Selecting event on the &lt;asp:LinqDataSource&gt; if you want to write a custom LINQ expression in code to completely customize the query instead.</p> <h3><u>Step 5: Adding Business Validation Rules</u></h3> <p>As I discussed in <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx" target="_blank">Part 4</a> of this LINQ to SQL series, when we define LINQ to SQL data models we will automatically&nbsp;have a default set of schema based validation constraints added to our data model classes.&nbsp; This means that if I try and enter a null value for a required column, try and assign a string to an integer, or assign a foreign-key value to a row that doesn't exist, our LINQ to SQL data model will raise an error and ensure that our database integrity is maintained.</p> <p>Basic schema validation is only a first step, though, and is rarely enough for most real-world applications.&nbsp; Typically we'll want/need to add additional business rules and application-level validation to our data model classes.&nbsp; Thankfully LINQ to SQL makes adding these types of business validation rules easy (for details on the various validation approaches available, please read <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx" target="_blank">Part 4</a> of my LINQ to SQL series).</p> <p><u>Example Business Validation Rule Scenario</u></p> <p>For example, let's consider a basic business logic rule we might want to enforce.&nbsp; Specifically, we want to ensure that a user of our application can't discontinue a product while we still have units on backorder for it:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step29.jpg"> </p> <p>If a user tries to save the above row, we'll want to prevent this change from being persisted and throw an appropriate error telling the user how to fix it.</p> <p><u>Adding a Data Model Validation Rule</u></p> <p>The <em>wrong place</em> to add this type of business validation rule is in the UI layer of our application.&nbsp; Adding it in the UI layer of our application will mean that the rule will be specific to only that one place, and will not be automatically enforced&nbsp;when we add another page to our application that also updates Products.&nbsp; Distributing business rules/logic in our UI layer will also make life extremely painful as our application grows in size - since changes/updates to our business will necessitate making code changes all over the place.</p> <p>The right place to specify this type of business logic validation&nbsp;is instead in our LINQ to SQL data model classes&nbsp;that we defined earlier.&nbsp; As I discussed in <a href="http://weblogs.asp.net/scottgu/archive/2007/07/11/linq-to-sql-part-4-updating-our-database.aspx" target="_blank">Part 4</a> of this series, all classes generated by the LINQ to SQL designer are defined as "partial" classes - which means that we can easily add additional methods/events/properties to them.&nbsp; The LINQ to SQL data model classes automatically call validation methods that we can implement to enforce custom validation logic within them.</p> <p>For example, I could add a partial Product class to my project that implements the OnValidate() partial method that LINQ to SQL calls prior to persisting a Product&nbsp;entity.&nbsp; Within this OnValidate() method I could add the following business rule to enforce that products can't have a Reorder Level if the product is discontinued:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step30.jpg"> </p> <p>Once I add the above class into my LINQ to SQL project, the above business rule will be enforced anytime anyone uses my data model to try and modify the database.&nbsp; This is true for both updating existing Products, as well as adding new Products into the database.</p> <p>Because the &lt;asp:LinqDataSource&gt; that we defined in our pages above works against our LINQ to SQL data model classes, all of its update/insert/delete logic will now have to pass the above validation check prior to the change being persisted.&nbsp; We <u>do not</u> need to-do anything to our UI tier in order for this validation to occur - it will automatically be applied anywhere and everywhere our LINQ to SQL data model is used.</p> <p><u>Adding Nice Error Handling in our UI Tier</u></p> <p>By default if a user now uses our GridView UI to enter a non-valid UnitsOnOrder/Discontinued combination, our LINQ to SQL data model classes will raise an exception.&nbsp; The &lt;asp:LinqDataSource&gt; will in turn catch this error and provides an event that users can use to handle it.&nbsp; If no one handles the event then the GridView (or other) control bound to the &lt;asp:LinqDataSource&gt; will catch the error and provide an event for users to handle it.&nbsp; If no one handles the error there then it will be passed up to the Page to handle, and if not there to the global Application_Error() event handler in the Global.asax file.&nbsp; Developers can choose any place along this path to insert appropriate error handling logic to provide the right end-user experience.</p> <p>For the application we defined above,&nbsp;probably the best place to handle any update errors is by handling the&nbsp;RowUpdated event on our GridView.&nbsp; This event will get fired every time an update is attempted on our datasource, and we can access the exception error details if the update event fails.&nbsp; We can add the below code to check if an error occurs, and if so display an appropriate error message to the end-user:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step32.jpg"> </p> <p>Notice above how we <u>have not</u> added any validation specific logic into our UI.&nbsp; Instead, I am retrieving the validation error message string&nbsp;we raised in our business logic and am&nbsp;using it to display an appropriate message to the end-user (I am then displaying a more generic error message in the event of other failures).&nbsp; </p> <p>Notice how I'm also indicating above that I want the GridView to stay in Edit mode when an error occurs - that way the user can avoid losing their changes, and can modify the values they entered and click "update" again to try and save them.&nbsp; We can then add a &lt;asp:literal&gt; control with the "ErrorMessage" ID&nbsp;anywhere we want on our page to control where where we want the error message to be displayed: </p><p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step31.jpg"> </p> <p>And now when we try and update the Product with an invalid value combination we'll see an error message indicating how to fix it:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step33.jpg"> </p> <p>The nice thing about using this approach is that I can now&nbsp;add or change my data model's business rules and not have to modify any of my UI tier's code to have them pick up and honor the changes.&nbsp; The validation rules, and corresponding error messages, can be written and centralized in one place in my data model and automatically applied everywhere.</p> <h3><u>Summary</u></h3> <p>The &lt;asp:LinqDataSource&gt; control provides an easy way to bind any ASP.NET UI control to a LINQ to SQL data model.&nbsp; It enables UI controls to both retrieve data from a LINQ to SQL data model, as well as cleanly apply updates/inserts/deletes to it.&nbsp; </p> <p>In our application above we used the LINQ to SQL ORM designer to create a clean, object oriented data model.&nbsp; We then added three ASP.NET UI controls to our page (a GridView, a DropDownList, and a ErrorMessage Literal), and added three &lt;asp:LinqDataSource&gt; controls to bind Product, Category, and Supplier data from it:</p> <p><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/step34.jpg"> </p> <p>We then wrote&nbsp;5 lines of business validation logic in our data model, and&nbsp;11 lines of UI&nbsp;error handling logic.&nbsp; </p> <p>The end result is a simple web application with custom UI that allows users to dynamically filter product data by category, efficiently sort and page over the product results, inline-edit the product data to save updates (providing our business rules pass), and delete products from the system (also providing our business rules allow it).</p> <p>In future posts in this series I'll cover more LINQ to SQL scenarios including optimistic concurrency, lazy and eager loading, table mapping inheritance, and custom SQL/SPROC usage. </p> <p>Next week I also plan to start a new series of blog posts that cover the new &lt;asp:ListView&gt; control - which is a new control that will ship with the ASP.NET release in .NET 3.5.&nbsp; It provides total control over the markup generated for data scenarios (no tables, no spans, no inline styles...), while also delivering built-in support for paging, sorting, editing, and insertion scenarios.&nbsp; For example, we could optionally use it to replace the default Grid layout look of our application above with a completely custom look and feel.&nbsp; Best of all, I could replace it within the above page in my application and not have to change my Data Model, the &lt;asp:linqdatasource&gt; declaration, or my code-behind UI error handling logic at all.</p> <p>Hope this helps,</p> <p>Scott</p></font>
            
            <div class="postfoot">
                
                Published
                Monday, July 16, 2007 11:03 PM
			    by
			    <a href="http://weblogs.asp.net/members/ScottGu.aspx">ScottGu</a>
                <span id="ctl00_Main_WeblogPostRating1" title="Rated Good [4.14 out of 5]." class="CommonRateControlReadOnly"><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/star-left-on.gif" align="absmiddle" border="0"><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/star-right-on.gif" align="absmiddle" border="0"><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/star-left-on.gif" align="absmiddle" border="0"><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/star-right-on.gif" align="absmiddle" border="0"><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/star-left-on.gif" align="absmiddle" border="0"><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/star-right-on.gif" align="absmiddle" border="0"><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/star-left-on.gif" align="absmiddle" border="0"><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/star-right-on.gif" align="absmiddle" border="0"><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/star-left-off.gif" align="absmiddle" border="0"><img src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/star-right-off.gif" align="absmiddle" border="0"></span><input type="hidden" value="4.14" id="ctl00_Main_WeblogPostRating1_Value">
                <div class="em"><span id="ctl00_Main_ctl06_ctl01">Filed under: <a href="http://weblogs.asp.net/scottgu/archive/tags/ASP.NET/default.aspx" rel="tag">ASP.NET</a>, <a href="http://weblogs.asp.net/scottgu/archive/tags/Visual+Studio/default.aspx" rel="tag">Visual Studio</a>, <a href="http://weblogs.asp.net/scottgu/archive/tags/.NET/default.aspx" rel="tag">.NET</a>, <a href="http://weblogs.asp.net/scottgu/archive/tags/LINQ/default.aspx" rel="tag">LINQ</a>, <a href="http://weblogs.asp.net/scottgu/archive/tags/Data/default.aspx" rel="tag">Data</a>, <a href="http://weblogs.asp.net/scottgu/archive/tags/SQL+Server/default.aspx" rel="tag">SQL Server</a></span><input type="hidden" name="ctl00$Main$ctl06$ctl01" id="ctl00_Main_ctl06_ctl01_State" value="value:Filed%20under%3A%20%3Ca%20href%3D%22%2Fscottgu%2Farchive%2Ftags%2FASP.NET%2Fdefault.aspx%22%20rel%3D%22tag%22%3EASP.NET%3C%2Fa%3E%2C%20%3Ca%20href%3D%22%2Fscottgu%2Farchive%2Ftags%2FVisual%2BStudio%2Fdefault.aspx%22%20rel%3D%22tag%22%3EVisual%20Studio%3C%2Fa%3E%2C%20%3Ca%20href%3D%22%2Fscottgu%2Farchive%2Ftags%2F.NET%2Fdefault.aspx%22%20rel%3D%22tag%22%3E.NET%3C%2Fa%3E%2C%20%3Ca%20href%3D%22%2Fscottgu%2Farchive%2Ftags%2FLINQ%2Fdefault.aspx%22%20rel%3D%22tag%22%3ELINQ%3C%2Fa%3E%2C%20%3Ca%20href%3D%22%2Fscottgu%2Farchive%2Ftags%2FData%2Fdefault.aspx%22%20rel%3D%22tag%22%3EData%3C%2Fa%3E%2C%20%3Ca%20href%3D%22%2Fscottgu%2Farchive%2Ftags%2FSQL%2BServer%2Fdefault.aspx%22%20rel%3D%22tag%22%3ESQL%20Server%3C%2Fa%3E"></div>
                
            </div>
        </div>
    </div>
    
    
                    
                    <h3 class="pageTitle">Comments</h3>
                    <div id="comments">
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3183099">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 3:04 AM
                            by
                            <a title="Majid Shahabfar" rel="nofollow" href="http://www.persiadevelopers.com/">Majid Shahabfar</a>
                            
	                    </div>
	                    <p>Well done Scott,</p>
<p>These are great blog series.</p>
<p>I'm waiting for custom SQL/SPROC usage.</p>
        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3184115">#</a>
	                        <span>
	                            LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 4:29 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://www.dotnetkicks.com/adonet/LINQ_to_SQL_Part_5_Binding_UI_using_the_ASP_LinqDataSource_Control">DotNetKicks.com</a>
                            
	                    </div>
	                    <p>You've been kicked (a good thing) - Trackback from DotNetKicks.com</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3184116">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 4:30 AM
                            by
                            Sean Briscoe
                            
	                    </div>
	                    <p>Thanks for posting. &nbsp;As usual, I found it only creating more interest for the upcoming .NET 3.5.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3184442">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 4:44 AM
                            by
                            Matt
                            
	                    </div>
	                    <p>Very nice introduction regarding linqdatasource control</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3184445">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 4:44 AM
                            by
                            <a title="FransBouma" href="http://weblogs.asp.net/fbouma">FransBouma</a>
                            
	                    </div>
	                    <p>In the part where you display human readable supplier and category names, it's unclear for the reader that these names are read-in using lazy loading, which means 2 queries per row, as that's how ASP.NET works: per row that expression is evaluated, which results in a hit to the property 'Supplier' or 'Category' on the active product, which results in 2 queries per row: one for the supplier, and one for the category. This is really performance intense. Can you specify a span/prefetch path as well?</p>
<p>Furthermore: the linq datasource suggests that any linq enabled O/R mapper can be used with it, as it is a LinqDataSource, not a LinqToSqlDataSource. I find this pretty bad, as I fail to see how it can be used with every Linq enabled O/R mapper out there as it exposes Linq-to-Sql specific features, not generic Linq features in general. This is shown by the 'tablename' attribute in the HTML tag for the linqdatasource control. What if the Linq enabled O/R mapper supports inheritance over multiple tables (as Linq to Sql doesn't support) ? Shouldn't it be 'EntityName' anyway because what if Linq to Sql is going to add entity inheritance over multiple tables in the future, what's the upgrade path then?</p>
<p>One other thing I want to ask is about the group by option: do you display a warning that after selecting group by, the entities aren't updateable anymore? Because grouped data has a totally different meaning than having a list of entity data: grouping that entity data makes the list effectively readonly. </p>
<p>(and I also wonder why on earth people want to mess inside HTML using strings (inside the eval calls) with property references instead of using strongly typed code in the code behind. I mean: if one renames 'Category' on the Product entity into 'MainCategory', this page will fall apart at runtime, not at compile time. )</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3184703">#</a>
	                        <span>
	                            ScottGu's Posts on LINQ to SQL
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 5:03 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://mtaulty.com/CommunityServer/blogs/mike_taultys_blog/archive/2007/07/17/9520.aspx">Mike Taulty's Blog</a>
                            
	                    </div>
	                    <p>I've been reading ScottGu's posts on LINQ to SQL (start here from where it's easy to work backwards)....</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3184780">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 5:06 AM
                            by
                            <a title="Vlad" rel="nofollow" href="http://code-news.blogspot.com/">Vlad</a>
                            
	                    </div>
	                    <p>Pingback from Code-news</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3185231">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 5:36 AM
                            by
                            Akaka
                            
	                    </div>
	                    <p>Scott,</p>
<p>Which version of Visual Studio you using on this demo? I am using Visual Studio Codename Orcas Version 9.0.20404 Beta1 and cannot see asp:linqdatasource control on toolbox. </p>
<p>Thanks,</p>
<p>Akaka</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3185495">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 5:49 AM
                            by
                            <a title="Johannes Hansen" rel="nofollow" href="http://www.dotnetforum.dk/blogs/johannes/">Johannes Hansen</a>
                            
	                    </div>
	                    <p>Is it possible for you to release the source for the LinqDataSourceControl or better yet the EntityDataSourceControl + the accompanying view(s)? Lately I've been developing a DataSourceControl for the company I work for based on our custom business entity framework. The DataSource control I implemented (using a reflector'ed view of the ObjectDataSource) is working fine but it would still be very interesting to see how you guys are implementing the new DataSource controls in .NET 3.5 especially the EntityDataSource.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3188206">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 8:05 AM
                            by
                            <a title="Ryan CrawCour" rel="nofollow" href="http://dotnet.org.za/ryancrawcour">Ryan CrawCour</a>
                            
	                    </div>
	                    <p>really looking forward to more articles in this series; especially on optimistic concurrency!</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3188647">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 8:26 AM
                            by
                            Mike
                            
	                    </div>
	                    <p>FransBouma makes some excellent points, but I think the group by he refers to is actually a 'where' in the select statement, so edits should work just fine.</p>
<p>Anyway, it's nice to finally see some new web controls. Is the GridView updated as well (perhaps thead/tbody/tfoot and colspec finally)?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3189598">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 9:27 AM
                            by
                            Steve
                            
	                    </div>
	                    <p>Excellent writeup Scott.</p>
<p>Frans does bring up an interesting question about the lazyloading - will we have 'eagerloading' option with Dlinq to Sql ?</p>
<p>secondary question: &nbsp;If I'm using a SOA where I put my business logic behind webservices that I expose that pass a dlinq object back and forth - I assume since I'm not exposing the datacontext that this won't work?</p>
<p>In my architectures, I would not expose my datacontext to my UI.</p>
<p>Thanks!</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3190011">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 9:41 AM
                            by
                            <a title="Chad Smith" rel="nofollow" href="http://dev.burning-ice.co.uk/">Chad Smith</a>
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>For the non-believers and the curious out there, would it be possible to post a breakdown of the SQL generated by linq when running the example above and explain any optimizations in place and how they relate to the code, or any extra calls to the database we may be seeing that need any explanation. I think this sample is poignant in that it implicitly performs a join where one would expect a dumb system to call many additional queries, can you disprove this?</p>
<p>Cheers</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3190101">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 9:50 AM
                            by
                            Joe Chung
                            
	                    </div>
	                    <p>(This is with regards to Frans's comment.) &nbsp;The reason people use Eval calls instead of code-behind is if they want to use ASP.NET's no-compile pages and still be able to leverage data binding functionality.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3190293">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 10:19 AM
                            by
                            <a title="Josh Stodola" rel="nofollow" href="http://blog.josh420.com/">Josh Stodola</a>
                            
	                    </div>
	                    <p>Oh my gosh, this looks so simple I am going to cry...</p>
<p>Thanks, Scott, for posting an abundance of screenshots, they are *so* helpful. &nbsp;</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3190419">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 10:56 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Frans,</p>
<p>&gt;&gt;&gt;&gt;&gt; In the part where you display human readable supplier and category names, it's unclear for the reader that these names are read-in using lazy loading, which means 2 queries per row, as that's how ASP.NET works: per row that expression is evaluated, which results in a hit to the property 'Supplier' or 'Category' on the active product, which results in 2 queries per row: one for the supplier, and one for the category. This is really performance intense. Can you specify a span/prefetch path as well?</p>
<p>LINQ to SQL allows you to specify whether to lazily or eagerly span/pre-fetch your associations. &nbsp;So for example when you say MyProduct.Supplier.CompanyName in a loop (like I am above with the GridView) you can either end up doing one call per loop iteration, or a join that returns all of the relevant Company name's and assembles them for Products on the client (which is obviously more efficient).</p>
<p>I'm planning on covering how to span/pre-fetch data in my next blog post in the LINQ to SQL series. &nbsp;Basically you can do this one of two ways: 1) either by changing the annotations of your data models (for example: by using the designer), or (more commonly): 2) by specifying the span/pre-fetch pattern to use when you instantiate your DataContext. &nbsp;LINQ to SQL supports using Lambda expressions to define this - which makes it very powerful. &nbsp;</p>
<p>I'll cover how to-do both in my next LINQ to SQL tutorial series - and show both how to express it via code, as well as using the &lt;asp:linqdatasource&gt;. &nbsp;</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Furthermore: the linq datasource suggests that any linq enabled O/R mapper can be used with it, as it is a LinqDataSource, not a LinqToSqlDataSource. I find this pretty bad, as I fail to see how it can be used with every Linq enabled O/R mapper out there as it exposes Linq-to-Sql specific features, not generic Linq features in general. This is shown by the 'tablename' attribute in the HTML tag for the linqdatasource control. What if the Linq enabled O/R mapper supports inheritance over multiple tables (as Linq to Sql doesn't support) ? Shouldn't it be 'EntityName' anyway because what if Linq to Sql is going to add entity inheritance over multiple tables in the future, what's the upgrade path then?</p>
<p>Right now our plan has been to add support for additional OR/M implementations to the LINQDataSource in the future (we have a prototype of it running with LINQ to Entities and plan on adding support for it in the future). &nbsp;One thing we will also do is release the source for it. &nbsp;It would obviously be great to get support for it with additional OR/M's like LLBLGen.</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; One other thing I want to ask is about the group by option: do you display a warning that after selecting group by, the entities aren't updateable anymore? Because grouped data has a totally different meaning than having a list of entity data: grouping that entity data makes the list effectively readonly. </p>
<p>There are operations you can do with the LINQDataSource that make the data read-only. &nbsp;Doing a custom hierarchical grouping of the data is one of them (you can define this using the "Group" button in the dialog above). &nbsp;You can still use all of the declarative binding features with this though (including paging, sorting, and declarative filters) - so even though the data is read-only there are still very interesting things you can do with it. :-)</p>
<p>Note that if you using Grouping or a custom projection to shape the data in a read-only way, the LINQDataSource at design-time will grey out update semantics so you know those have been disabled by your action.</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; (and I also wonder why on earth people want to mess inside HTML using strings (inside the eval calls) with property references instead of using strongly typed code in the code behind. I mean: if one renames 'Category' on the Product entity into 'MainCategory', this page will fall apart at runtime, not at compile time. )</p>
<p>The Eval() statement is a feature people either love or hate. :-) &nbsp;You could alternatively call out to an event in your code-behind to set this value instead.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3190432">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 10:58 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Akaka,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; Which version of Visual Studio you using on this demo? I am using Visual Studio Codename Orcas Version 9.0.20404 Beta1 and cannot see asp:linqdatasource control on toolbox. </p>
<p>Sorry - I should have been more clear. &nbsp;I am using VS 2008 Beta2 for this tutorial (the asp:LinqDataSource was not yet implemented in Beta1). &nbsp;VS 2008 and .NET 3.5 Beta2 should be available for download in a little over a week.</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3190593">#</a>
	                        <span>
	                            LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control) - ScottGu's Blog
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 11:34 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog.htm">LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control) - ScottGu's Blog</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control) - ScottGu's Blog</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3190702">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 11:39 AM
                            by
                            Leo
                            
	                    </div>
	                    <p>How compatible with Vista is Beta 2? &nbsp;What's the performance like on Vista? &nbsp;Will Beta 2 be released as an ISO?</p>
<p>Thanks Scott!</p>
<p>-Leo</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3190795">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 11:53 AM
                            by
                            Jeff
                            
	                    </div>
	                    <p>Very nice. &nbsp;It requires much less work than the SqlDataSource. &nbsp;I will be using the heck out of it, but only in my own work. &nbsp;I find too often that many people are afraid of new things and look for any excuse to not use it. &nbsp;Too bad for them.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3190838">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 12:01 PM
                            by
                            Ben Hayat
                            
	                    </div>
	                    <p>Hi Scott;</p>
<p>As I was reading this new post, the following sentence brought a question to mind:</p>
<p>&gt;&gt;VS 2008 includes build-in designer support to make it easy to connect up our GridView (or any other ASP.NET server control) to LINQ data.&lt;&lt;</p>
<p>Does LinqDataSource work with controls that are currently being used in VS2005 or all the third party databound controls that were working previously with other data sources? Another words, do I have to wait for third party products to be changed to work with LinqDataSource or can they work as if nothing has changed from their point of view? Can you use the grid from VS2005 with this new datasource?</p>
<p>Thanks Scott!</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3190864">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 12:04 PM
                            by
                            Eric Newton
                            
	                    </div>
	                    <p>does the LinqDatasource control expose some events so that we could specify a linq query in the codebehind?</p>
<p>I look at it and it seems to fall way short of what I was expecting from a LinqDatasource control... It would be like SqlDatasource having Database/TableName property instead of SelectCommand.</p>
<p>But since none of us have the ability to play with it, I'm really looking forward to trying it out and understanding the design concept behind LinqDatasource</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3190905">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 12:14 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Leo,</p>
<p>&gt;&gt;&gt;&gt;&gt; How compatible with Vista is Beta 2? What's the performance like on Vista? Will Beta 2 be released as an ISO?</p>
<p>VS 2008 and .NET 3.5 are definitely compatible with Vista. &nbsp;That is the OS I'm using with it right now and I haven't had any issues. &nbsp;I believe both a standalone setup as well as an ISO image is available.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3190919">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 12:17 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Ben,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; Does LinqDataSource work with controls that are currently being used in VS2005 or all the third party databound controls that were working previously with other data sources? Another words, do I have to wait for third party products to be changed to work with LinqDataSource or can they work as if nothing has changed from their point of view? Can you use the grid from VS2005 with this new datasource?</p>
<p>The LinqDataSource uses the standard DataSource model that we introduced in ASP.NET 2.0. &nbsp;What this means is that any control that today supports an ObjectDataSource or SqlDataSource will work against the LinqDataSource - so you do not need to wait for your third party controls to be updated (they should just work).</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3190939">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 12:22 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Eric,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; does the LinqDatasource control expose some events so that we could specify a linq query in the codebehind?</p>
<p>There is a "Selecting" event that you can handle in your code-behind to provide a custom LINQ query for the LINQDataSource to use. &nbsp;This should give you the ability to customize the query however you want.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3190957">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 12:25 PM
                            by
                            Ben Hayat
                            
	                    </div>
	                    <p>&gt;&gt;The LinqDataSource uses the standard DataSource model that we introduced in ASP.NET 2.0. &nbsp;What this means is that any control that today supports an ObjectDataSource or SqlDataSource will work against the LinqDataSource - so you do not need to wait for your third party controls to be updated (they should just work).&lt;&lt;</p>
<p>GOD bless you guys!</p>
<p>Just bought a new Core 2 Quad Desktop yesterday for VS2008 ;-)</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3190994">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 12:33 PM
                            by
                            Ben Hayat
                            
	                    </div>
	                    <p>Scott, I'm sorry if this question is unrelated to your post, but your answer might save me a lot of hassle. As mentioned in my previous post, just bought a new PC, but it comes with Home Vista Premium. Can I install VS2008 on Home Vista or do I need to reformat my hard disk and use my Vista from my MSDN subscription?</p>
<p>Thank you very much for taking the time and answering all my questions!</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3191048">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 12:40 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Ben,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Scott, I'm sorry if this question is unrelated to your post, but your answer might save me a lot of hassle. As mentioned in my previous post, just bought a new PC, but it comes with Home Vista Premium. Can I install VS2008 on Home Vista or do I need to reformat my hard disk and use my Vista from my MSDN subscription?</p>
<p>You can definitley install VS 2008 on Home Vista. &nbsp;The only feature I know of that you might care about that isn't in Home Premium is that IIS7 doesn't support Windows Authentication on it (although you can use ASP.NET's Forms Authentication). &nbsp;If you want to use that feature you might want to upgrade - but otherwise it should work for you.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3191102">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 12:46 PM
                            by
                            Leo
                            
	                    </div>
	                    <p>Thanks for the response above. &nbsp;One final question: &nbsp;How feature complete will Beta 2 be? &nbsp;Or put another way, is there anything not in Beta 2 that will be in the release? &nbsp;ADO.NET Entity Framework, for example, comes to mind.</p>
<p>Thanks again Scott!</p>
<p>-Leo</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3191129">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 12:51 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Leo,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; Thanks for the response above. One final question: How feature complete will Beta 2 be? Or put another way, is there anything not in Beta 2 that will be in the release? ADO.NET Entity Framework, for example, comes to mind.</p>
<p>Beta2 will be mostly feature complete. &nbsp;There are a few additional small tweaks that will be made based on feedback, but overall the feature set will be 99% there. &nbsp;</p>
<p>The ADO.NET Entity Framework won't be in the VS 2008 or .NET 3.5 release when it ships. &nbsp;It will instead ship later next year.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3192121">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 1:57 PM
                            by
                            Jim
                            
	                    </div>
	                    <p>Scott,</p>
<p>Your examples in this post seem to allow for very rapid, but simple development. &nbsp;I have a hard time actually using the designers for production code and tend always use code to do databinding. &nbsp;Do you find yourself using the designers more often than typing by hand?</p>
<p>Great post none the less and I'm very excited for VS 2008.</p>
<p>Jim</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3192210">#</a>
	                        <span>
	                            Lives writer &amp;laquo; chakrit
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 2:10 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://chakrit.wordpress.com/2007/07/17/lives-writer/">Lives writer « chakrit</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;Lives writer &amp;laquo; chakrit</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3192234">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 2:18 PM
                            by
                            elixir
                            
	                    </div>
	                    <p>can't wait till this goes rtm!</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3192264">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 2:30 PM
                            by
                            JasonBSteele
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>Looks great - and I'm glad you're saying it'll be with us in a couple of weeks as i had heard horror stories that it wouldn't be until "late summer" (summer hasn't even started in the UK)!</p>
<p>However, I think I share Eric's and Franks concerns about the use of TableName to specify the query being a bit restrictive. And trapping it in an event to change it into suomething else just doesn't seem very elegant.</p>
<p>Are there plans to add other ptopertie(s) that would allow us to specify a query instead? Or perhaps we'll have to wait until the EF version before we get this sort of thing. In which case do you know how that might specy the query? (Perhaps an eSQL string?)</p>
<p>Thanks again for sharing,</p>
<p>Jason</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3192520">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 3:04 PM
                            by
                            <a title="Roger Hendriks" rel="nofollow" href="http://rogerhendriks.blogspot.com/">Roger Hendriks</a>
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>I notice Microsoft is supporting more and more backend logic in the presentation layer. From a 3-tier pont of view this looks dirty (to say the least:). Is this to please the old asp and php hackers to finally start using asp.net?</p>
<p>Grtz from Roger</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3192590">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 3:14 PM
                            by
                            <a title="billie" rel="nofollow" href="http://www.webrawl.com/">billie</a>
                            
	                    </div>
	                    <p>All looks great, can't wait to use it. &nbsp;What sort of plan do you guys have in place to convince large companies that LINQ to SQL is going to be a good, safe choice? &nbsp;Lots of large companies have the database divide where developers do not write sql/store procs dbms do. &nbsp;What is in place to push linq adoption in groups such as these?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3192860">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 3:56 PM
                            by
                            <a title="kevindente" href="http://weblogs.asp.net/kdente">kevindente</a>
                            
	                    </div>
	                    <p>Great info. Thanks, Scott.</p>
<p>It's a drag, though, that the developer has to do so much manual work to resolve foreign key references. That seems like a primary use case, and it should just work out of the box (as it does in Subsonic, for example).</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3192923">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 4:08 PM
                            by
                            Chris Moseley
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>Great post, I'm really impressed with most of LINQ To Sql but I have a few questions.</p>
<p>Frans said:</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; In the part where you display human readable supplier and category names, it's unclear for the reader that these names are read-in using lazy loading, which means 2 queries per row, as that's how ASP.NET works: per row that expression is evaluated, which results in a hit to the property 'Supplier' or 'Category' on the active product, which results in 2 queries per row: one for the supplier, and one for the category. This is really performance intense. Can you specify a span/prefetch path as well?</p>
<p>&gt;&gt;&gt;&gt;&gt; LINQ to SQL allows you to specify whether to lazily or eagerly span/pre-fetch your associations. &nbsp;So for example when you say MyProduct.Supplier.CompanyName in a loop (like I am above with the GridView) you can either end up doing one call per loop iteration, or a join that returns all of the relevant Company name's and assembles them for Products on the client (which is obviously more efficient).</p>
<p>span/prefetch path as well?"</p>
<p>I've looked into how to do this before (using a DataShape.LoadWith) and noticed that it's possible to join two tables together resulting in a single query (for say, customers and orders). This is fine, however, is it possible to avoid lazy loading on more two tables? for example, can I retrieve Products, Suppliers and Categories all in one go, without any extra queries for each product?</p>
<p>If I wanted to use LINQ To Sql to bind to a GridView without using a LinqDataSource, how would I do the column sorting, which would have to use a dynamic field name in the query?</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3192949">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 4:15 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Jim,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; Your examples in this post seem to allow for very rapid, but simple development. &nbsp;I have a hard time actually using the designers for production code and tend always use code to do databinding. &nbsp;Do you find yourself using the designers more often than typing by hand?</p>
<p>I usually use a combination of the designers + writing the code by hand. &nbsp;I find some of the databinding picker dialogs useful (since they use reflection to look up things for me) and also a good way to learn for things I'm not super familiar with. &nbsp;Once I know what I am doing I then usually just drop into source mode and type it. Thankfully the &lt;asp:linqdatasource&gt; is fairly easy to type - since it only really requires you to specify the class name of your content and the origional entity table to use to get started.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3192981">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 4:18 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Jason,</p>
<p>&gt;&gt;&gt;&gt;&gt; However, I think I share Eric's and Franks concerns about the use of TableName to specify the query being a bit restrictive. And trapping it in an event to change it into suomething else just doesn't seem very elegant. &nbsp;Are there plans to add other ptopertie(s) that would allow us to specify a query instead? Or perhaps we'll have to wait until the EF version before we get this sort of thing. In which case do you know how that might specy the query? (Perhaps an eSQL string?)</p>
<p>LINQDataSource allows you to specify a declarative select, where and orderby statement that allows you to-do custom shapeing, filtering and ordering for common scenarios. &nbsp;We thought of providing more declarative support for more advanced queries - but ultimately decided that since LINQ is a terse way to represent queries (and has the benefit of intellisense, debugging and compile-time checking) it didn't make sense for us to invent yet a new language to express these more advanced scenarios. Instead you can just add a method to your code-behind class and use LINQ within it to express any query you want.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3193010">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 4:19 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Roger,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; I notice Microsoft is supporting more and more backend logic in the presentation layer. From a 3-tier pont of view this looks dirty (to say the least:). Is this to please the old asp and php hackers to finally start using asp.net?</p>
<p>In my sample above I don't have any backend logic in the presentation layer. &nbsp;All of the actual logic on how to bind against the database (column/schema mappings) and business logic rules are kept entirely out of the presentation tier (and instead in the data model). &nbsp;I think capabilities like LINQ to SQL hopefully encourage even more people to cleanly build their applications this way in the future.</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3193054">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 4:22 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Billie,</p>
<p>&gt;&gt;&gt;&gt;&gt; All looks great, can't wait to use it. &nbsp;What sort of plan do you guys have in place to convince large companies that LINQ to SQL is going to be a good, safe choice? &nbsp;Lots of large companies have the database divide where developers do not write sql/store procs dbms do. &nbsp;What is in place to push linq adoption in groups such as these?</p>
<p>Different companies and teams usually have different sets of requirements. &nbsp;So rather than force people to only do things one way, we typically want to provide good options and guidance and allows teams to customize where necessary based on their specific needs.</p>
<p>I do think LINQ to SQL will nail 90%+ of application scenarios, though, and will provide an awesome experience for building applications that scale both from simple requirements to very demanding ones. &nbsp;I think the productivity benefits it brings, as well as the integrated language and tool support, will hopefully convince teams of its value.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3193071">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 4:25 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Kevin,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; It's a drag, though, that the developer has to do so much manual work to resolve foreign key references. That seems like a primary use case, and it should just work out of the box (as it does in Subsonic, for example).</p>
<p>We actually have some more dynamic UI control support (which is based on the &lt;asp:linqdatasource&gt;) that will be coming out in a few months that allows you to get dynamic column support (including visualizing things like drop-downlists for foreign-keys automatically). &nbsp;I used the vanilla GridView control above for the sample mainly since it is already in the box, and people know it today. &nbsp;But we'll definitely add to it in the future to make this scenario even more integrated.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3193255">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 4:48 PM
                            by
                            Mike
                            
	                    </div>
	                    <p>You're doing a great job answering all questions, thanks!</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3193307">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 5:01 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Chris,</p>
<p>&gt;&gt;&gt;&gt;&gt; I've looked into how to do this before (using a DataShape.LoadWith) and noticed that it's possible to join two tables together resulting in a single query (for say, customers and orders). This is fine, however, is it possible to avoid lazy loading on more two tables? for example, can I retrieve Products, Suppliers and Categories all in one go, without any extra queries for each product?</p>
<p>I know you can use the DataShape feature in LINQ to SQL to support more than two tables. &nbsp;Whether you can retrieve all of the data in a single query, though, probably depends on the structure of your data. &nbsp;I need to play around with it a little to learn more. &nbsp;One thing to do in VS 2008 Beta2 is to use the debug visualizers I talked about in Part 3 of this blog post series to look at the actual SQL generated when you execute a query. &nbsp;That should provide a good way to see what SQL it is executing under the covers.</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; If I wanted to use LINQ To Sql to bind to a GridView without using a LinqDataSource, how would I do the column sorting, which would have to use a dynamic field name in the query?</p>
<p>The easiest way to have a UI control do column sorting is to use the LinqDataSource. &nbsp;You could then handle the "selecting" event off of the LindDataSource if you want to use your own logic to retrieve the data.</p>
<p>LINQ and LINQ to SQL queries support deferred execution - which means they don't run until you try and access the data from them. &nbsp;Once thing thing this enables is the ability to compose queries out of other queries - allowing you to build up things like conditional filtering and ordering. &nbsp;You could do this in response to a column header be clicked, and add an orderby clause to the LINQ expression based on what column is clicked.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3193631">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 5:26 PM
                            by
                            Aykut Ucar
                            
	                    </div>
	                    <p>Will Beta2 be with go live license?</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3193730">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 5:32 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Aykut,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Will Beta2 be with go live license?</p>
<p>Yes - Beta2 will have a go-live license.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3193906">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 5:40 PM
                            by
                            Chris Moseley
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>Thanks for replying; I agree with Mike, you're doing a great job answering all these questions.</p>
<p>&gt;&gt;&gt;&gt;&gt;I know you can use the DataShape feature in LINQ to SQL to support more than two tables. </p>
<p>I've looked quite hard and I can't figure out how... for example:</p>
<p>NorthwindDataContext ctx = new NorthwindDataContext();</p>
<p> &nbsp; &nbsp;DataShape shape = new DataShape();</p>
<p> &nbsp; &nbsp;shape.LoadWith&lt;Customer&gt;(c =&gt; c.Orders);</p>
<p> &nbsp; &nbsp;ctx.Shape = shape;</p>
<p>It looks as if I can only apply a single Shape object to each context, and that the LoadWith&lt;T&gt; method only supports a single expression so how would I 'pre-load' the data for more than two tables?</p>
<p>&gt;&gt;&gt;&gt;&gt;The easiest way to have a UI control do column sorting is to use the LinqDataSource</p>
<p>That’s fair enough I'm sure I can bring myself to use declarative code if I must ;-) </p>
<p>&gt;&gt;&gt;&gt;&gt;You could do this in response to a column header be clicked, and add an orderby clause to the LINQ expression based on what column is clicked.</p>
<p>But, when you click a column, you'll get a string representation of a field name - how would you use that in an orderby clause without the aid of a potentially enormous switch/select statement? Correct me if i'm wrong but the following is not currently possible:</p>
<p>from c in ctx.Customers</p>
<p>orderby "name"</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3194393">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 6:31 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Chris,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; It looks as if I can only apply a single Shape object to each context, and that the LoadWith&lt;T&gt; method only supports a single expression so how would I 'pre-load' the data for more than two tables?</p>
<p>I think you can call the LoadWith() statement multiple times. &nbsp;So to setup relationships across multiple tables just call it multiple times with each one.</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; But, when you click a column, you'll get a string representation of a field name - how would you use that in an orderby clause without the aid of a potentially enormous switch/select statement? </p>
<p>You can use a switch statement today to construct the LINQ queries dynamically in a strongly typed way. &nbsp;There is also a utility library that we'll ship the source to that allows you to easily contruct LINQ expressions dynamically via strings. &nbsp;That is actually what the LINQDataSource does internally - and which you can optionally use instead to make the orderby values completely dynamic.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3198236">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 17, 2007 11:41 PM
                            by
                            <a title="kevindente" href="http://weblogs.asp.net/kdente">kevindente</a>
                            
	                    </div>
	                    <p>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;We actually have some more dynamic UI control support (which is based on the &lt;asp:linqdatasource&gt;) that will be coming out in a few months that allows you to get dynamic column support</p>
<p>Scott,</p>
<p>Will that be part of Orcas proper? ASP.NET Futures? Some open source project? Or a future release of the .NET framework?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3198446">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 12:24 AM
                            by
                            <a title="Vikram" rel="nofollow" href="http://www.vikramlakhotia.com/">Vikram</a>
                            
	                    </div>
	                    <p>wow, I really love the concept of Drop down list in Place of Related Data. Way to go. Cant wait for the beta 2 release. Please get it as fast as possible.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3198610">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 12:35 AM
                            by
                            Ngoc Luu
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>In VS2008 Beta1, when I place some WebPartZone in an UpdatePane, each WebPartZone has some WebParts in it, when I switch webparts to Design mode, I can't drag WebParts to other zones.</p>
<p>Will WebPart and UpdatePanel in VS2008 Beta2 be compatible together?</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3200604">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 2:22 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Kevin,</p>
<p>&gt;&gt;&gt;&gt;&gt; Will that (the dynamic data controls) be part of Orcas proper? ASP.NET Futures? Some open source project? Or a future release of the .NET framework?</p>
<p>We are looking to make this initially available as an ASP.NET extensions release (similar to the ASP.NET AJAX release). &nbsp;It would then be built-in to the next release of the .NET Framework.</p>
<p>Hope this helps,</p>
<p>Scott &nbsp;</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3200618">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 2:23 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Ngoc,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt;In VS2008 Beta1, when I place some WebPartZone in an UpdatePane, each WebPartZone has some WebParts in it, when I switch webparts to Design mode, I can't drag WebParts to other zones. &nbsp;</p>
<p>Will WebPart and UpdatePanel in VS2008 Beta2 be compatible together?</p>
<p>In Beta2 you'll be able to put your webpartzone's within an UpdatePanel, and then have each WebPart optionally use its own UpdatePanel as well. &nbsp;This should give nice integration between ASP.NET AJAX and WebPart scenarios.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3201254">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 3:00 AM
                            by
                            Vishal Doshi
                            
	                    </div>
	                    <p>Well done Scott ! I'm waiting for more to come in 3.5 from your side .... Thanks a lot.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3201783">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 3:41 AM
                            by
                            <a title="Keith Patton" rel="nofollow" href="http://blog.keithpatton.com/">Keith Patton</a>
                            
	                    </div>
	                    <p>for paging, is the default behaviour to pull back all results and then just show a page, or is the LinqDataSource clever enough to use 2 queries internally and RowNumber() with SQL 2005 to implement performant querying. If not, you would have objects instantiated for every single row in the query results resulting in presumably poorer performance than filling and returning dataset. We use NHibernate a lot and although it does not support ROWNUmber() with SQL 2005 as yet, you can tell it a start and end result and it will at least resolve the page of results at teh database end of things and only instantiate objects for the number of results you are using. </p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3201917">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 3:58 AM
                            by
                            <a title="FransBouma" href="http://weblogs.asp.net/fbouma">FransBouma</a>
                            
	                    </div>
	                    <p>"Right now our plan has been to add support for additional OR/M implementations to the LINQDataSource in the future (we have a prototype of it running with LINQ to Entities and plan on adding support for it in the future). &nbsp;One thing we will also do is release the source for it. &nbsp;It would obviously be great to get support for it with additional OR/M's like LLBLGen."</p>
<p>We already have our own datasourcecontrol, so I think we'll keep that for some time, but it's good to hear MS sees the LinqDataSource as a general datasource for all Linq enabled O/R mappers. :) </p>
<p>The only thing I'm a bit bothered with is that it's not that generic when Orcas hits the streets. I fail to see why, as it's a new control, so you could have designed it as generic as possible from the ground up, but I have the feeling it wasn't meant to be in the first place. If you ship this as a non-generic datasource control, it will be a true sign MS doesn't understand that .NET is a framework others build upon, not an end-user product. Sorry to say it Scott, but 'in the future' means not before 2009, so effectively a missed chance. </p>
<p>Will that sourcecode be shipped with orcas or later?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3202173">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 4:24 AM
                            by
                            Nagarajan
                            
	                    </div>
	                    <p>Is there anything like LinqDataSource for WPF to work with?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3202175">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 4:25 AM
                            by
                            Roger Hendriks
                            
	                    </div>
	                    <p>Hi Scott, </p>
<p>Thanks for you answer, I myself add everything not regarding layout in the codebehind cs (even dynamic validators) but thats a personal choice. I guess "Tables" and the property "TableName" is also a little disturbing in this respect. I presume it's the object on which the actual table is mapped with attribute generated by the designer? </p>
<p>One question about performance. Is the example going to lead to 20 subselects for categories and suppliers? If so a join with paging example would be nice :)</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3202280">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 4:54 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Frans,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; The only thing I'm a bit bothered with is that it's not that generic when Orcas hits the streets. I fail to see why, as it's a new control, so you could have designed it as generic as possible from the ground up, but I have the feeling it wasn't meant to be in the first place. If you ship this as a non-generic datasource control, it will be a true sign MS doesn't understand that .NET is a framework others build upon, not an end-user product. Sorry to say it Scott, but 'in the future' means not before 2009, so effectively a missed chance. &nbsp;Will that sourcecode be shipped with orcas or later?</p>
<p>The DataSourceControl base class is designed to enable truly generic data source controls (like the one you've already built). &nbsp;All ASP.NET UI controls work against that, as opposed to specific implementations, so that they can generically be bound to any data provider.</p>
<p>The LinqDataSource is not designed to be fully generic for all ORMs - because different ORM implementations have slightly different semantics, having it work against all out of the box is a tall order. &nbsp;Our hope overtime is that we can add additional support so that more and more LINQ ORMs just work perfectly fine with it. &nbsp;We'll also be shipping the source code (hopefully around the time Orcas ships) so that other ORM implementations can adapt their own customized versions as needed.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3202287">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 4:54 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Nagarajan,</p>
<p>&gt;&gt;&gt;&gt;&gt; Is there anything like LinqDataSource for WPF to work with?</p>
<p>Yes - WPF will also support databinding using LINQ. &nbsp;I'll put this on the list to blog in the future.</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3202308">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 4:57 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Roger,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Thanks for you answer, I myself add everything not regarding layout in the codebehind cs (even dynamic validators) but thats a personal choice. I guess "Tables" and the property "TableName" is also a little disturbing in this respect. I presume it's the object on which the actual table is mapped with attribute generated by the designer? </p>
<p>The TableName in this case is based on the objects in the DataContext class - and does not require that the underlying database have a table name with that value. &nbsp;You could map your DataContext to instead refer to a differently named table if you want.</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; One question about performance. Is the example going to lead to 20 subselects for categories and suppliers? If so a join with paging example would be nice :)</p>
<p>The retrieval behavior depends on whether you shape the LINQ to SQL data context. &nbsp;I'll be doing a blog post in the near future that talks about how to-do this - in which case it will use a join with paging just like you are after. :-)</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3202912">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 5:52 AM
                            by
                            Michael
                            
	                    </div>
	                    <p>Is there an easier way to supply parameter values from the code behind page when binding against a DataSource? I did find an example of creating a custom parameter object to do this at the site linked below but it would be nice if it were built into the dotnet framework by default.</p>
<p><a rel="nofollow" target="_new" href="http://blog.davidyack.com/archive/2005/07/13/3385.aspx">blog.davidyack.com/.../3385.aspx</a></p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3206779">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 9:36 AM
                            by
                            <a title="Brendan Enrick" rel="nofollow" href="http://aspadvice.com/blogs/name/default.aspx">Brendan Enrick</a>
                            
	                    </div>
	                    <p>Excellent blog post as always. This was an excellent series. It is great content like this that keeps all of your happy readers here all the time. </p>
<p>Are you planning on writing another series of posts anytime in the near future?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3207096">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 10:25 AM
                            by
                            <a title="Mike Griffin" rel="nofollow" href="http://www.entityspaces.net/">Mike Griffin</a>
                            
	                    </div>
	                    <p>Question: </p>
<p>Why was the ability to have LINQ return DataTable's (or be converted as it were) removed from this latest Orca's release. Was it to prevent 3rd party ORM Vendors from being able to build upon Linq? As it stands it appears that the only thing LINQ can be used for is the ADO.NET Entity Framework?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3207108">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 10:28 AM
                            by
                            <a title="Damien Guard" rel="nofollow" href="http://www.damieng.com/blog/">Damien Guard</a>
                            
	                    </div>
	                    <p>Nice article bar the lack of insert and delete confirmation (not LINQ's fault I know - a limitations of the GridView control that hopefully the new ListView will address.</p>
<p>[)amien</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3207674">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 11:34 AM
                            by
                            CraX
                            
	                    </div>
	                    <p>I just wanted to thank you Scott, you're the sh@&amp;!</p>
        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3207931">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 12:11 PM
                            by
                            Orlin
                            
	                    </div>
	                    <p>Are cascading dropdowns in databound controls (formview or gridview) supported in this new version? &nbsp;That scenario is difficult to implement in ASP.NET 2.0.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3207957">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 12:16 PM
                            by
                            Scott Gurvey
                            
	                    </div>
	                    <p>Another great article, thanks.</p>
<p>Will there be an equivalant LinqDataSourceControl for Windows Forms GUI? I have been trying to get my data into a DataGridView without success. Perhaps that isn't yet in Beta-1!</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3215355">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 18, 2007 8:42 PM
                            by
                            Eric Newton
                            
	                    </div>
	                    <p>I can't wait to see this... prototyping web apps will be super easy, and reasonably able to "grow up" as the system matures.</p>
<p>As for the TableName, I assume its so the designer can have something to work with without having to have everybody write code... but of course the code option will give the best benefits from LINQ.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3216834">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 19, 2007 12:31 AM
                            by
                            Nagarajan
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>	Thank you very much for your reply about LinqDataSource for WPF. &nbsp;I am very much interested in developing WPF Desktop application for my company. The application users are over 3500. So, please add over all architecture and handling things like database connection and so on. I hope that the coming post will have enough details to start our development.</p>
<p>Regards,</p>
<p>Nagarajan</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3219364">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 19, 2007 5:49 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Brendan,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; Are you planning on writing another series of posts anytime in the near future?</p>
<p>I'll be doing several more posts in this LINQ to SQL series. &nbsp;I'll also then be starting a ListView series that talks about some of the new capabilities of the &lt;asp:listview&gt; control.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3219380">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 19, 2007 5:53 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Mike,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Why was the ability to have LINQ return DataTable's (or be converted as it were) removed from this latest Orca's release. Was it to prevent 3rd party ORM Vendors from being able to build upon Linq? As it stands it appears that the only thing LINQ can be used for is the ADO.NET Entity Framework?</p>
<p>I sent email to the data team, and here is the response they came back with:</p>
<p>"I assume that Mike is talking about a feature that we had prior to Beta 1, which was a method that would shred an IEnumerable&lt;T&gt; into a DataTable. We decided to remove the feature because there wasn’t a clear “right” way to shred the data. There were many problems without correct answers, such as the following.</p>
<p>- Should the schema be extended for sub-types? </p>
<p>- Should the object graph be shredded as tables/relations? </p>
<p>- How should we handle properties/types that don’t correspond to a supported DataSet type?</p>
<p>- Should we use serialization logic?</p>
<p>Given all the problems and issues, we decided that it was better to make the right decision, so we pulled the feature until we could figure out the best way to do this. We had a DCR to address these issues, and ended up with a design that would address core scenarios, but we were unable to fit it in Orcas. Instead, we are going to document how to do object shredding into a DataTable, so that these issues can be resolved by the user for their particular scenario."</p>
<p>Note that features like IQueryable&lt;T&gt; make it possible for any ORM system to integrate very cleanly with LINQ, and to enable you to take full advantage of the new language and tool features against any backend database implementation.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3219409">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 19, 2007 5:58 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Damien,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; Nice article bar the lack of insert and delete confirmation (not LINQ's fault I know - a limitations of the GridView control that hopefully the new ListView will address.</p>
<p>Here is an old blog post I wrote that talks a little about how you can add a confirmation step before deleting something in the GridView: <a rel="nofollow" target="_new" href="http://weblogs.asp.net/scottgu/archive/2006/01/02/434362.aspx">weblogs.asp.net/.../434362.aspx</a></p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3219417">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 19, 2007 5:59 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>&gt;&gt;&gt;&gt;&gt; Will there be an equivalant LinqDataSourceControl for Windows Forms GUI? I have been trying to get my data into a DataGridView without success. Perhaps that isn't yet in Beta-1!</p>
<p>You will definitely be able to use LINQ to SQL with WinForms and the DataGridView control there. &nbsp;I'll try and blog about this in the future.</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3222912">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 19, 2007 10:21 AM
                            by
                            Ben Hayat
                            
	                    </div>
	                    <p>Hi Scott;</p>
<p>I think your blogs and answers are very valuable to us to make decisions. My question is, why other product/program managers, VP, and other architects don't take the same approach of opening and sharing info about WPF, WCF, WF and SilverLight? Recently, there is so much silence about WF and WPF that sometime we wonder if there is any development activity there any more. Your blogs have given us lots of confidence about LINQ and the new SilverLight and ASP.Net, but I wish other PMs would do the same...</p>
<p>Thanks for any comments!</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3223629">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 19, 2007 11:45 AM
                            by
                            Winston Fassett
                            
	                    </div>
	                    <p>Keith --</p>
<p>We bumped into this issue with NHibernate and one of my colleagues wrote an alternative SQL Server 2005 dialect for NHibernate that we have been using on multiple projects for several months. &nbsp;It correctly implements paging using ROW_NUMBER, only retrieving the rows for the given page. &nbsp;It hasn't made it into a stable version yet, but appears to be scheduled for HHibernate 1.2.1.</p>
<p>Here's a link to the JIRA ticket, which contains an attachment for the patched dialect: &nbsp;</p>
<p><a rel="nofollow" target="_new" href="http://jira.nhibernate.org/browse/NH-903;jsessionid=DE3BB77DBA6353F3CF0C0A58187B70D3?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel">jira.nhibernate.org/.../NH-903;jsessionid=DE3BB77DBA6353F3CF0C0A58187B70D3</a></p>
<p>I'd also like to mention that we wrote an NHibernateDatasource control a few months ago and it is very similar to this one, albeit a bit more amateurish, but that's what you get for free. &nbsp;It supports paging, sorting, updating, generating DataTables, and dynamic WHERE clauses bound to parameters. &nbsp;It's available at CodeProject:</p>
<p><a rel="nofollow" target="_new" href="http://www.codeproject.com/useritems/NHibernateDataSource.asp">www.codeproject.com/.../NHibernateDataSource.asp</a></p>
<p>Scott,</p>
<p>I am still curious about how LinqDataSource is handling the paging, and whether it uses ROW_NUMBER. &nbsp;If it does, I'm particularly curious about how it gets the total page count. &nbsp;When we tried to do this in our data source control, we had to generate a second query that would perform a SELECT COUNT in order to get the total number of results available, creating a tradeoff between time saved by paging and the time lost in executing the COUNT query. &nbsp;Is there an easier way?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3223713">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 19, 2007 11:57 AM
                            by
                            Winston Fassett
                            
	                    </div>
	                    <p>Scott, also...</p>
<p>I'm wondering if using the LinqDataSource control illuminated any weaknesses in ASP.NET data-binding. &nbsp;I've had a love/hate relationship with ASP.NET databinding, and I believe it's mainly because I use an ORM approach rather than a DataTable-based approach. &nbsp; </p>
<p>The most challenging thing is that 2-way ASP.NET databinding itself, i.e. &nbsp;&lt;# Bind() #&gt; expressions, is VERY restrictive. &nbsp;Half of it must be implemented by DataSourceControls, and half of it &nbsp;seems to be locked up in an exotic compile-time process with nowhere for the developer to hook in. &nbsp;Also, it seems to be designed for tidy two-dimensional DataTable-backed objects, rather than an object graph of variable depth. &nbsp;Even though I can make my data source control support nested binding, the Bind expression imposes a compile-time Regex that restricts the "." character, so I'm out of luck. &nbsp;The shallowness of the current 2-way databinding is frustrating.</p>
<p>Given the new emphasis on LINQ, and this new LinqDataSource, do you anticipate any changes to ASP.NET databinding that would facilitate binding to an object graph? &nbsp;I'd love to see some more flexibility. &nbsp;It would be great if developers could inject their own binding implementation via the web.config, perhaps as a Provider. &nbsp;</p>
<p>Are there any plans at all to revise the current approach to ASP.NET binding?</p>
<p>While I'm on a roll here, I'd just like to make some general comments on DataSource controls:</p>
<p>* The basic concept of databound controls and DataSourceControls is great. &nbsp;They can save you a lot of coding and testing, especially if they are sitting on another abstraction such as an ORM.</p>
<p>* Implementing DataSourceControls is a pain in the a**, and I think this is why there are so few out there. &nbsp;I've never seen a good tutorial on how to write one, and we were basically fumbling around in the dark when we wrote ours.</p>
<p>* Implementing data bound controls is also a real pain, especially if you don't extend the base classes. &nbsp;For example, writing a UserControl that could be backed by a DataSourceControl was far from simple. &nbsp;</p>
<p>* Let's just say that in order to write DataSourceControls and data-bound controls, I found myself using Reflector a LOT.</p>
<p>Hope that didn't sound too negative. &nbsp;Like I said, it's love/hate.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3226964">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 19, 2007 6:45 PM
                            by
                            <a title="Juan Mar&amp;#237;a" rel="nofollow" href="http://thinkingindotnet.wordpress.com/">Juan María</a>
                            
	                    </div>
	                    <p>Hi, you can read this post in spanish here:</p>
<p><a rel="nofollow" target="_new" href="http://thinkingindotnet.wordpress.com/2007/07/19/linq-to-sql-5%c2%aa-parte-enlazar-controles-de-interfaz-de-usuario-con-el-asplinqdatsource/">thinkingindotnet.wordpress.com/.../linq-to-sql-5%c2%aa-parte-enlazar-controles-de-interfaz-de-usuario-con-el-asplinqdatsource</a></p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3231725">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 20, 2007 2:18 AM
                            by
                            <a title="Manuel Abadia" rel="nofollow" href="http://www.manuelabadia.com/">Manuel Abadia</a>
                            
	                    </div>
	                    <p>Scott,</p>
<p>Will bind expressions like Bind("Address.City") be supported for the next release?</p>
<p>Not being able to work with subobjects is a BIG limitation of the data binding infrastructure.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3243703">#</a>
	                        <span>
	                            VS Orcas, Visual Studio Code Name Orcas  &amp;raquo; Blog Archive   &amp;raquo; some of the new features of VS Orcas
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, July 21, 2007 3:58 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://www.vsorcas.net/articles/some-of-the-new-features-of-vs-orcas/">VS Orcas, Visual Studio Code Name Orcas  » Blog Archive   » some of the new features of VS Orcas</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;VS Orcas, Visual Studio Code Name Orcas &nbsp;&amp;raquo; Blog Archive &nbsp; &amp;raquo; some of the new features of VS Orcas</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3247588">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, July 21, 2007 5:55 PM
                            by
                            <a title="Roger Jennings" rel="nofollow" href="http://oakleafblog.blogspot.com/">Roger Jennings</a>
                            
	                    </div>
	                    <p>Pingback from <a rel="nofollow" target="_new" href="http://oakleafblog.blogspot.com/2007/07/linq-update-for-week-of-july-16-2007.html">oakleafblog.blogspot.com/.../linq-update-for-week-of-july-16-2007.html</a></p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3251109">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Sunday, July 22, 2007 1:00 PM
                            by
                            Eric Newton
                            
	                    </div>
	                    <p>Winston Fassett: I've actually been complaining about poor object-graph databinding for a while now... for instance, you are probably aware that as of VS2008.B1 you *STILL* cannot specify nested properties in a GridView BoundField. &nbsp;</p>
<p>For instance:</p>
<p>&lt;asp:BoundField DataField="Property1.ChildProperty1.ChildProperty1" /&gt;</p>
<p>won't work, even if you had the correct types.</p>
<p>Scott, what's the deal with this man? &nbsp;Now that we're dealing with object-graphs coming from LINQ, why to this day has the BoundField issue not been addressed?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3255456">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, July 23, 2007 7:53 AM
                            by
                            <a title="Zubair.NET!" rel="nofollow" href="http://zubairdotnet.blogspot.com/">Zubair.NET!</a>
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>Is LinqDatasource part of June 2007 CTP? because I couldn't find it due to reasons given below.</p>
<p>Couple of issues off topic, firstly I downloaded the VS Orcas June CTP bits but they appear to be corrupted and couldn't be extracted, then I installed the VWDX June 2007 CTP, it crashes alot and doesn't contain the Entity Framework Designer, it's just too hard to work without the designer to create your Entity DataModel. Does your team intend to ship it with Beta2?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3258746">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, July 23, 2007 5:54 PM
                            by
                            <a title="Test" rel="nofollow" href="http://test/">Test</a>
                            
	                    </div>
	                    <p>Hi what does this mean in 3 tier (web server talking to app server and appserver talking to database)? ARe we still stuck with Object datasource ?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3265147">#</a>
	                        <span>
	                            Feauture NET &amp;laquo; Cosa importa se&amp;#8230;.
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 24, 2007 6:09 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://pythonyan.wordpress.com/2007/07/24/feauture-net/">Feauture NET « Cosa importa se….</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;Feauture NET &amp;laquo; Cosa importa se&amp;#8230;.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3276157">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 25, 2007 2:15 PM
                            by
                            <a title="Majid Shahabfar" rel="nofollow" href="http://www.persiadevelopers.com/">Majid Shahabfar</a>
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>I wonder if you cover Compiled Queries in your next post please.</p>
<p>Thank you in advance.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3276341">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 25, 2007 2:27 PM
                            by
                            Dhaval Patel
                            
	                    </div>
	                    <p>What about paging, Scott? I know you covered the "Take" and the "Skip" features in your previous posts, but how do these relate to the LinqDataSource?</p>
<p>Keep up the great work. Thanks!</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3277016">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 25, 2007 5:29 PM
                            by
                            <a title="movers" href="http://www.hireahelper.com/">movers</a>
                            
	                    </div>
	                    <p>I'm confused as well as to if we are stuck with the Object datasource. Maybe this was already explained... I'll re-read. </p>
<p>I look forward to more posts on LINQ.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3278288">#</a>
	                        <span>
	                            VS 2008 ベータ2 と同時に ASP.NET Futures July CTP がリリース予定
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 25, 2007 8:26 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://cs.gogo-asp.net/blogs/naoki/archive/2007/07/26/VS-2008-_D930FC30BF30_2-_68300C5442666B30_-ASP.NET-Futures-July-CTP-_4C30EA30EA30FC30B930884E9A5B_.aspx">ナオキにASP.NET（仮）</a>
                            
	                    </div>
	                    <p>Public Sector Developer Weblog からです。 WEBCAST FOLLOW UP: What's New for Web Developers in Visual Studio</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3288018">#</a>
	                        <span>
	                            Lambdas, and Take While, and Group By, Oh My!
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, July 26, 2007 5:17 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://blogs.msdn.com/vbteam/archive/2007/07/26/lambdas-and-take-while-and-group-by-oh-my.aspx">The Visual Basic Team</a>
                            
	                    </div>
	                    <p>Hooray! Visual Basic 2008 Beta2 has been released to the wild today to return to its natural habitat</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3292586">#</a>
	                        <span>
	                            [Visual Studio] Les nouveautés de la Beta 2 de Visual Studio 2008 et du Framework .NET 3.5 Beta 2 !
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 27, 2007 3:29 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://blogs.developpeur.org/tom/archive/2007/07/27/visual-studio-les-nouveaut-s-de-la-beta-2-de-visual-studio-2008-et-du-framework-net-3-5-beta-2.aspx">Thomas Lebrun</a>
                            
	                    </div>
	                    <p>La Beta 2 de Visual Studio 2008 est arrivée très récemment et avec elle, on retrouve pas mal de petites</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3295542">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, July 27, 2007 11:44 AM
                            by
                            <a title="Sorin Dolha" rel="nofollow" href="http://sdolha.spaces.live.com/">Sorin Dolha</a>
                            
	                    </div>
	                    <p>Really nice series. I went through all of it, and I can't be more happy that this is really live. I'm currently downloading the Beta 2 to test myself. I'm curious if the changes recorded by the DataContext will be then sent to the database in the same order that they happen (not like DataSet/TableAdapters where they were sent one table after the other, from top to down in each table). I just HOPE that it records changes and applies them in the appropriate order!</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3304415">#</a>
	                        <span>
	                            LINQ to SQL (パート 5 - ASP:LinqDataSourceコントロールを使用してUIをバインディング)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, July 28, 2007 5:48 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://blogs.wankuma.com/chicasharp/archive/2007/07/28/87525.aspx">Chica's Blog</a>
                            
	                    </div>
	                    <p>LINQ to SQL (パート 5 - ASP:LinqDataSourceコントロールを使用してUIをバインディング)</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3308715">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, July 28, 2007 1:37 PM
                            by
                            <a title="Stefan Cruysberghs" rel="nofollow" href="http://www.scip.be/">Stefan Cruysberghs</a>
                            
	                    </div>
	                    <p>Great articles Scott ! I've installed Beta 2 and I'm trying to learn LINQ for SQL to use it in a new ASP.NET (Ajax) project. But I have 2 questions :</p>
<p>1) How to access a property of a sub-entity in the "Configure Where Expression" wizard ? e.g. I would like to set the CategoryName when querying the Products.</p>
<p>2) I have a database which uses integers for boolean values (-1=false, 1=true). So I would like to use Boolean properties in my Entity. How can I convert these values in the Get and Set method of my property ?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3320498">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Sunday, July 29, 2007 11:36 AM
                            by
                            <a title="Thomas H. Lanier" rel="nofollow" href="http://www.ces-web.com/">Thomas H. Lanier</a>
                            
	                    </div>
	                    <p>What's the trick to get the LinqDataSource to work with tables that contain a timestamp field?</p>
<p>I get the following error when I try to update a row in the GridView:</p>
<p>Exception Details: System.Data.Linq.ChangeConflictException: Row not found or changed</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3325851">#</a>
	                        <span>
	                            Digging into LinQDataSource
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Sunday, July 29, 2007 10:58 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://weblogs.asp.net/aaguiar/archive/2007/07/30/digging-into-linqdatasource.aspx">Andres Aguiar's Weblog</a>
                            
	                    </div>
	                    <p>The sample code that ScottGu showed for LinQDataSource made it look like it should be called LinQToSqlDataSource</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3334129">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, July 30, 2007 5:52 PM
                            by
                            <a title="Travis" rel="nofollow" href="http://www.heliosfx.com/">Travis</a>
                            
	                    </div>
	                    <p>Scott (or anyone) Can we use the LINQ to SQL designer with an external mapping file and external class files for the entities? &nbsp;Like the old Class Designer?</p>
<p>Also what is best practice for the DataContext class in an ASP.NET environment, should we store it in a HttpContext object or instantiate evertime we use it? &nbsp;Per user? &nbsp;One per application?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3334282">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, July 30, 2007 6:04 PM
                            by
                            <a title="Roger Jennings" rel="nofollow" href="http://oakleafblog.blogspot.com/">Roger Jennings</a>
                            
	                    </div>
	                    <p>Pingback from <a rel="nofollow" target="_new" href="http://oakleafblog.blogspot.com/2007/07/linq-changes-from-orcas-beta-1-to-vs.html">oakleafblog.blogspot.com/.../linq-changes-from-orcas-beta-1-to-vs.html</a> (LINQ Changes from Orcas Beta 1 to VS 2008 Beta 2)</p>
<p>--rj</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3334353">#</a>
	                        <span>
	                            What I am doing to become a better developer
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, July 30, 2007 6:08 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://blogs.microsoft.co.il/blogs/aviwortzel/archive/2007/07/31/What-I-am-doing-to-become-a-better-developer.aspx">Wortzel's blog</a>
                            
	                    </div>
	                    <p>Shani added me to his tagged list, so I'll try to answer this question. As an introduction to the answer</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3334775">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, July 30, 2007 6:57 PM
                            by
                            <a title="Roger Jennings" rel="nofollow" href="http://oakleafblog.blogspot.com/">Roger Jennings</a>
                            
	                    </div>
	                    <p>Here's an anthology of VS 2008 Beta 2's changes to LINQ and its domain-specific implementations, which includes a brief description and link to this post: <a rel="nofollow" target="_new" href="http://oakleafblog.blogspot.com/2007/07/linq-changes-from-orcas-beta-1-to-vs.html">oakleafblog.blogspot.com/.../linq-changes-from-orcas-beta-1-to-vs.html</a></p>
<p>--rj</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3339771">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 31, 2007 4:32 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Sorin,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Really nice series. I went through all of it, and I can't be more happy that this is really live. I'm currently downloading the Beta 2 to test myself. I'm curious if the changes recorded by the DataContext will be then sent to the database in the same order that they happen (not like DataSet/TableAdapters where they were sent one table after the other, from top to down in each table). I just HOPE that it records changes and applies them in the appropriate order!</p>
<p>Glad you enjoyed the series! &nbsp;In terms of how updates are sent back to the database, LINQ to SQL uses the PK/FK relationships to correctly send the updates in the appropriate order.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3339781">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 31, 2007 4:34 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Travis,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Scott (or anyone) Can we use the LINQ to SQL designer with an external mapping file and external class files for the entities? &nbsp;Like the old Class Designer?</p>
<p>Yes - you can have the mappings stored in an external mapping file, or have them encoded as attributes on the actual entity classes.</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Also what is best practice for the DataContext class in an ASP.NET environment, should we store it in a HttpContext object or instantiate evertime we use it? &nbsp;Per user? &nbsp;One per application?</p>
<p>In general I'd recommend instantiating it per use, or per request. &nbsp;You don't want to cache it per application, since changes are tracked - and you typically don't want to batch up multiple user's updates together.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3341809">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 31, 2007 10:21 AM
                            by
                            <a title="Travis" rel="nofollow" href="http://www.heliosfx.com/">Travis</a>
                            
	                    </div>
	                    <p>&gt;&gt;&gt;&gt;&gt;&gt;Yes - you can have the mappings stored in an external mapping file, or have them encoded as attributes on the actual entity classes.</p>
<p>Thanx for the Reply Scott, but can we use the *Designer* with an external mapping file? &nbsp;And class files? &nbsp;I can't seem to get it to work. It seems to lump all the classes and mappings inside the DataClasses1.designer.cs file.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3343215">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 31, 2007 3:22 PM
                            by
                            Todd
                            
	                    </div>
	                    <p>Is there a way to add unmapped properties to a mapped class? &nbsp;I've got a mapped class, Person, and am trying to add a property in an external partial class definition - but I get a 'Binding Error'. &nbsp;Is there perhaps an attribute I need to apply to the property?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3344101">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, July 31, 2007 6:02 PM
                            by
                            Eric Newton
                            
	                    </div>
	                    <p>Scott, can you please address Winston Fassett's comment?</p>
<p>BoundFields cannot work with object graphs. &nbsp;And now that object graphs will be coming from LinqDatasources, we're given unusable scenarios.</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3350411">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 01, 2007 1:53 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Travis,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Thanx for the Reply Scott, but can we use the *Designer* with an external mapping file? &nbsp;</p>
<p>I just checked with the LINQ to SQL team, and they said that the designer in the final shipping version of VS 2008 will not support external mapping files (instead you'd need to use the command-line SQLMetal.exe utility that ships with VS 2008 to-do this). &nbsp;They are, however, looking at enabling a separate download that enables this mapping support within the designer in the future though.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3350439">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 01, 2007 1:57 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Todd,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; Is there a way to add unmapped properties to a mapped class? &nbsp;I've got a mapped class, Person, and am trying to add a property in an external partial class definition - but I get a 'Binding Error'. &nbsp;Is there perhaps an attribute I need to apply to the property?</p>
<p>Any chance you could send me this scenario in email (scottgu@microsoft.com)? &nbsp;I can then loop you in with someone from the LINQ to SQL team to have them investigate why you might be getting this error.</p>
<p>Thanks!</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3350447">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 01, 2007 1:58 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Eric,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; BoundFields cannot work with object graphs. &nbsp;And now that object graphs will be coming from LinqDatasources, we're given unusable scenarios.</p>
<p>Unfortunately that is the case today (and I would like to see it supported in the future - although I don't know when). &nbsp;What you can do, though, is convert a GridView's column to be a TemplateColumn and then use the &lt;%# Eval("property.subproperty") %&gt; syntax to traverse the object graph.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3351961">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 01, 2007 3:27 AM
                            by
                            <a title="AJ.NET" rel="nofollow" href="http://ajdotnet.wordpress.com/">AJ.NET</a>
                            
	                    </div>
	                    <p>Scott,</p>
<p>great post (as always). One question though. (Since all other comments targeted at the data part, I would like to focus on the UI part, just for a change ;-)) </p>
<p>While I welcome the fact that business rules are enforced in the business layer (rather than UI) your proposed way of error handling (nothing new actually) does not nicely interface with the validator infrastructure. Not the part that does the validation of course, but the validator features used for displaying validation errors. </p>
<p>I take it that there is no change to ASP.NET in that respect, e.g. validators evaluated only server side (kind of 2-phase validation), validators acting on multiple fields, or validators to catch certain exceptions and present them like any other validator does (perhaps a validator that uses the OnValidate method of the data model). </p>
<p>The consequence is that the user has to pass two different validations, leading to 2 or more roundtrips (if done serverside): ASP.NET validators enforcing proper input (all at once) and business validation afterwards telling him that the proper input is still invalid (using an exception, i.e. the next rule is already waiting to fire). Also similar feedback (from the users' perspective) is presented differently (e.g. validation summary + label for exceptions).</p>
<p>This is not entirely satisfactory.</p>
<p>Regards,</p>
<p>Alexander</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3358958">#</a>
	                        <span>
	                            , possibly the perfect server control &amp;laquo; CodeRaptor
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 01, 2007 2:41 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://coderaptor.wordpress.com/2007/08/01/possibly-the-perfect-server-control/">, possibly the perfect server control « CodeRaptor</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;, possibly the perfect server control &amp;laquo; CodeRaptor</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3359736">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 01, 2007 4:37 PM
                            by
                            Todd
                            
	                    </div>
	                    <p>Scott,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; Any chance you could send me this scenario in email (scottgu@microsoft.com)? &nbsp;I can then loop you in with someone from the LINQ to SQL team to have them investigate why you might be getting this error.</p>
<p>In trying to distill the problem down to a simple scenario to send, I found the problem. &nbsp;The problem was not in trying to add a property through a separate partial class declaration, but trying to use that additional property in an orderby clause in a LINQ query. &nbsp;I realize that LINQ to SQL performs the sorting at the database level and so it makes sense to not be able to sort by an unmapped property.</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3359757">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 01, 2007 4:43 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Todd,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; In trying to distill the problem down to a simple scenario to send, I found the problem. &nbsp;The problem was not in trying to add a property through a separate partial class declaration, but trying to use that additional property in an orderby clause in a LINQ query. &nbsp;I realize that LINQ to SQL performs the sorting at the database level and so it makes sense to not be able to sort by an unmapped property.</p>
<p>Ahh - that makes sense. &nbsp;Note that one option you can use is to perform your initial query against the properties in database, and then call "ToList()" on the returned sequence. &nbsp;This will then materialize a local instance of the data. &nbsp;You could then do a second LINQ query against these results (which you can because LINQ can query any local IEnumerable sequence) and use your non-mapped property as part of that search.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3362542">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 01, 2007 8:31 PM
                            by
                            <a title="ramon.duraes" href="http://thespoke.net/blogs/ramonduraes/default.aspx">ramon.duraes</a>
                            
	                    </div>
	                    <p>Hi Scott</p>
<p>New Gridview + LinqDasource &nbsp;has option for insert data ?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3363380">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 01, 2007 10:09 PM
                            by
                            <a title="Stefan Olson" rel="nofollow" href="http://www.palacevirtualtours.com/">Stefan Olson</a>
                            
	                    </div>
	                    <p>Scott,</p>
<p>Thanks for your blog. &nbsp;Very helpful. &nbsp;I'm loving using Linq. &nbsp;Datasets drove me nuts!</p>
<p>I do have a problem though. I get this exception when calling DetailsView.InsertItem:</p>
<p>System.ArgumentException was unhandled by user code</p>
<p> &nbsp;Message="Object of type 'System.Int32' cannot be converted to type 'System.Int16'."</p>
<p>As you can see from the stack trace below, it's in the LinqDataSource. &nbsp;I've changed all smallints to ints in the DB *&amp;updated the DBML), but that didn't fix it. &nbsp;The odd thing is it worked fine yesterday....</p>
<p>Clearly it may be my problem, but how do I figure out what field it is?</p>
<p>...Stefan</p>
<p> &nbsp;StackTrace:</p>
<p> &nbsp; &nbsp; &nbsp; at System.ComponentModel.ReflectPropertyDescriptor.SetValue(Object component, Object value)</p>
<p> &nbsp; &nbsp; &nbsp; at System.Web.UI.WebControls.LinqDataSourceView.BuildDataObject(Type dataObjectType, IDictionary inputParameters)</p>
<p> &nbsp; &nbsp; &nbsp; at System.Web.UI.WebControls.LinqDataSourceView.BuildInsertDataObject(Object table, IDictionary values)</p>
<p> &nbsp; &nbsp; &nbsp; at System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert(IDictionary values)</p>
<p> &nbsp; &nbsp; &nbsp; at System.Web.UI.DataSourceView.Insert(IDictionary values, DataSourceViewOperationCallback callback)</p>
<p> &nbsp; &nbsp; &nbsp; at System.Web.UI.WebControls.DetailsView.HandleInsert(String commandArg, Boolean causesValidation)</p>
<p> &nbsp; &nbsp; &nbsp; at System.Web.UI.WebControls.DetailsView.InsertItem(Boolean causesValidation)</p>
<p> &nbsp; &nbsp; &nbsp; at controls_memberdetails.SaveDetails() in c:\websites\newhiremystuff\controls\memberdetails.ascx.cs:line 65</p>
<p> &nbsp; &nbsp; &nbsp; at member_favourites.Button1_Click(Object sender, EventArgs e) in c:\websites\newhiremystuff\member\favourites.aspx.cs:line 22</p>
<p> &nbsp; &nbsp; &nbsp; at System.Web.UI.WebControls.Button.OnClick(EventArgs e)</p>
<p> &nbsp; &nbsp; &nbsp; at System.Web.UI.WebControls.Button.RaisePostBackEvent(String eventArgument)</p>
<p> &nbsp; &nbsp; &nbsp; at System.Web.UI.WebControls.Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String eventArgument)</p>
<p> &nbsp; &nbsp; &nbsp; at System.Web.UI.Page.RaisePostBackEvent(IPostBackEventHandler sourceControl, String eventArgument)</p>
<p> &nbsp; &nbsp; &nbsp; at System.Web.UI.Page.RaisePostBackEvent(NameValueCollection postData)</p>
<p> &nbsp; &nbsp; &nbsp; at System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint)</p>
<p> &nbsp;InnerException: </p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3364799">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, August 02, 2007 12:25 AM
                            by
                            <a title="Stefan Olson" rel="nofollow" href="http://www.palacevirtualtours.com/">Stefan Olson</a>
                            
	                    </div>
	                    <p>Further to my previous cast issue, I was able to fix it if I changed all smallint to int and all smallmoney to int in my DB table (not really a fix :-)). &nbsp;If I have a smallmoney (AccountBalance) in my table, it fails when binding. Details below. If I change it back to int, all is well...</p>
<p>I'll try to figure what causes the previous issue tomorrow.</p>
<p>...Stefan</p>
<p>Exception Details: System.InvalidCastException: Specified cast is not valid.</p>
<p>Source Error: </p>
<p>An unhandled exception was generated during the execution of the current web request. Information regarding the origin and location of the exception can be identified using the exception stack trace below. &nbsp;</p>
<p>Stack Trace: </p>
<p>[InvalidCastException: Specified cast is not valid.]</p>
<p> &nbsp; System.Data.SqlClient.SqlBuffer.get_Int32() +980012</p>
<p> &nbsp; System.Data.SqlClient.SqlDataReader.GetInt32(Int32 i) +39</p>
<p> &nbsp; Read_DynamicClass1(ObjectMaterializer`1 ) +3557</p>
<p> &nbsp; System.Data.Linq.SqlClient.ObjectReader`2.MoveNext() +26</p>
<p> &nbsp; System.Collections.Generic.List`1..ctor(IEnumerable`1 collection) +441</p>
<p> &nbsp; System.Linq.Enumerable.ToList(IEnumerable`1 source) +54</p>
<p>[TargetInvocationException: Exception has been thrown by the target of an invocation.]</p>
<p> &nbsp; System.RuntimeMethodHandle._InvokeMethodFast(Object target, Object[] arguments, SignatureStruct&amp; sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner) +0</p>
<p> &nbsp; System.RuntimeMethodHandle.InvokeMethodFast(Object target, Object[] arguments, Signature sig, MethodAttributes methodAttributes, RuntimeTypeHandle typeOwner) +72</p>
<p> &nbsp; System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture, Boolean skipVisibilityChecks) +371</p>
<p> &nbsp; System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture) +29</p>
<p> &nbsp; System.Web.UI.WebControls.LinqDataSourceView.ToList(IQueryable query, Type dataObjectType) +121</p>
<p> &nbsp; System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelectQuery(LinqDataSourceSelectEventArgs selectEventArgs, Object selectResult, Object table, Boolean storeOriginalValues) +328</p>
<p> &nbsp; System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect(DataSourceSelectArguments arguments) +500</p>
<p> &nbsp; System.Web.UI.DataSourceView.Select(DataSourceSelectArguments arguments, DataSourceViewSelectCallback callback) +17</p>
<p> &nbsp; System.Web.UI.WebControls.DataBoundControl.PerformSelect() +149</p>
<p> &nbsp; System.Web.UI.WebControls.BaseDataBoundControl.DataBind() +70</p>
<p> &nbsp; System.Web.UI.WebControls.FormView.DataBind() +4</p>
<p> &nbsp; System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound() +82</p>
<p> &nbsp; System.Web.UI.WebControls.FormView.EnsureDataBound() +163</p>
<p> &nbsp; System.Web.UI.WebControls.CompositeDataBoundControl.CreateChildControls() +69</p>
<p> &nbsp; System.Web.UI.Control.EnsureChildControls() +87</p>
<p> &nbsp; System.Web.UI.Control.PreRenderRecursiveInternal() +50</p>
<p> &nbsp; System.Web.UI.Control.PreRenderRecursiveInternal() +170</p>
<p> &nbsp; System.Web.UI.Control.PreRenderRecursiveInternal() +170</p>
<p> &nbsp; System.Web.UI.Control.PreRenderRecursiveInternal() +170</p>
<p> &nbsp; System.Web.UI.Control.PreRenderRecursiveInternal() +170</p>
<p> &nbsp; System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint) +2041</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3364944">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, August 02, 2007 12:47 AM
                            by
                            Troy Hunt
                            
	                    </div>
	                    <p>Hi Scott, in terms of utilising the "where" clause in the LinqDataSource, how do you handle type mismatches between string and guid? For example, I have a "where" clause that takes a selected value from a drop down list (which I assume is treated as a string although is a guid in the DB) and uses it as a control parameter to filter a selection from my LINQ class. This results in an error like this: "Operator '==' incompatible with operand types 'Guid' and 'String'".</p>
<p>Obviously doesn't handle any implicit conversions between the two. Any other suggestions in terms of a "no code" approach to this?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3374745">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, August 02, 2007 7:03 PM
                            by
                            Phil
                            
	                    </div>
	                    <p>Is it, or will it be, possible to do declarative databinding with the LinqDataSource to a Stored Procedure, as well as a Table? &nbsp;I'm working with Beta 2 now that it has dropped, so this is my first attempt at Linq. &nbsp;All I'm seeing is the ability to bind to a Table.</p>
<p>Thanks!</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3378713">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, August 03, 2007 2:46 AM
                            by
                            Dion
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>I will be developing a web application using Beta 2 version and am currently researhing and reading as much as possible to get me started on the new stuff.</p>
<p>I seen quite a few examples on selecting and bing in ASP.NEt using linq to SQL.</p>
<p>I like the tutorial on this page.</p>
<p>I would like to have the source code. Could you please send me the code on startatrix@hotmail.com or point me to a download link.</p>
<p>Thanks</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3379654">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, August 03, 2007 4:09 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi ramon.duraes,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; New Gridview + LinqDasource &nbsp;has option for insert data ?</p>
<p>The GridView doesnt' support insert directly - although you can use a detailsview control with it to enable this.</p>
<p>The new Listview control does also support defining an insert template.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3379705">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, August 03, 2007 4:16 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Stefan,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; Further to my previous cast issue, I was able to fix it if I changed all smallint to int and all smallmoney to int in my DB table (not really a fix :-)). &nbsp;If I have a smallmoney (AccountBalance) in my table, it fails when binding. Details below. If I change it back to int, all is well...</p>
<p>Would you be able to send me an email (scottgu@microsoft.com) with details of this? &nbsp;I can then loop you in with the developer who owns the LINQDataSource control and we can figure out how to get this working.</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3379710">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, August 03, 2007 4:16 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Phil,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; Is it, or will it be, possible to do declarative databinding with the LinqDataSource to a Stored Procedure, as well as a Table? &nbsp;I'm working with Beta 2 now that it has dropped, so this is my first attempt at Linq. &nbsp;All I'm seeing is the ability to bind to a Table.</p>
<p>Right now you'll only be able to-do purely declarative binding to Tables. &nbsp;What you can do, though, is handle the selecting event and use it to call any method on the DataContext that you want.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3384228">#</a>
	                        <span>
	                            LinqDataSource And How You Can *Maximize* Roundtrips to Your Database
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, August 03, 2007 1:04 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://codebetter.com/blogs/david.hayden/archive/2007/08/03/linqdatasource-and-how-you-can-maximize-roundtrips-to-your-database.aspx">David Hayden [MVP C#]</a>
                            
	                    </div>
	                    <p>I was reading Scott Guthrie&amp;#39;s excellent series of posts on LINQ when I came to the following post</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3391270">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, August 04, 2007 3:52 AM
                            by
                            <a title="chen" rel="nofollow" href="http://chen/">chen</a>
                            
	                    </div>
	                    <p>I get the following error when I try to update a row in the GridView:</p>
<p>Exception Details: System.Data.Linq.ChangeConflictException: Row not found or changed</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3402045">#</a>
	                        <span>
	                            LinqDataSource and ListView - a Dream Team - Andreas Kraus: C#, ASP.NET, Silverlight
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Sunday, August 05, 2007 1:41 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://www.andreas-kraus.net/blog/linqdatasource-and-listview-a-dream-team/">LinqDataSource and ListView - a Dream Team - Andreas Kraus: C#, ASP.NET, Silverlight</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;LinqDataSource and ListView - a Dream Team - Andreas Kraus: C#, ASP.NET, Silverlight</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3404702">#</a>
	                        <span>
	                            &amp;raquo; LinqDataSource and ListView - a Dream Team - Andreas Kraus: C# &amp;#8230;
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Sunday, August 05, 2007 5:46 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://testsubdomain.netmoviehost.com/linqdatasource-and-listview-a-dream-team-andreas-kraus-c/">» LinqDataSource and ListView - a Dream Team - Andreas Kraus: C# …</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;&amp;raquo; LinqDataSource and ListView - a Dream Team - Andreas Kraus: C# &amp;#8230;</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3408966">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, August 06, 2007 1:38 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Chen,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; I get the following error when I try to update a row in the GridView: &nbsp;Exception Details: System.Data.Linq.ChangeConflictException: Row not found or changed</p>
<p>This could occur because the underlying row in the database was updated between the origional value being retrieved by the GridView and the actual update being applied. &nbsp;LINQ to SQL by default automatically enables this "optimistic concurrency" check for you to ensure that you don't accidentally overwrite other changes without realizing it.</p>
<p>In a future LINQ to SQL blog post I'll talk about techniques you can use to handle these cases and prompt the user as to whether they really want to apply their changes.</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3414453">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, August 06, 2007 11:27 AM
                            by
                            <a title="Shloma Baum" rel="nofollow" href="http://www.pioneerinteractive.com/">Shloma Baum</a>
                            
	                    </div>
	                    <p>Scott,</p>
<p>How does Link to SQL fit in a 3-tier environment? since what you expose is most probably a method to retrieve a Product class, so obviously you will not be able to get to the Categories class as it dosn't have access to the DataContext? or maybe I'm missing something simple? so how will the LinkDataSource know how to apply paging etc., so basically we fall back again to use a client/server approach.</p>
<p>This does not only apply to this excellent post but rather an overall question on Link in regards to remoting.</p>
<p>Regards,</p>
<p>Shloma</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3421993">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, August 07, 2007 1:35 AM
                            by
                            Mike
                            
	                    </div>
	                    <p>Scott,</p>
<p>Is it possible to perform a sub-query using the LinqDataSource? &nbsp;For example, say I want to select a list of Customers as well as the customer's last order date from the Orders table. &nbsp;Is this possible create this query with the LinqDataSource designer alone?</p>
<p>Thank you,</p>
<p>Mike</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3426037">#</a>
	                        <span>
	                            ASP.NET 3.5 controls
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, August 07, 2007 10:34 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://www.danielmoth.com/Blog/2007/08/aspnet-35-controls.html">Daniel Moth</a>
                            
	                    </div>
	                    <p>ASP.NET 3.5 controls</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3428784">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, August 07, 2007 5:26 PM
                            by
                            <a title="Arnaud Weil" rel="nofollow" href="http://dreamdotnet.blogspot.com/">Arnaud Weil</a>
                            
	                    </div>
	                    <p>Excellent article Scott. And excellent control. I simply love when things are that easy. It reminds me of ObjectDataSource and typed DataSet, except that here we have a cleanlier model than TableAdapters.</p>
<p>Now, I'm eager to seeing the same exact simplicity in WPF...</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3432127">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 08, 2007 1:05 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Mike,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt; Is it possible to perform a sub-query using the LinqDataSource? &nbsp;For example, say I want to select a list of Customers as well as the customer's last order date from the Orders table. &nbsp;Is this possible create this query with the LinqDataSource designer alone?</p>
<p>To perform a custom sub-query, you'll want to handle the LinqDataSource's Selecting event. &nbsp;I'll show how to do this in an upcoming blog post. :-)</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3436647">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 08, 2007 8:49 AM
                            by
                            Greg McCarty
                            
	                    </div>
	                    <p>Beta2 doesn't seem to have the LinqDataSource control in any toolbox? &nbsp;What am I missing?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3436692">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 08, 2007 9:02 AM
                            by
                            Greg McCarty
                            
	                    </div>
	                    <p>Also, the GridView smart tasks in Beta2 don't have the edit or delete options...</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3436694">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 08, 2007 9:04 AM
                            by
                            Greg McCarty
                            
	                    </div>
	                    <p>Oops. &nbsp;Never mind about the editing and deleting option missing. &nbsp;I had to build once before they showed up...</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3437259">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 08, 2007 10:49 AM
                            by
                            Greg McCarty
                            
	                    </div>
	                    <p>Orcas Beta2 - The EditItemTemplate example doesn't work for me. &nbsp;The SelectedValue attribute is not available. &nbsp;A change followed by an update does not change teh underlying value.</p>
<p>Any thoughts?</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3437274">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 08, 2007 10:52 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Greg,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; Oops. Never mind about the editing and deleting option missing. I had to build once before they showed up... </p>
<p>Cool - just to confirm, you have the LinqDataSource and GridView working ok now?</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3439169">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 08, 2007 2:40 PM
                            by
                            Greg McCarty
                            
	                    </div>
	                    <p>&gt;&gt;&gt; Cool - just to confirm, you have the LinqDataSource and GridView working ok now?</p>
<p>Sort of. &nbsp;The example about changing the Supplier and Category seems to be off. &nbsp;The asp:DropDownList doesn't support the 'SelectedValue' attribute. So I don't know how to update those fields (or, more importantly, that style of data indirection).</p>
<p>Any thoughts?</p>
<p>GregM</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3446643">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, August 09, 2007 8:12 AM
                            by
                            <a title="daCodez" href="http://weblogs.asp.net/user/Profile.aspx?UserID=4659">daCodez</a>
                            
	                    </div>
	                    <p>I'm wondering if we'll be able to do things like query excel files with linq.</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3446919">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, August 09, 2007 9:13 AM
                            by
                            manu
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>linq 2 sql is great!</p>
<p>I started with some example, so I created a business layer that uses Linq2SQL. </p>
<p>In this scenario I'm using an ObjectDataSource instead of a LinqDataSource.</p>
<p>I think that in a layered application - with a BLL - Linq2SQL is not usefull!</p>
<p>Is it true?</p>
<p>Thanks</p>
<p>Manu</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3447356">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, August 09, 2007 10:22 AM
                            by
                            Max
                            
	                    </div>
	                    <p>I have a very simple database, no timestamp fields, I am the only user updating the database.</p>
<p>I have a LinqDataSource bound to a GridView and when I goto edit a row I get the following error:</p>
<p>Row not found or changed. </p>
<p>Description: An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code. </p>
<p>Exception Details: System.Data.Linq.ChangeConflictException: Row not found or changed.</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3448319">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, August 09, 2007 1:48 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Manu,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; I started with some example, so I created a business layer that uses Linq2SQL. &nbsp;In this scenario I'm using an ObjectDataSource instead of a LinqDataSource. &nbsp;I think that in a layered application - with a BLL - Linq2SQL is not usefull!</p>
<p>I think you'll actually find LINQ to SQL extremely useful with ObjectDataSource scenarios. &nbsp;In these cases you can use LINQ to SQL as your DAL layer.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3448325">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, August 09, 2007 1:49 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Greg,</p>
<p>&gt;&gt;&gt;&gt;&gt; Sort of. &nbsp;The example about changing the Supplier and Category seems to be off. &nbsp;The asp:DropDownList doesn't support the 'SelectedValue' attribute. So I don't know how to update those fields (or, more importantly, that style of data indirection).</p>
<p>The intellisense for the &lt;asp:dropdownlist&gt; doesn't shows the SelectedValue property, but it is there on the control. :-) &nbsp;If you still have problems send me an email with your code-snippet and I can help get it working.</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3448333">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, August 09, 2007 1:50 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Max,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; I have a LinqDataSource bound to a GridView and when I goto edit a row I get the following error:</p>
<p>Do you have the DataKeyNames attribute set on the GridView? &nbsp;It could be that this is empty - in which case the primary key loopup index isn't being saved. &nbsp;</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3460946">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, August 10, 2007 5:43 PM
                            by
                            Connie Phan
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>I'm having issue with the dbml file. After I defined the data model, then close the file, when I open it again, it's now an XML file instead of the graphic interface with the tables. Am I doing something wrong or is this a bug? Thanks!!</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3465809">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, August 11, 2007 5:08 AM
                            by
                            Howard
                            
	                    </div>
	                    <p>I have been monitoring LINQ to SQL since last year when it was DLINQ and now it's in Beta2 I've been experimenting with it. I had high hopes I could drop my own data access layer and use LINQ to SQL.</p>
<p>Sadly LINQ to SQL does not make the grade.</p>
<p>The first major issue is that the designer and DBML file do not support refresh of the tables/columns/views. How on earth can you launch this product without this feature??? My current DB has 120 tables and about 40 views. Am I supposed to keep deleting and re-adding objects when I change them?</p>
<p>Second, there isn't enough extensibility in the LINQ to SQL classes to enable any meaningful app-level security to be built into it. My datalayer does this so queries automatically get filters added to any table access, meaning the data layer enforces security, not the end user app.</p>
<p>But discussing with others on MSDN forums it does not seem that there is any way of doing this - the DataContext does not have a hooks to adjust how tables/views are accessed and there is no way to override this.</p>
<p>I realise LINQ to SQL is a big step forward and for someone who is happy to implement security in the app/ui code (or has no security need) then it's really good. Shame it didn't quite make that last hurdle..</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3489439">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, August 13, 2007 1:28 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Howard,</p>
<p>&gt;&gt;&gt;&gt;&gt; The first major issue is that the designer and DBML file do not support refresh of the tables/columns/views. How on earth can you launch this product without this feature??? My current DB has 120 tables and about 40 views. Am I supposed to keep deleting and re-adding objects when I change them?</p>
<p>You can delete and re-add individual tables using the designer. &nbsp;Alternatively, you can use the command-line sqlmetal.exe utility which can recreate the objects automatically.</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; Second, there isn't enough extensibility in the LINQ to SQL classes to enable any meaningful app-level security to be built into it. My datalayer does this so queries automatically get filters added to any table access, meaning the data layer enforces security, not the end user app.</p>
<p>There are actually Load() methods that you can override on the DataContext class that provides interception points when you query data. &nbsp;Alternatively, you might want to create a class that encapsulates the DataContext and through which your UI and other business logic retrieves data. &nbsp;You could then add your security filtering logic in these methods.</p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3489450">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, August 13, 2007 1:30 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Connie,</p>
<p>&gt;&gt;&gt;&gt;&gt; I'm having issue with the dbml file. After I defined the data model, then close the file, when I open it again, it's now an XML file instead of the graphic interface with the tables. Am I doing something wrong or is this a bug? Thanks!!</p>
<p>That is pretty odd - did you change the file-type at all?</p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3563397">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, August 20, 2007 3:27 AM
                            by
                            shashank sinha
                            
	                    </div>
	                    <p>hi i m trying to create views for the tables and then work with them but i m unable to achieve any successful result.</p>
<p>Can u guide me through to some blogs or articles where in i can get some help</p>
<p>Thanks and regards,</p>
<p>shashank sinha</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3565787">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, August 20, 2007 11:11 AM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Shashank,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt;&gt;Can u guide me through to some blogs or articles where in i can get some help</p>
<p>Here is the LINQ online forum where people should be able to help with any LINQ related questions: <a rel="nofollow" target="_new" href="http://forums.microsoft.com/MSDN/ShowForum.aspx?ForumID=123&SiteID=1">forums.microsoft.com/.../ShowForum.aspx</a></p>
<p>Thanks,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3599612">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, August 23, 2007 5:53 PM
                            by
                            Wesley Raven
                            
	                    </div>
	                    <p>Hi Scott,</p>
<p>Thank you very much for your incredibly useful posts, and your obvious hard work on answering all of these questions. Your time is greatly appreciated by all Im sure.</p>
<p>I have run into a snag with the LinqDataSource I hope someone can assist me with; When the source of one of my where clause parameters is a control and my datatype is an integer I get this error:</p>
<p>"Operator '==' incompatible with operand types 'Int32' and 'Object'"</p>
<p>I have tried binding to different types of controls like a HiddenField, or a Label, and all result in the same error. I have tried manually selecting the datatype of the parameter as an Int32 without any luck. The only way I can bind to an integer type is if the source for the where parameter is in the querystring, or the session; not a control.</p>
<p>I am currently working around this by using the Selecting event on the LinqDataSource, and then doing my simple query (for example, to get a single user, "e.result = From t in DC Where t.UserID = Convert.ToInt32(UserIDLabel.Text)".</p>
<p>Can anyone tell me where I'm going wrong when I try to assign the source of the where parameter directly to a control? Do I have to do some manual datatype conversion somewhere? Thanks!</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3641610">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, August 28, 2007 1:42 AM
                            by
                            Kevin
                            
	                    </div>
	                    <p>This is so crazy-cool it's actually making me vaguely ill with happiness. That's a weird feeling.</p>
<p>Thanks very very much for making things this straight forward and easy to grasp, I think you may have just singlehandedly made my job (and by extension, my life) much easier. :)</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3657196">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, August 29, 2007 1:08 PM
                            by
                            Mark Henke
                            
	                    </div>
	                    <p>Why can one not drag a stored proc onto the ORM and have it perhaps (optionally) create the Object based on the output of that sp as well as creating the method that returns an anonymous type?</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3663961">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, August 30, 2007 3:23 AM
                            by
                            <a title="YellowWee" rel="nofollow" href="http://yellowwee.cnblogs.com/">YellowWee</a>
                            
	                    </div>
	                    <p>hi,I'm tring to set "DropDownList" in the "EditItemTemplate",and In VS2008 Beta2's "Properties window",I can't find the "SelectedValue" and "SelectedIndex" properties,also can't find with "intellisense".</p>
<p>this confused me,whether or not .net 3.5 don't have this properties.Not bad I found it in MSDN Library later.</p>
<p>may be it's litter bug in vs2008 beta2,hope it help you to perfect VS2008.</p>

        	            
	                </div>
	            
	                <div class="commentowner">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3796077">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, September 08, 2007 12:52 PM
                            by
                            <a title="ScottGu" href="http://weblogs.asp.net/user/Profile.aspx?UserID=2530">ScottGu</a>
                            
	                    </div>
	                    <p>Hi Mark,</p>
<p>&gt;&gt;&gt;&gt;&gt;&gt; Why can one not drag a stored proc onto the ORM and have it perhaps (optionally) create the Object based on the output of that sp as well as creating the method that returns an anonymous type?</p>
<p>This is actually what the designer does by default. &nbsp;I discuss this more in my blog post on SPROCs here: <a rel="nofollow" target="_new" href="http://weblogs.asp.net/scottgu/archive/2007/08/16/linq-to-sql-part-6-retrieving-data-using-stored-procedures.aspx">weblogs.asp.net/.../linq-to-sql-part-6-retrieving-data-using-stored-procedures.aspx</a></p>
<p>Hope this helps,</p>
<p>Scott</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3847840">#</a>
	                        <span>
	                            re: LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, September 13, 2007 5:07 AM
                            by
                            <a title="johnzered" href="http://weblogs.asp.net/user/Profile.aspx?UserID=5286">johnzered</a>
                            
	                    </div>
	                    <p>Hi!</p>
<p>You are writing great articles!</p>
<p>I have one problem with defining my ORM, I need to connect to two databases. That's ok in my development enviroment when i set the data source on the classes in another database the problem appears in production when our customers may have another connectionstring and then ORM won't automaticallay find my database.</p>
<p>Example:</p>
<p>On my classes from the second databases I change the datasource property to databasename.dbo.tablename</p>
<p>This works great but then if I try my application in production the second database might be something else eg anotherdbname.dbo.tablename. Then when I run the application I get an error that it can't find databasename.dbo.tablename.</p>
<p>I hope you understand my problem. Do you know a way to solve this by defining it in web.config or somewhere else?</p>
<p>//johnzered</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#3961137">#</a>
	                        <span>
	                            Using the LinqDataSource: A practical look
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, September 18, 2007 11:30 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://weblogs.asp.net/toddanglin/archive/2007/09/18/using-the-linqdatasource-a-practical-look.aspx">Todd Anglin's Code Campground</a>
                            
	                    </div>
	                    <p>One of the new controls coming in the .NET 3.5/Visual Studio 2008 releases later this year is the LinqDataSource</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#4525125">#</a>
	                        <span>
	                            campground &amp;raquo; Using the LinqDataSource: A practical look
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, October 11, 2007 5:33 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://campground.wpbloggers.com/?p=73">campground » Using the LinqDataSource: A practical look</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;campground &amp;raquo; Using the LinqDataSource: A practical look</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#5425308">#</a>
	                        <span>
	                            Linq to SQL ed il binding usando il controllo LinqDataSource
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Sunday, December 09, 2007 7:00 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://michelelocuratolo.com/archive/2007/12/09/linq-to-sql-ed-il-binding-usando-il-controllo-linqdatasource.aspx">{ The Smoking Code }</a>
                            
	                    </div>
	                    <p>Linq to SQL ed il binding usando il controllo LinqDataSource</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#5425421">#</a>
	                        <span>
	                            Linq to SQL ed il binding usando il controllo LinqDataSource
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Sunday, December 09, 2007 7:43 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://ugimobile.org/blogs/mighell/archive/2007/12/09/linq-to-sql-ed-il-binding-usando-il-controllo-linqdatasource.aspx">Mighell's Mobile Blog</a>
                            
	                    </div>
	                    <p>In questi giorni, stò implementando una applicazione non eccessivamente complessa in ASP.Net e, dato</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#5463545">#</a>
	                        <span>
	                            LinQ操作汇总（From CSharpSamples）
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, December 17, 2007 12:50 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://www.cnblogs.com/edobnet/archive/2007/12/17/1002971.html">edobnet</a>
                            
	                    </div>
	                    <p>基本方法可以查看这里<a rel="nofollow" target="_new" href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-">weblogs.asp.net/.../linq-to-sql-part-5-binding-ui-using-the-</a>...</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#5661859">#</a>
	                        <span>
	                            Overloaded again
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Sunday, January 27, 2008 7:05 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://weblogs.asp.net/psperanza/archive/2008/01/27/overloaded-again.aspx">Paul Speranza's .Net Life</a>
                            
	                    </div>
	                    <p>I have just read Keith Harvey's post Slow Down Microsoft, I Can't Take It! about the pace the development</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#5684720">#</a>
	                        <span>
	                            LinqDataSource exceptions
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, January 31, 2008 9:05 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://weblogs.asp.net/rajbk/archive/2008/01/31/linqdatasource-exceptions.aspx">Raj Kaimal </a>
                            
	                    </div>
	                    <p>Prerequisite: LinqDataSource &amp;amp; SqlDataSource Master/Details When working with the LinqDataSource</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#5725385">#</a>
	                        <span>
	                            ASP.NET ListView control and LinqDataSource - Display data without a line of code
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, February 06, 2008 6:07 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://msforge.net/blogs/janko/archive/2008/02/06/asp-net-listview-control-and-linqdatasource-display-data-without-a-line-of-code.aspx">Janko`s Blog</a>
                            
	                    </div>
	                    <p>The new ASP.NET ListView control is a powerfull control that encapsulates the best features from ASP</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#5877919">#</a>
	                        <span>
	                            Detailed Look: Key components in LINQ to SQL and their Key Roles
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Thursday, February 28, 2008 9:26 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://userfriendlythinking.com/blogs/corey_gaudin/archive/2008/02/26/detailed-look-key-components-in-linq-to-sql-and-their-key-roles.aspx">Corey Gaudin</a>
                            
	                    </div>
	                    <p>As part of this blog, I plan to have an on-going set of articles that takes a detailed look into some</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#5885988">#</a>
	                        <span>
	                            Jon Kruger&amp;#8217;s Blog   &amp;raquo; LINQ to SQL talk stuff
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, February 29, 2008 7:03 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://jonkruger.com/blog/2008/02/29/linq-to-sql-talk-stuff/">Jon Kruger’s Blog   » LINQ to SQL talk stuff</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;Jon Kruger&amp;#8217;s Blog &nbsp; &amp;raquo; LINQ to SQL talk stuff</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#5938026">#</a>
	                        <span>
	                            madhavrao&amp;#8230;
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, March 08, 2008 2:27 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://madhavrao.com/2008/03/08/linq-language-integrated-query/">madhavrao…</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;madhavrao&amp;#8230;</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#5938715">#</a>
	                        <span>
	                            Lets dig in to some more detail on LinqDataSource Control. &amp;laquo; Rangatharan&amp;#8217;s Weblog
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, March 08, 2008 8:12 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://rangatharan.wordpress.com/2008/03/08/lets-dig-in-to-some-more-detail-on-linqdatasource-control/">Lets dig in to some more detail on LinqDataSource Control. « Rangatharan’s Weblog</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;Lets dig in to some more detail on LinqDataSource Control. &amp;laquo; Rangatharan&amp;#8217;s Weblog</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#6013681">#</a>
	                        <span>
	                            转:LinQ操作汇总（From CSharpSamples）
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Sunday, March 23, 2008 1:46 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://www.cnblogs.com/winner/archive/2008/03/23/1118451.html">Winner.Net(2007)</a>
                            
	                    </div>
	                    <p>LinQ操作汇总（FromCSharpSamples）</p>
<p>基本方法可以查看这里<a rel="nofollow" target="_new" href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-s">weblogs.asp.net/.../linq-to-s</a>...</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#6120528">#</a>
	                        <span>
	                            LINQ here, LINQ there, LINQ everywhere | two geeks&amp;#8230;
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, April 21, 2008 11:47 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://twogeeks.mindchronicles.com/?p=6">LINQ here, LINQ there, LINQ everywhere | two geeks…</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;LINQ here, LINQ there, LINQ everywhere | two geeks&amp;#8230;</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#6190157">#</a>
	                        <span>
	                            ruSpiegel.net - ?????????????? ?????????????? ??????????????  &amp;raquo; ?????????? ??????????   &amp;raquo; ?????????????????????????? LINQ to SQL (?????????? 9 - ?????????????????????????? ???????????????????????????????? LINQ ?????????????????? ?? ????
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, May 14, 2008 7:41 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://ruspiegel.net/?p=443">ruSpiegel.net - ?????????????? ?????????????? ??????????????  » ?????????? ??????????   » ?????????????????????????? LINQ to SQL (?????????? 9 - ?????????????????????????? ???????????????????????????????? LINQ ?????????????????? ?? ???????????????? ???????????????????? )</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;ruSpiegel.net - ?????????????? ?????????????? ?????????????? &nbsp;&amp;raquo; ?????????? ?????????? &nbsp; &amp;raquo; ?????????????????????????? LINQ to SQL (?????????? 9 - ?????????????????????????? ???????????????????????????????? LINQ ?????????????????? ?? ???????????????? ???????????????????? )</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#6366022">#</a>
	                        <span>
	                            ???????????????  &amp;raquo; Blog Archive   &amp;raquo; LINQ to SQL??????Part 5 - Binding UI using the ASP:LinqDataSource Control
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Sunday, July 06, 2008 5:14 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://www.jinlei.name/?p=117">???????????????  » Blog Archive   » LINQ to SQL??????Part 5 - Binding UI using the ASP:LinqDataSource Control</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;??????????????? &nbsp;&amp;raquo; Blog Archive &nbsp; &amp;raquo; LINQ to SQL??????Part 5 - Binding UI using the ASP:LinqDataSource Control</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#6382176">#</a>
	                        <span>
	                            entitydatasource toolbox
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, July 09, 2008 10:38 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://donovan.bestvidsdigest.info/entitydatasourcetoolbox.html">entitydatasource toolbox</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;entitydatasource toolbox</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#6508990">#</a>
	                        <span>
	                            GridView with paging and sorting and LINQ &amp;laquo; Peter&amp;#8217;s log
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Tuesday, August 12, 2008 12:32 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://psinke.wordpress.com/2008/08/12/gridview-with-paging-and-sorting-and-linq/">GridView with paging and sorting and LINQ « Peter’s log</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;GridView with paging and sorting and LINQ &amp;laquo; Peter&amp;#8217;s log</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#6656808">#</a>
	                        <span>
	                            Composants pour le binding avec Linq et avec Entity
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, October 03, 2008 4:22 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://smashmp.free.fr/storm/central/?p=145">Composants pour le binding avec Linq et avec Entity</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;Composants pour le binding avec Linq et avec Entity</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#6659728">#</a>
	                        <span>
	                            How to handle type exception in LINQ Validation rule
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Monday, October 06, 2008 5:38 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://linqinaction.net/blogs/roller/archive/2008/10/06/how-to-handle-type-exception-in-linq-validation-rule.aspx">LINQ in Action roller</a>
                            
	                    </div>
	                    <p>Hi I'm trying to re-write Scott's code from VB to C# for his LINQ validation rule. Basically, I have</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#6806391">#</a>
	                        <span>
	                            Baby name meaning and origin for Briscoe
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, December 24, 2008 8:44 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://www.baby-parenting.com/baby/babyname/Briscoe/14298">Baby name meaning and origin for Briscoe</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;Baby name meaning and origin for Briscoe</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#6837875">#</a>
	                        <span>
	                            Adventures with LINQ to SQL
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Friday, January 16, 2009 12:39 AM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://jazsolutions.net/cs/blogs/random/archive/2009/01/16/adventures-with-linq-to-sql.aspx">Ahmed's Random Expressions</a>
                            
	                    </div>
	                    <p>A while back I got the opportunity to use LINQ to SQL (L2S) for an internal web application. What is</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#6916447">#</a>
	                        <span>
	                            6. LINQ to SQL (Part 6 - Retrieving Data Using Stored Procedures) 
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Wednesday, February 18, 2009 8:55 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://community.icburner.com/blogs/sample_weblog/archive/2009/02/19/6-linq-to-sql-part-6-retrieving-data-using-stored-procedures.aspx">Sample Weblog</a>
                            
	                    </div>
	                    <p>Over the last few weeks I&amp;#39;ve been writing a series of blog posts that cover LINQ to SQL. LINQ to</p>

        	            
	                </div>
	            
	                <div class="comment">
	                    <h4>
	                        <a href="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx#7226852">#</a>
	                        <span>
	                            LINQ to SQL (Part 9 &amp;#8211; Using a Custom LINQ Expression with the  control) &amp;nbsp;|&amp;nbsp;Vietnam Developer Club
	                        </span>
	                    </h4>
	                    <div class="commentssubhead">
	                        
                                            
                            Saturday, October 10, 2009 12:48 PM
                            by
                            <a title="TrackBack" rel="nofollow" href="http://www.vndeveloper.com/vn/index.php/2009/10/10/linq-to-sql-part-9-using-a-custom-linq-expression-with-the-control/">LINQ to SQL (Part 9 – Using a Custom LINQ Expression with the  control) &nbsp;|&nbsp;Vietnam Developer Club</a>
                            
	                    </div>
	                    <p>Pingback from &nbsp;LINQ to SQL (Part 9 &amp;#8211; Using a Custom LINQ Expression with the &nbsp;control) &amp;nbsp;|&amp;nbsp;Vietnam Developer Club</p>

        	            
	                </div>
	            
                    </div>
                
            
            
            
                
        
        
                </div></div>

            </div>
            <div id="contentfooter">
                
				    <div> <span><a href="http://www.microsoft.com/info/cpyright.mspx">Terms of Use</a></span></div>
					
				
            </div>       
        </div>
    </div>
    <script type="text/javascript" src="./LINQ to SQL (Part 5 - Binding UI using the ASP LinqDataSource Control) - ScottGu's Blog_files/omniture_all.js"></script>
            <noscript>&lt;a href="http://www.omniture.com" title="Web Analytics"&gt;&lt;img
                src="http://msstonojsaspnet.112.2O7.net/b/ss/msstonojsaspnet/1/H.20.2--NS/0"
                height="1" width="1" border="0" alt="" /&gt;&lt;/a&gt;</noscript>
    

<!--
<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
<rdf:Description
rdf:about="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx"
dc:identifier="http://weblogs.asp.net/scottgu/archive/2007/07/16/linq-to-sql-part-5-binding-ui-using-the-asp-linqdatasource-control.aspx"
dc:title="LINQ to SQL (Part 5 - Binding UI using the ASP:LinqDataSource Control)"
trackback:ping="http://weblogs.asp.net/scottgu/trackback.ashx?PostID=3182426" />
</rdf:RDF>
-->
<script type="text/javascript">
// <![CDATA[
Telligent_Modal.Configure('/utility/loading.htm',['Modal'],['ModalTitle'],['ModalClose'],['ModalContent'],['ModalFooter'],['ModalResize'],['ModalMask'],100);
// ]]>
</script><script type="text/javascript">
// <![CDATA[
var ctl00_Main_WeblogPostRating1=new PostRating('ctl00_Main_WeblogPostRating1','ctl00_Main_WeblogPostRating1','ctl00_Main_WeblogPostRating1_Value', 5, 'http://i1.asp.net/wan/default/images/common/', false, 'CommonRateControl','CommonRateControlActive','CommonRateControlReadOnly',['Terrible','Poor','Fair','Average','Good','Excellent'],true,true);
// ]]>
</script>
<script type="text/javascript">
//<![CDATA[

WebForm_InitCallback();//]]>
</script>
<script type="text/javascript">
            // <![CDATA[
            var ctl00_Main_WeblogPostRating1_ajax={"SaveRating":function(rating,successFunction,failureFunction){WebForm_DoCallback('ctl00$Main$WeblogPostRating1',rating,successFunction,rating,failureFunction,false)}};
            // ]]>
            </script><script type="text/javascript">
// <![CDATA[
window.ctl00_Main_ctl06_ctl01 = new Telligent_InlineEditorPanel('ctl00_Main_ctl06_ctl01','ctl00_Main_ctl06_ctl01','ctl00_Main_ctl06_ctl01_State','ctl00_Main_ctl06_ctl00',false,null,null,null);
// ]]>
</script></form>


</body></html>