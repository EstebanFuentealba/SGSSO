<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0036)http://devzone.zend.com/article/3336 -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US" dir="ltr"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Reading and Writing Spreadsheets with PHP</title>


<meta name="Rating" content="General">
<meta name="Distribution" content="Global">
<meta name="Revisit-After" content="3 Days">
<meta name="Copyright" content="1999-2006 Zend Technologies Ltd.">
<meta name="WT.cg_n" content="_Zend DevZone">
<meta name="WT.seg_1" content="Community"> 
<meta name="keywords" content="php, best practices, samples, articles, news, community, knowledge, PEAR, Tutorials">

<link rel="search" type="application/opensearchdescription+xml" href="http://devzone.zend.com/opensearch.xml" title="Zend DevZone">

<link rel="alternate" title="Zend Developer Zone - Home Page RSS Feed" href="http://feeds.feedburner.com/ZendDeveloperZone" type="application/rss+xml">  

<link rel="shortcut icon" href="http://devzone.zend.com/favicon.ico">
<link rel="stylesheet" type="text/css" href="./Reading and Writing Spreadsheets with PHP_files/screen.css" media="all">
<link rel="stylesheet" type="text/css" href="./Reading and Writing Spreadsheets with PHP_files/print.css" media="print">
<link rel="canonical" href="./Reading and Writing Spreadsheets with PHP_files/Reading and Writing Spreadsheets with PHP.htm">
<!--Fireclick implementation-->
<script type="text/javascript">
var fc_segment="devzone.zend.com/en";
</script>

<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-291885-1']);
_gaq.push(['_setDomainName', '.zend.com']);
_gaq.push(['_trackPageview']);

(function() {
  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
})();
</script><script type="text/javascript" async="" src="./Reading and Writing Spreadsheets with PHP_files/ga.js"></script>



<script type="text/javascript" src="./Reading and Writing Spreadsheets with PHP_files/prototype.js"></script>
<script type="text/javascript" src="./Reading and Writing Spreadsheets with PHP_files/category_boxes.js"></script>
<script type="text/javascript" src="./Reading and Writing Spreadsheets with PHP_files/common.js"></script>
<script type="text/javascript">
var self_url = 'http://devzone.zend.com';
var ajax_marker = '';
var self_secure_url = 'https:' + self_url.substring(5);


var watcher = null;

function doThisOnLoad() {
    javascriptize('loginlink');


    javascriptize("add_comment");


	displayExtFeed('/extfeeds/fetch/feed/phpdeveloper', 'extfeed-phpdeveloper');
	displayExtFeed('/extfeeds/fetch/feed/dzonephp', 'extfeed-dzonephp');
	displayExtFeed('/extfeeds/fetch/feed/phpwomen', 'extfeed-phpwomen');
} // function doThisOnLoad
</script>



<script type="text/javascript" src="./Reading and Writing Spreadsheets with PHP_files/shCore.js"></script>
<script type="text/javascript" src="./Reading and Writing Spreadsheets with PHP_files/shBrushCss.js"></script>
<script type="text/javascript" src="./Reading and Writing Spreadsheets with PHP_files/shBrushJScript.js"></script>
<script type="text/javascript" src="./Reading and Writing Spreadsheets with PHP_files/shBrushPhp.js"></script>
<script type="text/javascript" src="./Reading and Writing Spreadsheets with PHP_files/shBrushSql.js"></script>
<script type="text/javascript" src="./Reading and Writing Spreadsheets with PHP_files/shBrushXml.js"></script>
<link type="text/css" rel="stylesheet" href="./Reading and Writing Spreadsheets with PHP_files/shCore.css">
<link type="text/css" rel="stylesheet" href="./Reading and Writing Spreadsheets with PHP_files/shThemeDevZone.css">
<script type="text/javascript">
    SyntaxHighlighter.config.clipboardSwf = '/js/sh/clipboard.swf';
    SyntaxHighlighter.all();
</script>

</head>
    <body onload="doThisOnLoad();">
        <div id="lightbox_white">
            <p>
                DevZone uses zend.com accounts.  If you already have a zend.com account
                you may dismiss this message and log in directly.  
            </p><p>
                If you don't already
                have a zend.com account, then please continue on to register for an
                account at zend.com.  After you are done you will be redirected back
                to DevZone to login.
            </p>
            <a href="http://www.zend.com/user/register?redirect=/member/login&sub=devzone"><button>
                Continue Registration
            </button></a>
            &nbsp; &nbsp;
            <button onclick="return hideLightbox();">Dismiss</button> 
        </div>
        <div id="lightbox_black"></div>
        <div id="container">
            <div id="header">
                <div id="logo">
                    <a href="http://devzone.zend.com/"><span>Zend Developer Zone - Advancing the art of PHP</span></a>
                </div>
                <div id="logincontainer">
                    <div id="account">
                        <ul>
                                                <li><a href="http://devzone.zend.com/article/3336#" title="Login" id="loginlink">Login</a>&nbsp;|&nbsp;</li>
                        <li><a href="http://www.zend.com/user/register?redirect=/member/login&sub=devzone" title="Create new account and profile" onclick="return showLightbox();">Register</a>&nbsp;|&nbsp;
                        </li>
                                                <li><a href="http://devzone.zend.com/contribute" title="Contribute content">Contribute</a></li>
                    </ul>
                    </div>

                    <div id="loginheader">
                        <form name="headerloginform" method="POST" action=""><ul>
                        <li><label class="login-label">Username: </label><input type="text" size="8" class="login-text" name="username"></li>
                        <li><label class="login-label">Password: </label><input type="password" size="8" class="login-text" name="userpass"></li>
                        <input type="hidden" name="redirect" value="http://devzone.zend.com/article/3336">
                        <li><input type="submit" class="login-button" value="Login" name="submit"></li>
                        <li><input type="button" class="login-button" value="Cancel" onclick="divSwap(&#39;account&#39;,&#39;logincontainer&#39;);"></li>
                        </ul></form>
                    </div>
                    <div id="login-pleasewait">
                        <p> Processing login. Please wait...
                    </p></div>
                </div>
            </div>
            <div id="middle">
                <div id="nav">
                    <ul>
                        <li><a href="http://devzone.zend.com/">Home</a></li>
                        <li><a href="http://devzone.zend.com/articles">Articles</a></li>
                        <li><a href="http://devzone.zend.com/tutorials">Tutorials</a></li>
                        <li><a href="http://devzone.zend.com/podcasts">Podcasts</a></li>
                        <li><a href="http://devzone.zend.com/news">News</a></li>
                        <li><a href="http://devzone.zend.com/events">Events</a></li>
                        <li><a href="http://forums.zend.com/">Forums</a></li>
                        <li><a href="http://php.net/docs.php">PHP Manual</a></li>
                    </ul>
                    <div class="feed-icon"><a href="http://feeds.feedburner.com/ZendDeveloperZone" title="Zend Developer Zone - Home Page RSS Feed" rel="alternate" type="application/rss+xml"><img src="./Reading and Writing Spreadsheets with PHP_files/feed-icon-28x28.png"></a></div>
                    <div id="search">
                    <form name="search.form" action="http://devzone.zend.com/search/entry" method="post" id="search_form">
                      <div>
                        <input name="search_from_url" type="hidden" value="http://devzone.zend.com/article/3336">
                        <input name="search_text" type="text" maxlength="80" id="search_text" class="input-text">
                        <input type="image" src="./Reading and Writing Spreadsheets with PHP_files/btn_search.gif" alt="Search" value="Go" id="search_submit" class="input-button">
                      </div>
                    </form>                    
                    </div>
                    <div class="clearfix"></div>
                </div>
                
                                <div id="col-left">
                    
                    					<div id="popular-tags">
	                   <div class="tabbed" id="tabbed">
	                       <ul class="tabs">
	                           <li id="tagCloud">
	                               <a class="selected">
	                                   <b class="p1"></b><b class="p2"></b><b class="p3"></b><em>Hot Tags</em><b class="p3"></b><b class="p2"></b><b class="p1"></b>
	                               </a>
	                           </li>
	                       </ul>
	                   </div><div id="tagswrapper">
                       <div class="tags" id="tags">
                           <ul class="tagCloud"><li><a href="http://devzone.zend.com/tag/Template%20Engine" style="font-size: 65%;">Template Engine</a></li> <li><a href="http://devzone.zend.com/tag/Zend%20Framework" style="font-size: 150%;">Zend Framework</a></li> <li><a href="http://devzone.zend.com/tag/Design%20Patterns" style="font-size: 70%;">Design Patterns</a></li> <li><a href="http://devzone.zend.com/tag/php%7Ctek" style="font-size: 65%;">php|tek</a></li> <li><a href="http://devzone.zend.com/tag/symfony" style="font-size: 70%;">symfony</a></li> <li><a href="http://devzone.zend.com/tag/CakePHP" style="font-size: 65%;">CakePHP</a></li> <li><a href="http://devzone.zend.com/tag/phpdeveloper.org" style="font-size: 65%;">phpdeveloper.org</a></li> <li><a href="http://devzone.zend.com/tag/ZendCon" style="font-size: 70%;">ZendCon</a></li> <li><a href="http://devzone.zend.com/tag/Microsoft" style="font-size: 70%;">Microsoft</a></li> <li><a href="http://devzone.zend.com/tag/PHPCommunity" style="font-size: 65%;">PHPCommunity</a></li> <li><a href="http://devzone.zend.com/tag/Object%20Oriented%20Programming" style="font-size: 85%;">Object Oriented Programming</a></li> <li><a href="http://devzone.zend.com/tag/Best%20Practices" style="font-size: 65%;">Best Practices</a></li> <li><a href="http://devzone.zend.com/tag/Conference" style="font-size: 65%;">Conference</a></li> <li><a href="http://devzone.zend.com/tag/User%20Group" style="font-size: 70%;">User Group</a></li></ul>
                       </div></div>
                    </div>                    <br>
                    
                            <div id="right_sidebar_other" class="sidebar_outer">
          <div align="center" class="sidebar_inner" style="background: white">
            <a href="http://www.zend.com/devzone_offer">
                <img src="./Reading and Writing Spreadsheets with PHP_files/offer.jpg" border="0">
            </a>
          </div>
        </div><br>
                    
                    					<div id="quick-links">
						<h2 class="gray-heading"><span>Quick Links</span></h2>
						<ul class="first-level">
    						    						      						      <li class="first">
    						      <a href="http://www.php.net/downloads" target="_blank">Get PHP!</a></li>
    						      						      <li>
    						      <a href="http://www.zend.com/" target="_blank">Zend Home Page</a></li>
    						      						      <li>
    						      <a href="http://framework.zend.com/" target="_blank">Zend Framework</a></li>
    						      						      <li>
    						      <a href="http://www.zend.com/community/zend-server-ce" target="_blank">Zend Server CE</a></li>
    						      						      <li>
    						      <a href="http://www.zend.com/en/products/server/" target="_blank">Zend Server</a></li>
    						      						      <li>
    						      <a href="http://www.zend.com/en/products/studio/" target="_blank">Zend Studio</a></li>
    						      						      <li>
    						      <a href="http://www.zend.com/products/zend_guard" target="_blank">Zend Guard </a></li>
    						      						      <li>
    						      <a href="http://www.zend.com/en/products/studio/flash-builder-for-php/index?src=hpb" target="_blank">Flash Builder for PHP</a></li>
    						      						      <li>
    						      <a href="http://www.phparch.com/" target="_blank">php|architect</a></li>
    						      						      <li class="last">
    						      <a href="http://phppodcasts.com/" target="_blank">PHP Podcasts</a></li>
    						      												</ul>
						<div class="bottom"></div>
					</div>                    <br clear="all">
                    <div>
                    
                    		<div class="extfeeds">
		    <div id="extfeed-phpdeveloper" class="extfeed"><h2><a href="http://www.phpdeveloper.org/" target="_blank">PHPDeveloper.org</a></h2><ul><li><a href="http://www.phpdeveloper.org/news/16929">Project: Warden: A user database authorization package for FuelPHP</a></li><li><a href="http://www.phpdeveloper.org/news/16928">Rasmus Lerdorf's Blog: ZeroMQ + libevent in PHP</a></li><li><a href="http://www.phpdeveloper.org/news/16927">Stuart Herbert's Blog: Where Do You Get Your PHP From For Windows?</a></li><li><a href="http://www.phpdeveloper.org/news/16926">Noupe.com: Web Design &amp; Development Podcasts</a></li><li><a href="http://www.phpdeveloper.org/news/16925">Brian Swan's Blog: Version 3.0 (beta) of the SQL Server Drivers for PHP Released!</a></li></ul></div>
			<div id="extfeed-dzonephp" class="extfeed"><h2><a href="http://www.dzone.com/links/tag/php.html" target="_blank">dzone.com: php</a></h2><ul><li><a href="http://www.dzone.com/links/rss/coding_a_sleek_php_jquery_contact_form_with_runti.html">Coding a Sleek PHP / jQuery Contact Form with Runtime Preview</a></li><li><a href="http://www.dzone.com/links/rss/how_to_use_memcache_with_php.html">How to use Memcache with PHP</a></li><li><a href="http://www.dzone.com/links/rss/practical_php_refactoring_replace_type_code_with_3.html">Practical PHP Refactoring: Replace Type Code with State or Strategy</a></li><li><a href="http://www.dzone.com/links/rss/xoops_252_rc_is_released.html">XOOPS 2.5.2 RC Is Released</a></li><li><a href="http://www.dzone.com/links/rss/opening_and_saving_php_files_over_ftp.html">Opening and Saving PHP Files over FTP</a></li></ul></div>
			<div id="extfeed-phpwomen" class="extfeed"><h2><a href="http://pipes.yahoo.com/pipes/pipe.info?_id=jPNGktxy3RG9mdZgBR50VA" target="_blank">phpwomen forums</a></h2><ul><li><a href="http://www.phpwomen.org/forum/index.php?t=rview&goto=3583&th=828#msg_3583">Re: What is PHP?</a></li><li><a href="http://www.phpwomen.org/forum/index.php?t=rview&goto=3582&th=967#msg_3582">ZendCon 2011</a></li><li><a href="http://www.phpwomen.org/forum/index.php?t=rview&goto=3581&th=933#msg_3581">Re: PHPWomen at PHPNW11</a></li><li><a href="http://www.phpwomen.org/forum/index.php?t=rview&goto=3579&th=933#msg_3579">Breakfast at PHPNW11</a></li><li><a href="http://www.phpwomen.org/forum/index.php?t=rview&goto=3577&th=964#msg_3577">Re: Any body know How to add breadcrumbs to any page!!!</a></li></ul></div>
		</div>                    </div>
                </div>                
                        
                
               <div id="content" class="article-page">
              
              
                           <div class="tagbar">
                              <img class="icon" src="./Reading and Writing Spreadsheets with PHP_files/article.png" alt="Original DevZone Content" title="Original DevZone Content">
                          <div class="tags">
                                     &nbsp;<a href="http://devzone.zend.com/tag/PEAR">PEAR</a>&nbsp;
                                     &nbsp;<a href="http://devzone.zend.com/tag/Tutorials">Tutorials</a>&nbsp;
                              </div>
         </div>
                  <div class="info-container">
                          <a href="http://devzone.zend.com/member/3034-vvaswani" title="Author Profile"><img src="./Reading and Writing Spreadsheets with PHP_files/ba8659a7c22eeba79525ca2704bf0fe2" alt=""></a>
                      <div class="info-inner">
         <h1 id="page-heading">Reading and Writing Spreadsheets with PHP</h1>
       <div class="article-info">
           <span class="article-by"><a href="http://devzone.zend.com/member/3034-vvaswani" title="Author profile and contributions">             vvaswani</a></span>
           <span class="comment-block"> |
             <a href="http://devzone.zend.com/article/3336#comments" title="Jump to comments">             16 comments             </a> |  
           </span>
                      </div>
          </div>
         </div>
        <div class="clearfix"></div><br>

        <div class="article-body">
          <h2>Breaking The Language Barrier</h2>

<p>When it comes to playing nice with data in different formats, PHP's pedigree is hard to beat. Not only does the language make it a breeze to deal with SQL resultsets and XML files, but it comes with extensions to deal with formats as diverse as Ogg/Vorbis audio files, ZIP archives and EXIF headers. So it should come as no surprise that PHP can also read and write Microsoft Excel spreadsheets, albeit with a little help from PEAR.</p>
<p>In this article, I'll introduce you to two packages that make it surprisingly easy to hook your PHP scripts up to a Microsoft Excel spreadsheet and extract the data contained therein. I'll also show you how to dynamically create a new spreadsheet from scratch, complete with formulae and formatting, and import data from a spreadsheet into a database. So come on it, and let's get started!</p>

<h2>Putting The Pieces Together</h2>
<p>There isn't currently a unified reader/writer package for Excel spreadsheets in PEAR, so this tutorial will make use of two separate packages:</p>
<ul class="disc">
<li>The PHP-ExcelReader package, currently not maintained but available at <a href="http://sourceforge.net/projects/phpexcelreader/">http://sourceforge.net/projects/phpexcelreader/</a></li>
<li>The Spreadsheet_Excel_Writer package, maintained by Xavier Noguer  and available from <a href="http://pear.php.net/package/Spreadsheet_Excel_Writer">http://pear.php.net/package/Spreadsheet_Excel_Writer</a></li>
</ul>

<p>For the latter package, you'll also need to download and install the PEAR OLE package, from <a href="http://pear.php.net/package/OLE">http://pear.php.net/package/OLE</a></p>

<p>You can install these packages manually, or using the PEAR installer, as below:</p>

<pre>shell&gt; pear install Spreadsheet_Excel_Writer
</pre>

<p>I should mention at this point certain changes you might need to make to your development environment in order to get the PHP-ExcelReader package working. As noted above, this package is currently not maintained and so, simply include()-ing the main class file, 'reader.php', in your script, as suggested in the package documentation, is insufficient and generates a 'missing file' error. </p>

<p>To get things working, extract the file 'oleread.inc' from the distribution archive and save it to a location in your PHP include path using the directory structure  'Spreadsheet/Excel/Reader/OLERead.php'. Once you do this, the error should disappear and things should begin working normally. There's a caveat, though: this procedure works with the version of PHP-ExcelReader dated Jul 5 2007 (the most current version at the time of writing) but may not work with other versions.</p>

<h2>The Number Game</h2>

<p>Now that you have all the pieces installed, let's see them in action. Assume for a moment that you have the following Excel spreadsheet:</p>

<img src="./Reading and Writing Spreadsheets with PHP_files/image1.gif">

<p>Now, let's put together a simple PHP script that reads this spreadsheet and displays the number of worksheets, rows and columns in it:</p>

<code><pre><!--?php
// include class file
include 'reader.php';

// initialize reader object
$excel = new Spreadsheet_Excel_Reader();

// read spreadsheet data
$excel--->read('Book1.xls');

// print number of rows, columns and sheets
echo "Number of sheets: " . sizeof($excel-&gt;sheets) . "\n";
for ($x=0; $x<sizeof($excel->sheets); $x++) {
  echo "Number of rows in sheet " . ($x+1) . ": " . $excel-&gt;sheets[$x]["numRows"] . "\n";
  echo "Number of columns in sheet " . ($x+1) . ": " . $excel-&gt;sheets[$x]["numCols"] . "\n";
}
?&gt;
</sizeof($excel-></pre></code><br><br>

<p>Here's the output:</p>

<img src="./Reading and Writing Spreadsheets with PHP_files/image2.gif"><br><br>

<p>How did this happen? It's actually not very difficult, because PHP-ExcelReader does most of the heavy lifting for you. The first step is to include the package file and instantiate a new Spreadsheet_Excel_Reader object. This object exposes a read() method, which accepts the name and path to the source Excel spreadsheet as input argument and then goes to work reading the spreadsheet data and converting it into PHP-readable data structures.</p>

<p>Every Excel spreadsheet file contains one or more worksheets; these worksheets are now represented in the Spreadsheet_Excel_Reader's 'sheets' property, as array elements indexed from 0. As a result, worksheet 1 may be accessed using the notation $obj-&gt;sheets[0], worksheet 2 as $obj-&gt;sheets[1], and so on.</p>

<p>For each worksheet, PHP-ExcelReader also creates some special array keys with sheet-level information - for example, the 'numRows' key holds the number of rows in the worksheet, while the 'numCols' holds the number of columns. The script above merely uses this information to iterate over the array of worksheets and print the number of rows and columns in each.</p>

<h2>Off The Grid</h2>

<p>Now, while this is interesting, it's not really all that useful - after all, what you're really after is the data within the spreadsheet. PHP-ExcelReader has you covered there too: the cells of each worksheet are nested inside the corresponding worksheet array, and are accessible via the 'cells' array key. An individual cell is accessed using its row and column coordinates - for example, the cell at row 5 and column C would be accessed using the notation $obj-&gt;sheets[0]['cells'][5][3]. Row and column indexing starts from 1.</p>
<p>With this in mind, consider the next PHP script, which uses the PHP-ExcelReader to represent the example spreadsheet as an HTML table:</p>

<code><pre>&lt;html&gt;
  &lt;head&gt;
    &lt;style type="text/css"&gt;
    table {
    	border-collapse: collapse;
    }        
    td {
    	border: 1px solid black;
    	padding: 0 0.5em;
    }        
    &lt;/style&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;table&gt;
    &lt;?php
    // include class file
    include 'reader.php';
    
    // initialize reader object
    $excel = new Spreadsheet_Excel_Reader();
    
    // read spreadsheet data
    $excel-&gt;read('Book1.xls');    
    
    // iterate over spreadsheet cells and print as HTML table
    $x=1;
    while($x&lt;=$excel-&gt;sheets[0]['numRows']) {
      echo "\t&lt;tr&gt;\n";
      $y=1;
      while($y&lt;=$excel-&gt;sheets[0]['numCols']) {
        $cell = isset($excel-&gt;sheets[0]['cells'][$x][$y]) ? $excel-&gt;sheets[0]['cells'][$x][$y] : '';
        echo "\t\t&lt;td&gt;$cell&lt;/td&gt;\n";  
        $y++;
      }  
      echo "\t&lt;/tr&gt;\n";
      $x++;
    }
    ?&gt;    
    &lt;/table&gt;
  &lt;/body&gt;
&lt;/html&gt;
</pre></code><br><br>

<p>It's now a simple task to represent the data from a worksheet as an HTML table. All that's needed are two loops, one iterating over the rows and the other iterating over the columns in each row, and a little bit of PHP code to access the value of the cell at their point of intersection. That's precisely what the script above does, together with some CSS code to render the table neatly.</p>
<p>Here's what the output looks like:</p>

<img src="./Reading and Writing Spreadsheets with PHP_files/image3.gif"><br><br>

<p>Interestingly, if your spreadsheet cells contain formulae, PHP-ExcelReader will return the final result of the formulae as the corresponding cell value (instead of the raw formula string). However, when it comes to cell formatting, PHP-ExcelReader returns the raw value of each cell, rather than the formatted cell value. To illustrate both these facts, let's revise the spreadsheet so it contains both formulae and formatting:</p>

<img src="./Reading and Writing Spreadsheets with PHP_files/image4.gif"><br><br>

<p>And now, when you re-run the previous script, you should see something like this:</p>

<img src="./Reading and Writing Spreadsheets with PHP_files/image5.gif"><br><br>

<h2>Turning The Tables</h2>

<p>With the power of PHP-ExcelReader at your command, it's also quite easy to transfer data from a spreadsheet into a database, so that you can run queries on it. Consider the following script, which illustrates the process by bringing together PHP-ExcelReader, PDO and prepared statements to read data from a spreadsheet and INSERT it into a MySQL table:</p>

<code><pre>&lt;?php
// include class file
include 'reader.php';

// initialize reader object
$excel = new Spreadsheet_Excel_Reader();

// read spreadsheet data
$excel-&gt;read('Book2.xls');

// attempt a connection
try {
   $pdo = new PDO('mysql:dbname=test;host=localhost', 'user', 'pass');
} catch (PDOException $e) {
   die("ERROR: Could not connect: " . $e-&gt;getMessage());
}

// iterate over spreadsheet rows and columns
// convert into INSERT query
$sql = "INSERT INTO data (country, sales) VALUES (?, ?)";
if ($stmt = $pdo-&gt;prepare($sql)) {
  $x=2;
  while($x&lt;=$excel-&gt;sheets[0]['numRows']) {
    $stmt-&gt;bindParam(1, $excel-&gt;sheets[0]['cells'][$x][1]);
    $stmt-&gt;bindParam(2, $excel-&gt;sheets[0]['cells'][$x][2]);
    if (!$stmt-&gt;execute()) {
      echo "ERROR: Could not execute query: $sql. " . print_r($pdo-&gt;errorInfo());
    }  
    $x++;
  }
} else {
  echo "ERROR: Could not prepare query: $sql. " . print_r($pdo-&gt;errorInfo());
}

// close connection
unset($pdo);
?&gt;
</pre></code><br><br>

<p>Given the following spreadsheet,</p>


<img src="./Reading and Writing Spreadsheets with PHP_files/image6.gif"><br><br>

<p>the script above will read the data in the spreadsheet and save each spreadsheet row as a record in the named MySQL table. It begins by reading the spreadsheet into a Spreadsheet_Excel_Reader object, and then opening a PDO connection to the MySQL database. It then prepares an INSERT statement with $pdo-&gt;prepare() and then iterates over the spreadsheet rows (skipping the first row, which is the table header row), binding the values in each row to the prepared statement before executing it. This process continues until all the rows in the spreadsheet are processed. </p>

<p>At the end of the process, you should see the data safely transferred to your MySQL table:</p>

<pre>mysql&gt; SELECT * FROM data;
+----------------+-------+
| country        | sales |
+----------------+-------+
| United States  |  7583 |
| United Kingdom |  4359 |
| France         | 45885 |
| Germany        |  3833 |
| Spain          |  8738 |
| Italy          |  5239 |
| Greece         | 38282 |
+----------------+-------+
7 rows in set (0.01 sec)
</pre>

<p>There's one key thing to remember when performing this kind of spreadsheet-to-database conversion: your spreadsheet data must be correctly and consistently structured, with all the values lining up neatly, or else your table fields will end up with missing or incorrect values. So it's a good idea to visually check the source spreadsheet for consistency once before reading it into an SQL database.</p>

<h2>Back To Class</h2>
<p>So that takes care of reading Excel spreadsheets. Now, how about writing them?</p>
<p>Well, with PEAR's Spreadsheet_Excel_Writer package, this is actually a piece of cake. Consider the following script, which illustrates the process:</p>

<code><pre>&lt;?php
// spreadsheet data
$data = array(
  array('', 'Math', 'Literature', 'Science'),
  array('John', 24, 54, 38),
  array('Mark', 67, 22, 57),
  array('Tim', 69, 32, 58),
  array('Sarah', 81, 78, 68),
  array('Susan', 16, 44, 38),
);

// include package
include 'Spreadsheet/Excel/Writer.php';

// create empty file
$excel = new Spreadsheet_Excel_Writer('grades.xls');

// add worksheet
$sheet =&amp; $excel-&gt;addWorksheet('Class I');

// add data to worksheet
$rowCount=0;
foreach ($data as $row) {
  foreach ($row as $key =&gt; $value) {
    $sheet-&gt;write($rowCount, $key, $value);    
  }  
  $rowCount++;
}

// save file to disk
if ($excel-&gt;close() === true) {
  echo 'Spreadsheet successfully saved!';  
} else {
  echo 'ERROR: Could not save spreadsheet.';
}
?&gt;
</pre></code><br><br>

<p>There's a fairly standard sequence of actions to follow when creating a new Excel spreadsheet. First, include the class file and initialize an object of the Spreadsheet_Excel_Writer class, passing the name and path of the output spreadsheet file to the object constructor. Once you've got your empty spreadsheet initialized, add a new, empty worksheet to it with the object's addWorksheet() method; pass the worksheet name to the method as an additional argument.</p>

<p>At this point, your spreadsheet is ready for some data. Inserting data is a task for the write() method, which accepts three arguments: the row number, the column number and the value to be inserted. Row and column indexing starts from 0. So, for example, to write the value 'Hello' to the cell at row 4 and column F, you'd call $obj-&gt;write(3,5,'Hello'). </p>

<p>In the previous example, a loop iterates over the array of source data, using write() to add each element to the spreadsheet as a cell. Once you've finished writing data to the spreadsheet, the close() method wraps things up and saves the output file to disk. You can now read this spreadsheet in Microsoft Excel - open it up, and you'll see something like this:</p>

<img src="./Reading and Writing Spreadsheets with PHP_files/image7.gif"><br><br>

<p>If, instead of writing the output file to disk, you'd prefer to have it sent directly to the user's browser, Spreadsheet_Excel_Writer has you covered there too! To do this, call the Spreadsheet_Excel_Writer's send() method with the output file name instead of passing it to the object constructor, as in the following revision of the previous example:</p>

<code><pre>&lt;?php
// spreadsheet data
$data = array(
  array('', 'Math', 'Literature', 'Science'),
  array('John', 24, 54, 38),
  array('Mark', 67, 22, 57),
  array('Tim', 69, 32, 58),
  array('Sarah', 81, 78, 68),
  array('Susan', 16, 44, 38),
);

// include package
include 'Spreadsheet/Excel/Writer.php';

// create empty file
$excel = new Spreadsheet_Excel_Writer();

// send client headers
$excel-&gt;send('grades.xls');

// add worksheet
$sheet =&amp; $excel-&gt;addWorksheet('Class I');

// add data to worksheet
$rowCount=0;
foreach ($data as $row) {
  foreach ($row as $key =&gt; $value) {
    $sheet-&gt;write($rowCount, $key, $value);    
  }  
  $rowCount++;
}

// close and output file
if ($excel-&gt;close() !== true) {
  echo 'ERROR: Could not save spreadsheet.';
}
?&gt;
</pre></code><br><br>

<p>The send() method sends the client browser headers that identify the data that follows as a spreadsheet. The browser should then offer the user a choice to view the spreadsheet directly in Microsoft Excel, or save the file to disk.</p>

<h2>The Secret Formula</h2>

<p>Why stop with just values? It's easy to create cells containing formulae as well - simply call the writeFormula() method with the row and column coordinates of the target cell and the formula to be inserted into that cell. As per normal Excel operation, formulae must be preceded with an equality symbol (=). Consider the following revision of the previous example, which averages the grades of each student across the three subjects:</p>

<code><pre>&lt;?php
// spreadsheet data
$data = array(
  array('', 'Math', 'Literature', 'Science'),
  array('John', 24, 54, 38),
  array('Mark', 67, 22, 57),
  array('Tim', 69, 32, 58),
  array('Sarah', 81, 78, 68),
  array('Susan', 16, 44, 38),
);

// include package
include 'Spreadsheet/Excel/Writer.php';

// create empty file
$excel = new Spreadsheet_Excel_Writer('grades.xls');

// add worksheet
$sheet =&amp; $excel-&gt;addWorksheet('Class I');

// add data to worksheet
$rowCount=0;
foreach ($data as $row) {
  for($x=0; $x&lt;sizeof($row); $x++) {
    $sheet-&gt;write($rowCount, $x, $row[$x]);        
  }  
  // get cell coordinates
  $start = Spreadsheet_Excel_Writer::rowcolToCell($rowCount, 1);
  $end = Spreadsheet_Excel_Writer::rowcolToCell($rowCount, (sizeof($row)-1));
  // add AVERAGE() formula to terminating cell of each row
  // except the first (header) row
  if ($rowCount != 0) {
    $sheet-&gt;writeFormula($rowCount, sizeof($row), "=AVERAGE($start:$end)");     
  } 
  $rowCount++;
}

// save file to disk
if ($excel-&gt;close() === true) {
  echo 'Spreadsheet successfully saved!';  
} else {
  echo 'ERROR: Could not save spreadsheet.';
}
?&gt;
</pre></code><br><br>

<p>Here, Excel's AVERAGE() formula is used to calculate the average grade of each student, by dynamically generating the formula string and placing it at the end of each row of grades. Notice the script's use of the rowcolToCell() static method, which accepts a row and column number and returns an Excel-compliant alphanumeric grid identifier corresponding to that cell. </p>
<p>Here's what the output looks like:</p>

<img src="./Reading and Writing Spreadsheets with PHP_files/image8.gif"><br><br>

<p>In addition to the writeFormula() method, the Spreadsheet_Excel_Writer also comes with writeNote() and writeUrl() methods, which come in handy to attach notes or hyperlinks to a cell. The following example illustrates both these in action:</p>

<code><pre>&lt;?php
// include package
include 'Spreadsheet/Excel/Writer.php';

// create empty file
$excel = new Spreadsheet_Excel_Writer('Book1.xls');

// add worksheet
$sheet =&amp; $excel-&gt;addWorksheet('Untitled');

// add note
$sheet-&gt;write(0, 0, 647384.65);        
$sheet-&gt;writeNote(0, 0, 'This assumes g=16%');        

// add URLs as cell values
$sheet-&gt;writeUrl(1, 0, 'http://www.yahoo.com/', 'Yahoo!');        
$sheet-&gt;writeUrl(2, 0, 'http://www.google.com/', 'Google');        
$sheet-&gt;writeUrl(3, 0, 'http://www.php.net/', 'PHP.net');        

// save file to disk
if ($excel-&gt;close() === true) {
  echo 'Spreadsheet successfully saved!';  
} else {
  echo 'ERROR: Could not save spreadsheet.';
}
?&gt;
</pre></code><br><br>

<h2>Looking Pretty</h2>
<p>Spreadsheet_Excel_Writer also offers a large number of methods to format your spreadsheet cells and make them look pretty. There are two steps to using formats: first, define a new format with the addFormat() method and then, apply the format to a cell by specifying it as an additional argument to the write() method.</p>

<p>The following example illustrates the process:</p>

<code><pre>&lt;?php
// spreadsheet data
$data = array(
  array('', 'Math', 'Literature', 'Science'),
  array('John', 24, 54, 38),
  array('Mark', 67, 22, 57),
  array('Tim', 69, 32, 58),
  array('Sarah', 81, 78, 68),
  array('Susan', 16, 44, 38),
);

// include package
include 'Spreadsheet/Excel/Writer.php';

// create empty file
$excel = new Spreadsheet_Excel_Writer('grades.xls');

// add worksheet
$sheet =&amp; $excel-&gt;addWorksheet('Class I');

// create format for header row 
// bold, red with black lower border
$firstRow =&amp; $excel-&gt;addFormat();
$firstRow-&gt;setBold();
$firstRow-&gt;setColor('red');
$firstRow-&gt;setBottom(1);
$firstRow-&gt;setBottomColor('black');

// create format for header column
// blue with black right border
$firstCol =&amp; $excel-&gt;addFormat();
$firstCol-&gt;setColor('blue');
$firstCol-&gt;setRight(1);
$firstCol-&gt;setRightColor('black');

// create format for top left corner
$firstRowCol =&amp; $excel-&gt;addFormat();
$firstRowCol-&gt;setBottom(1);
$firstRowCol-&gt;setRight(1);
$firstRowCol-&gt;setBorderColor('black');

// create format for numeric cells
$num =&amp; $excel-&gt;addFormat();
$num-&gt;setNumFormat('0');

// create format for averaged values
$avg =&amp; $excel-&gt;addFormat();
$avg-&gt;setNumFormat('0.00');

// add data to worksheet
$rowCount=0;
foreach ($data as $row) {
  for($colCount=0; $colCount&lt;sizeof($row); $colCount++) {
    if ($rowCount == 0 &amp;&amp; $colCount == 0) {
      $format = 'firstRowCol';
    } else if ($rowCount == 0) {
        $format = 'firstRow';        
    } else if ($colCount == 0) {
        $format = 'firstCol';                
    } else {
        $format = 'num';                      
    }
    $sheet-&gt;write($rowCount, $colCount, $row[$colCount], $$format);                       
  }  
  // get cell coordinates
  $start = Spreadsheet_Excel_Writer::rowcolToCell($rowCount, 1);
  $end = Spreadsheet_Excel_Writer::rowcolToCell($rowCount, (sizeof($row)-1));
  // add average() formula to terminating cell of each row
  // except the first (header) row
  if ($rowCount != 0) {
    $sheet-&gt;writeFormula($rowCount, sizeof($row), "=AVERAGE($start:$end)", $avg);     
  } 
  $rowCount++;
}

// save file to disk
if ($excel-&gt;close() === true) {
  echo 'Spreadsheet successfully saved!';  
} else {
  echo 'ERROR: Could not save spreadsheet.';
}
?&gt;
</pre></code><br><br>

<p>This example defines five different formats: $firstRow, which has red text and a bottom border; $firstCol, which has blue text and a right border; $firstRowCol, which has both a right and bottom border; $num, which formats numbers as integer values; and $avg, which formats numbers as decimal values. Each of these formats is created by calling the Spreadsheet_Excel_Writer's addFormat() method to create a new Format object, and then calling methods of this Format object to set various formatting attributes such as color, size and weight. </p>

<p>So, for example, the Format object's setColor() method sets the text color for the format, while the setBorderColor() method sets the border color. Similarly, there's a setSize() method to set text size, a setAlign() method to set the text alignment, a setTextWrap() method to define text wrapping, and a setNumFormat() method to define how numeric values are formatted. Some of these methods are used in the previous example.</p>

<p>Once the various Format objects are defined, all that's left is to apply them to the relevant cells. This is accomplished by using the relevant object when invoking the write() method. Thus, in the script above, all subject names (the first row) are formatted using $firstRow, all student names (the first column) are formatted using $firstCol, and all grades (the table content) are formatted using $num.</p>

<p>Here's what the output looks like:</p>

<img src="./Reading and Writing Spreadsheets with PHP_files/image9.gif"><br><br>

<p>It should be noted that the Format object exposes many more formatting methods than the few shown in the previous example. To obtain a complete list, look in the documentation for the Spreadsheet_Excel_Writer package, at <a href="http://pear.php.net/manual/en/package.fileformats.spreadsheet-excel-writer.php">http://pear.php.net/manual/en/package.fileformats.spreadsheet-excel-writer.php</a>; there's also an excellent tutorial on formatting there that you'll undoubtedly find useful!</p>

<h2>Around The World In 80 Rows</h2>
<p>Earlier on in this article, I showed you how to read data from an Excel spreadsheet and transfer it to an SQL database. Now it's time to do the reverse: transform an SQL result set into an Excel spreadsheet. In the following example, I'll use the MySQL example 'world' database, and turn all the records from the 'country' table into rows of an Excel spreadsheet. Take a look at the code:</p>

<code><pre>&lt;?php
// include class file
include 'Spreadsheet/Excel/Writer.php';

// initialize reader object
$excel = new Spreadsheet_Excel_Writer();

// send client headers
$excel-&gt;send('country.xls');

// add worksheet
$sheet =&amp; $excel-&gt;addWorksheet('SQL_Output');

// attempt a connection
try {
   $pdo = new PDO('mysql:dbname=world;host=localhost', 'user', 'pass');
} catch (PDOException $e) {
   die("ERROR: Could not connect: " . $e-&gt;getMessage());
}

// read data from database
// convert into spreadsheet
$rowCount = 0;
$sql = "SELECT * FROM country";
if ($result = $pdo-&gt;query($sql)) {
  // get header row
  for ($x=0; $x&lt;$result-&gt;columnCount(); $x++) {
    $meta = $result-&gt;getColumnMeta($x);    
    $sheet-&gt;write($rowCount, $x, $meta['name']);        
  }
  // get data rows
  $rowCount++;
  while($row = $result-&gt;fetch()) {
    foreach ($row as $key =&gt; $value) {
      $sheet-&gt;write($rowCount, $key, $value);        
    }
    $rowCount++;
  }
} else {
  echo "ERROR: Could not execute $sql. " . print_r($pdo-&gt;errorInfo());
}

// close connection
unset($pdo);

// save file to disk
if ($excel-&gt;close() === true) {
  echo 'Spreadsheet successfully saved!';  
} else {
  echo 'ERROR: Could not save spreadsheet.';
}
?&gt;
</pre></code><br><br>

<p>If you've been following along, there shouldn't be any major surprises here. The script begins by initializing a new spreadsheet and attaching a blank worksheet to it. It then opens a PDO connection to the 'world' database and executes a SELECT query to return all the records from the 'country' table. </p>

<p>Having obtained a result set, the script then begins building the spreadsheet. First, it creates the header row by retrieving a list of all the fields in the result set, obtaining each field's name, and writing this to the spreadsheet as the first row. Then, it iterates over the result set, writing the contents of each record to the spreadsheet as a new row. This continues until the entire result set is processed, at which time the spreadsheet file is closed and sent to the user's browser.</p>

<p>If you look inside the resulting output file, here's a snippet of what you should see:</p>

<img src="./Reading and Writing Spreadsheets with PHP_files/image10.gif"><br><br>

<p>And that's about it for this article. Over the last few pages, I showed you how to read spreadsheet data and insert it into an SQL database, dynamically create a new spreadsheet, attach formulae, formatting, notes and hyperlinks to spreadsheet cells, and re-render SQL records in spreadsheet format. You probably wouldn't have thought all of this possible using just PHP code...but it is, and it isn't even very difficult.</p>

<p>I hope you enjoyed this tutorial, and that it will save you some time the next time you sit down to work with spreadsheet data and PHP. Happy coding!</p>

<p>Copyright <a href="http://melonfire.com/">Melonfire 2008</a>. All rights reserved.</p>


        </div>
        
                <a name="comments"></a>
        <div class="comments">
            <h1>
                Comments
                                    <span class="needlogin">(Login to leave comments)</span>
                            </h1>

                                              <a name="comments-3338"></a>
                            <div class="node_comments_new_day">Monday, March 31, 2008</div>
                                                                                  <div class="node_comments_inner_odd">
               
                                                                     <div class="node_comments_info node_comments_info_member">
                                    <img src="./Reading and Writing Spreadsheets with PHP_files/f62ebe822f6b351538e68cb2bbadefe9" alt="">
                                      <div class="node_comments_subject">
                    MAKE SURE TO CHECK OUT PHPEXCEL TOO!
                    <br>
                    </div>
                      <span class="node_comments_date">6:52PM GMT</span>
                      ·
                      <span class="node_comments_author">
                                                <a href="http://devzone.zend.com/member/1822-maartenba" title="Author profile and contributions">
                         maartenba
                         </a>
                                
                      </span>
                                     </div>
               <div class="node_comments_body page_middle_links">
               Make sure to check out PHPExcel too! (www.phpexcel.net)<br>
<br>
This class writes Excel 2007 AND older Excel BIFF format using the same class interface. It also introduces a calculation engine (check http://blog.maartenballiauw.be/post/2008/03/Reuse-Excel-business-logic-with-PHPExcel.aspx).
               </div>
             </div> 
                                                <a name="comments-3362"></a>
                            <div class="node_comments_new_day">Monday, April 7, 2008</div>
                                                                                  <div class="node_comments_inner_even">
               
                                                                     <div class="node_comments_info node_comments_info_member">
                                    <img src="./Reading and Writing Spreadsheets with PHP_files/4670b7b86d9e00577750cfd93dfa2d0b" alt="">
                                      <div class="node_comments_subject">
                    BUG 
                    <br>
                    </div>
                      <span class="node_comments_date">2:35PM GMT</span>
                      ·
                      <span class="node_comments_author">
                                                <a href="http://devzone.zend.com/member/5093-pawarsac" title="Author profile and contributions">
                         pawarsac
                         </a>
                                
                      </span>
                                     </div>
               <div class="node_comments_body page_middle_links">
               In my one excell sheet one column contains data is as given below<br>
<br>
<br>
Bengali/Bengali Non Film/Aamar Bhalobasai Kal Holo <br>
Bengali/Bengali Non Film/Aamar Bhalobasai Kal Holo <br>
Bengali/Bengali Non Film/Aamar Bhalobasai Kal Holo <br>
Bengali/Bengali Non Film/Aamar Bhalobasai Kal Holo <br>
Bengali/Bengali Non Film/Aamar Bhalobasai Kal Holo <br>
Bengali/Bengali Non Film/Aamar Bhalobasai Kal Holo <br>
Bengali/Bengali Non Film/Aamar Bhalobasai Kal Holo <br>
Bengali/Bengali Non Film/Bhajore Kali Naam<br>
Bengali/Bengali Non Film/Bhajore Kali Naam<br>
Bengali/Bengali Non Film/Bhajore Kali Naam<br>
Bengali/Bengali Non Film/Bhajore Kali Naam<br>
Bengali/Bengali Non Film/Bhajore Kali Naam<br>
Bengali/Bengali Non Film/Bhajore Kali Naam<br>
<br>
This excell reader is not able to read properly.<br>
Any solution? 
               </div>
             </div> 
                                                <a name="comments-3470"></a>
                            <div class="node_comments_new_day">Saturday, May 3, 2008</div>
                                                                                  <div class="node_comments_inner_odd">
               
                                                                     <div class="node_comments_info node_comments_info_member">
                                    <img src="./Reading and Writing Spreadsheets with PHP_files/879a5faeaf4701474b6ca9867e80657f" alt="">
                                      <div class="node_comments_subject">
                    PHPEXCEL DOESN'T WORK FOR MANY INSTALLATIONS
                    <br>
                    </div>
                      <span class="node_comments_date">3:40AM GMT</span>
                      ·
                      <span class="node_comments_author">
                                                <a href="http://devzone.zend.com/member/5279-primordius" title="Author profile and contributions">
                         primordius
                         </a>
                                
                      </span>
                                     </div>
               <div class="node_comments_body page_middle_links">
               PHPEXCEL doesn't work for many installations.<br>
The learning curve is fairly high.<br>
Also, requires PHP 5.2+ and ZLIB.<br>
<br>
Simpler and smaller classes are out there.<br>
<br>
Pear has a package, but it is limited to Excel95 features.<br>
  http://pear.php.net/package/Spreadsheet_Excel_Writer<br>
<br>
SourceForce has an ExcelWriterXML package which is very simple and does not require any additional libraries and works with any flavor of PHP5.<br>
  https://sourceforge.net/projects/excelwriterxml
               </div>
             </div> 
                                                <a name="comments-3857"></a>
                            <div class="node_comments_new_day">Monday, September 15, 2008</div>
                                                                                  <div class="node_comments_inner_even">
               
                                                                     <div class="node_comments_info node_comments_info_member">
                                    <img src="./Reading and Writing Spreadsheets with PHP_files/dbf67a35bf298bab052c898a2b733b22" alt="">
                                      <div class="node_comments_subject">
                    THANKS FOR THE EFFORT
                    <br>
                    </div>
                      <span class="node_comments_date">10:16AM GMT</span>
                      ·
                      <span class="node_comments_author">
                                                <a href="http://devzone.zend.com/member/6066-opurahman" title="Author profile and contributions">
                         opurahman
                         </a>
                                
                      </span>
                                     </div>
               <div class="node_comments_body page_middle_links">
               I was looking for this type of solution. Thanks
               </div>
             </div> 
                                                <a name="comments-3862"></a>
                            <div class="node_comments_new_day">Wednesday, September 17, 2008</div>
                                                                                  <div class="node_comments_inner_odd">
               
                                         <div class="node_comments_info ">
                                      <div class="node_comments_subject">
                    USE EXCELREADER TO READ AND IMPORT DATA INTO MYSQL DATABASE
                    <br>
                    </div>
                      <span class="node_comments_date">4:33PM GMT</span>
                      ·
                      <span class="node_comments_author">
                                                BigD <span class="node_comments_author_unregistered">[unregistered]</span>
                                
                      </span>
                                     </div>
               <div class="node_comments_body page_middle_links">
               In your MySQL import example you showed how to import data into a MySQL database with an Excel spreadsheet that mimiced your database structure (ie every row was a seperate row in the database. Is it possible to import data from various cells into one row of the database? For instance I have a spreadsheet which has the data I want to import in cells C2 - C13 this data needs to be imported into 12 fields in the same row of my database. Is this possible and could your provide an example script?<br>
<br>
Thank You
               </div>
             </div> 
                                                <a name="comments-4138"></a>
                            <div class="node_comments_new_day">Wednesday, December 31, 2008</div>
                                                                                  <div class="node_comments_inner_even">
               
                                         <div class="node_comments_info ">
                                      <div class="node_comments_subject">
                    A BIGGER FILE
                    <br>
                    </div>
                      <span class="node_comments_date">9:18AM GMT</span>
                      ·
                      <span class="node_comments_author">
                                                Joro <span class="node_comments_author_unregistered">[unregistered]</span>
                                
                      </span>
                                     </div>
               <div class="node_comments_body page_middle_links">
               Hi,<br>
I was trying to import a file which has 1000 colums... and also as uch rows.How to modify the script in this case?<br>
I am a newbie to php.<br>
Please help!<br>
geshabeli@yahoo.com
               </div>
             </div> 
                                                <a name="comments-4612"></a>
                            <div class="node_comments_new_day">Tuesday, May 12, 2009</div>
                                                                                  <div class="node_comments_inner_odd">
               
                                                                     <div class="node_comments_info node_comments_info_member">
                                    <img src="./Reading and Writing Spreadsheets with PHP_files/ad5561fb368875b59ccf49336bdbd0d6" alt="">
                                      <div class="node_comments_subject">
                    ISSUES WITH THE FREE READER
                    <br>
                    </div>
                      <span class="node_comments_date">12:10PM GMT</span>
                      ·
                      <span class="node_comments_author">
                                                <a href="http://devzone.zend.com/member/7426-bmdennst" title="Author profile and contributions">
                         bmdennst
                         </a>
                                
                      </span>
                                     </div>
               <div class="node_comments_body page_middle_links">
               I have an issue where negative numbers anything smaller than say -5000 or so are getting messed up with the free reading program. they are turning into 10691345.2<br>
<br>
Anyway, I've tried messing with the encoding types, but the code is very complicated, anyone else experience this issue and fix it?
               </div>
             </div> 
                                                <a name="comments-11044"></a>
                            <div class="node_comments_new_day">Sunday, October 11, 2009</div>
                                                                                  <div class="node_comments_inner_even">
               
                                                                     <div class="node_comments_info node_comments_info_member">
                                    <img src="./Reading and Writing Spreadsheets with PHP_files/ebce0decd894b6947fe28365c829ef17" alt="">
                                      <div class="node_comments_subject">
                    READING A SPREADSHEET, EDITING IT, AND WRITING IT.
                    <br>
                    </div>
                      <span class="node_comments_date">4:08PM GMT</span>
                      ·
                      <span class="node_comments_author">
                                                <a href="http://devzone.zend.com/member/23545-zyodei" title="Author profile and contributions">
                         zyodei
                         </a>
                                
                      </span>
                                     </div>
               <div class="node_comments_body page_middle_links">
               I may be a bit dense, but I am having trouble figuring out how to read a spreadsheet, edit it, adn write it back. These instructions only seem to deal with creating a spreadsheet from whole cloth. Is it possible to use these techniques to EDIT, not just write, and existing spreadsheet? 
               </div>
             </div> 
                                                <a name="comments-11359"></a>
                            <div class="node_comments_new_day">Friday, November 20, 2009</div>
                                                                                  <div class="node_comments_inner_odd">
               
                                                                     <div class="node_comments_info node_comments_info_member">
                                    <img src="./Reading and Writing Spreadsheets with PHP_files/b7493efa4a63ed6e3399a7e1459dc64f" alt="">
                                      <div class="node_comments_subject">
                    THANKS
                    <br>
                    </div>
                      <span class="node_comments_date">12:33PM GMT</span>
                      ·
                      <span class="node_comments_author">
                                                <a href="http://devzone.zend.com/member/24258-thewilson" title="Author profile and contributions">
                         thewilson
                         </a>
                                
                      </span>
                                     </div>
               <div class="node_comments_body page_middle_links">
               I would like to express my thanks to you for sharing the examples you have on this tutorial.  I have had the php Excel writing library for a year or so but never really understood the how.  Now it is much clearer and I think I am one more step closer to never actually using microsoft excel ever again.  I will just generate the reports with php :D<br>
<br>
Thanks!
               </div>
             </div> 
                                                <a name="comments-12085"></a>
                            <div class="node_comments_new_day">Thursday, April 29, 2010</div>
                                                                                  <div class="node_comments_inner_even">
               
                                                                     <div class="node_comments_info node_comments_info_member">
                                    <img src="./Reading and Writing Spreadsheets with PHP_files/be8cbce01656fdfc78a3e21ce18b45f5" alt="">
                                      <div class="node_comments_subject">
                    TYPO
                    <br>
                    </div>
                      <span class="node_comments_date">11:20AM GMT</span>
                      ·
                      <span class="node_comments_author">
                                                <a href="http://devzone.zend.com/member/25639-ioka" title="Author profile and contributions">
                         ioka
                         </a>
                                
                      </span>
                                     </div>
               <div class="node_comments_body page_middle_links">
               Typo on this line:<br>
<br>
for ($x=0; $xsheets); $x++) {<br>
<br>
<br>
Nice tutorial.<br>
<br>

               </div>
             </div> 
                                                <a name="comments-12573"></a>
                            <div class="node_comments_new_day">Thursday, September 16, 2010</div>
                                                                                  <div class="node_comments_inner_odd">
               
                                                                     <div class="node_comments_info node_comments_info_member">
                                    <img src="./Reading and Writing Spreadsheets with PHP_files/c454b8d512cb31c944a47f5a4e1b1dc7" alt="">
                                      <div class="node_comments_subject">
                    HOW TO USE THIS PLUGIN WITH XLSX FILES
                    <br>
                    </div>
                      <span class="node_comments_date">10:04AM GMT</span>
                      ·
                      <span class="node_comments_author">
                                                <a href="http://devzone.zend.com/member/26543-aldm11r" title="Author profile and contributions">
                         aldm11r
                         </a>
                                
                      </span>
                                     </div>
               <div class="node_comments_body page_middle_links">
               Hi,<br>
<br>
first thanks for great plugin and tutorial.<br>
Can this plugin be used with xlsx files?<br>
I tried that, and it didn't work.<br>
<br>
Thanks in advance,<br>
<br>
Amer
               </div>
             </div> 
                                                <a name="comments-12770"></a>
                            <div class="node_comments_new_day">Thursday, November 11, 2010</div>
                                                                                  <div class="node_comments_inner_even">
               
                                                                     <div class="node_comments_info node_comments_info_member">
                                    <img src="./Reading and Writing Spreadsheets with PHP_files/f4e3719c1a03ddbb66997f8adca4cad1" alt="">
                                      <div class="node_comments_subject">
                    TRANSFORMING AN SQL RESULT SET INTO AN EXCEL SPREADSHEET DOES NOT WORK
                    <br>
                    </div>
                      <span class="node_comments_date">7:49AM GMT</span>
                      ·
                      <span class="node_comments_author">
                                                <a href="http://devzone.zend.com/member/26880-gabrielapavel" title="Author profile and contributions">
                         gabrielapavel
                         </a>
                                
                      </span>
                                     </div>
               <div class="node_comments_body page_middle_links">
               This is an amazing tutorial. Helped me understand how to use this libs but transforming an SQL result set into an Excel spreadsheet does not work properly. The first column is always filled in with the rows from the last one. I could use some help. <br>
<br>
Thanks,<br>
Gabriela
               </div>
             </div> 
                                                <a name="comments-12799"></a>
                            <div class="node_comments_new_day">Monday, November 22, 2010</div>
                                                                                  <div class="node_comments_inner_odd">
               
                                                                     <div class="node_comments_info node_comments_info_member">
                                    <img src="./Reading and Writing Spreadsheets with PHP_files/e744566ea5193ed21fffb2b62c1d1465" alt="">
                                      <div class="node_comments_subject">
                    HOW TO USE IT WITH FILE XLS HAVE 3 COLUMN AND MORE!???
                    <br>
                    </div>
                      <span class="node_comments_date">3:45AM GMT</span>
                      ·
                      <span class="node_comments_author">
                                                <a href="http://devzone.zend.com/member/26929-suctreit" title="Author profile and contributions">
                         suctreit
                         </a>
                                
                      </span>
                                     </div>
               <div class="node_comments_body page_middle_links">
               First, I thank your useful post! :)<br>
I use it for file XLS have 3 column and more, but it don't show UTF-8 for data of column 3 and more ??<br>
Plz help me show data UTF-8<br>
Thank you very much!
               </div>
             </div> 
                                                <a name="comments-12824"></a>
                            <div class="node_comments_new_day">Tuesday, December 7, 2010</div>
                                                                                  <div class="node_comments_inner_even">
               
                                                                     <div class="node_comments_info node_comments_info_member">
                                    <img src="./Reading and Writing Spreadsheets with PHP_files/b086c46557a9aac5115702cd516de6db" alt="">
                                      <div class="node_comments_subject">
                    WANT TO READ THE DATE FORMAT
                    <br>
                    </div>
                      <span class="node_comments_date">2:09AM GMT</span>
                      ·
                      <span class="node_comments_author">
                                                <a href="http://devzone.zend.com/member/27026-rati592" title="Author profile and contributions">
                         rati592
                         </a>
                                
                      </span>
                                     </div>
               <div class="node_comments_body page_middle_links">
               I want to read and write a date field to database from the excelsheet. Please any one help me?
               </div>
             </div> 
                                                <a name="comments-13077"></a>
                            <div class="node_comments_new_day">Friday, February 18, 2011</div>
                                                                                  <div class="node_comments_inner_odd">
               
                                                                     <div class="node_comments_info node_comments_info_member">
                                    <img src="./Reading and Writing Spreadsheets with PHP_files/2edc6ff5ad7b7689e8223e53c5a8a074" alt="">
                                      <div class="node_comments_subject">
                    CAN'T READ EXCEL DATA, GETTING TIMEOUT ERROR
                    <br>
                    </div>
                      <span class="node_comments_date">6:36PM GMT</span>
                      ·
                      <span class="node_comments_author">
                                                <a href="http://devzone.zend.com/member/27580-ziadmannan" title="Author profile and contributions">
                         ziadmannan
                         </a>
                                
                      </span>
                                     </div>
               <div class="node_comments_body page_middle_links">
               Hi,<br>
<br>
Thanks for this post. It seems that the Excel Reader class on SF is quite popular as there are a number of blogs posts/articles out on the web recommending it as a Excel data reading solution but I'm having some trouble with it. I'm using the latest version available as I just downloaded it today. Firstly there seems to be some errors in the require_once statements but I fixed those. The example.php script still wouldn't run and when I tried to open the jxlrwtest.xls in Excel I got an error (This is not a WinWord97 file) so I tried to use my own simple xls file but I get a timeout error with the following message. Any pointers?<br>
<br>
Thanks<br>
Ziad<br>
<br>
==========<br>
<br>
Fatal error: Maximum execution time of 30 seconds exceeded in /home/ziad/public_html/phpExcelReader/Excel/Reader/oleread.inc on line 172 Call Stack: 0.0001 627856 1. {main}() /home/ziad/public_html/phpExcelReader/example.php:0 0.0071 654088 2. Spreadsheet_Excel_Reader-&gt;read() /home/ziad/public_html/phpExcelReader/example.php:39 0.0071 654088 3. OLERead-&gt;read() /home/ziad/public_html/phpExcelReader/Excel/reader.php:382 0.0138 704128 4. OLERead-&gt;__readData() /home/ziad/public_html/phpExcelReader/Excel/Reader/oleread.inc:151 
               </div>
             </div> 
                                                <a name="comments-13088"></a>
                            <div class="node_comments_new_day">Monday, February 21, 2011</div>
                                                                                  <div class="node_comments_inner_even">
               
                                                                     <div class="node_comments_info node_comments_info_member">
                                    <img src="./Reading and Writing Spreadsheets with PHP_files/2edc6ff5ad7b7689e8223e53c5a8a074" alt="">
                                      <div class="node_comments_subject">
                    EXCELREADER PROJECT ON GOOGLE CODE
                    <br>
                    </div>
                      <span class="node_comments_date">10:30AM GMT</span>
                      ·
                      <span class="node_comments_author">
                                                <a href="http://devzone.zend.com/member/27580-ziadmannan" title="Author profile and contributions">
                         ziadmannan
                         </a>
                                
                      </span>
                                     </div>
               <div class="node_comments_body page_middle_links">
               The ExcelReader project is available on Google Code and seems more active. The example script from Google worked whereas the Source Forge one didn't.<br>
<br>
http://code.google.com/p/php-excel-reader/
               </div>
             </div> 
                                           </div>
              </div>
                
                      <div id="col-right">
                  
        <div align="center" class="sidebar_inner" style="background: white; margin-left:-20px;">
            <p class="freetitle">Free community products:</p>
            <a href="http://www.eclipse.org/pdt/">
                <img src="./Reading and Writing Spreadsheets with PHP_files/pdt-logo.jpg" border="0">
            </a>
            <a href="http://framework.zend.com/">
                <img src="./Reading and Writing Spreadsheets with PHP_files/zf-logo.jpg" border="0">
            </a>
            <a href="http://www.zend.com/community/zend-server-ce">
                <img src="./Reading and Writing Spreadsheets with PHP_files/zend-server-ce-logo.jpg" border="0">
            </a>
        </div>
        <p></p>
        <div align="center" class="sidebar_inner" style="background: white; margin-left:-20px;">
            <a href="http://www.zend.com/devzone_webinar">
                <img src="./Reading and Writing Spreadsheets with PHP_files/devzone-free-webinars.jpg" border="0">
            </a>
        </div>
        <p></p>
        <div align="center" class="sidebar_inner" style="background: white; margin-left:-20px;">
            Follow DevZone on:<br>
            <a href="http://twitter.com/devzone"><img src="./Reading and Writing Spreadsheets with PHP_files/twitter-b.png" alt="Follow DevZone on Twitter"></a>
        </div>
      </div>                <div class="clearfix"></div>
                <div id="footer">
                    <a href="http://framework.zend.com/" title="Powered By Zend Framework"><img src="./Reading and Writing Spreadsheets with PHP_files/PoweredBy_ZF_4DarkBG.png" align="right"></a><strong>Copyright © 1999 - 2011 by Zend Technologies Ltd. All rights reserved.</strong><br>
                    Zend is a trademark of Zend Technologies Ltd. |
                    <a href="javascript:window.location="mai"+"lto:"+"devzone"+"@"+"zend"+"."+"com";"> Contact Us</a><br>

                    
                                    </div>
            </div>
        </div>

<!-- Fireclick, Inc - COPYRIGHT 1999-2007 - Please do not modify this code-->
<script type="text/javascript">
<!--
function handle(){return true;}
window.onerror=handle;
var fc_host='www.zend.com';
document.write('<scr'+'ipt '
+'src="'+((location.protocol=='http:')?'http:':'https:')
+'//a248.e.akamai.net/f/248/5462/3h/hints.netflame.cc/service/sc'+'ript/'+fc_host+'"></scr'+'ipt>');
function fcce(){if (typeof(fcnf)!="undefined") fcnf();}
var fcfn=window.onload;
function fcco(){window.setTimeout("fcce();", 100);fcfn();}
window.onload= null==fcfn ? fcce:fcco;
// -->
</script><script src="./Reading and Writing Spreadsheets with PHP_files/www.zend.com"></script>
<!-- Fireclick, Inc - COPYRIGHT 1999-2007 - Please do not modify this code-->

<script type="text/javascript" language="javascript" src="./Reading and Writing Spreadsheets with PHP_files/elqCfg.js"></script>
<script type="text/javascript" language="javascript" src="./Reading and Writing Spreadsheets with PHP_files/elqImg.js"></script><layer hidden="true"><img src="./Reading and Writing Spreadsheets with PHP_files/svrGP.aspx" border="0" width="1" height="1"></layer>

    
</body></html>