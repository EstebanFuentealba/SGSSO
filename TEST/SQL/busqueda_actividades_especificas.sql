CREATE PROCEDURE sp_search_point
	@PointLat decimal(10, 7),
	@PointLng decimal(10, 7),
	@intRadius int
AS
	SET NOCOUNT ON
	DECLARE @intMilesModifier int
	SET @intMilesModifier = 6371  -- If using kilometers, use 6371 instead of 3959

	-- Select locations that are near the parameters based on distance formula on a sphere
	SELECT ID_EVENTO, LAT_EVENTO, LNG_EVENTO,
		  (@intMilesModifier*acos(cos(radians(@PointLat))*cos(radians(LAT_EVENTO))*cos(radians(LNG_EVENTO)-
		   radians(@PointLng))+sin(radians(@PointLat))*sin(radians(LAT_EVENTO)))) AS distance
	FROM TBL_EVENTO
	WHERE (@intMilesModifier*acos(cos(radians(@PointLat))*cos(radians(LAT_EVENTO))*cos(radians(LNG_EVENTO)-
		   radians(@PointLng))+sin(radians(@PointLat))*sin(radians(LAT_EVENTO)))) < @intRadius
	
	-- Return XML for formatting results
	FOR XML RAW('marker'),ROOT('markers')

	SET NOCOUNT OFF
GO
-- Test
Use enap_v1
go

declare
	@PointLat   decimal = 0,
	@PointLng decimal = 0,
	@intRadius int = 0
select
	@PointLat= 0,
	@PointLng=0,
	@intRadius=0
	
exec sp_search_point @PointLat, @PointLng, @intRadius
go


/*
	Busqueda de matriz
*/
CREATE PROCEDURE sp_search_actividad_evaluada 
	@ID_ORGANIZACION   int = 0,
	@ID_DEPARTAMENTO_ORGANIZACION int = 0,
	@ID_DIVISION int = 0,
	@ID_AREA int = 0,
	@ID_ACTIVIDAD_GENERAL int = 0,
	@NOMBRE_ACTIVIDAD_ESPECIFICA nvarchar(100) = null,
	@ID_CARGO int = 0,
	@CONDICION int = 0,
	@FECHA_INICIO datetime = null,
	@FECHA_TERMINO datetime = null
AS
DECLARE @sql nvarchar(4000)

	SELECT @sql = 	' SELECT AEV.*, MA.ID_MATRIZ,AE.NOM_ACTIVIDAD_ESPECIFICA,  ''[''+CAST(MA.ID_MATRIZ AS VARCHAR)+''] ''+ DP.NOMBRE_DEPARTAMENTO +'' - ''+AG.NOM_ACTIVIDAD_GENERAL AS NOMBRE_MATRIZ ' +
					' FROM TBL_MATRIZ_ACTIVIDAD MA ' +
					' INNER JOIN TBL_ACTIVIDAD_EVALUADA AEV '+
					'	ON MA.ID_ACTIVIDAD_EVALUADA = AEV.ID_ACTIVIDAD_EVALUADA ' +
					' INNER JOIN TBL_DEPARTAMENTO_ORGANIZACION  DOR ' +
					'	ON AEV.ID_DEPARTAMENTO_ORGANIZACION = DOR.ID_DEPARTAMENTO_ORGANIZACION ' +
					' INNER JOIN TBL_ACTIVIDAD_ESPECIFICA AE ON AEV.ID_ACTIVIDAD_ESPECIFICA = AE.ID_ACTIVIDAD_ESPECIFICA ' +
					' INNER JOIN TBL_DEPARTAMENTO DP ON DOR.ID_DEPARTAMENTO = DP.ID_DEPARTAMENTO ' +
					' INNER JOIN TBL_ACTIVIDAD_GENERAL AG ON AG.ID_ACTIVIDAD_GENERAL = AEV.ID_ACTIVIDAD_GENERAL ' +
					' WHERE 1 = 1  '
	IF @ID_ORGANIZACION <> 0
	   SELECT @sql = @sql + ' AND DOR.ID_ORGANIZACION = @ID_ORGANIZACION '
	IF @ID_DEPARTAMENTO_ORGANIZACION <> 0
	   SELECT @sql = @sql + ' AND DOR.ID_DEPARTAMENTO_ORGANIZACION = @ID_DEPARTAMENTO_ORGANIZACION '
	IF @ID_DIVISION <> 0
	   SELECT @sql = @sql + ' AND AEV.ID_DIVISION = @ID_DIVISION ' 
	IF @ID_AREA <> 0
	   SELECT @sql = @sql + ' AND AEV.ID_AREA = @ID_AREA '
	IF @ID_ACTIVIDAD_GENERAL <> 0
	   SELECT @sql = @sql + ' AND AEV.ID_ACTIVIDAD_GENERAL = @ID_ACTIVIDAD_GENERAL '
	IF @NOMBRE_ACTIVIDAD_ESPECIFICA IS NOT NULL
	   SELECT @sql = @sql + ' AND AE.NOM_ACTIVIDAD_ESPECIFICA LIKE ''%''+@NOMBRE_ACTIVIDAD_ESPECIFICA+''%'' '
	IF @ID_CARGO <> 0
	   SELECT @sql = @sql + ' AND AEV.ID_CARGO = @ID_CARGO '
	IF @CONDICION <> 0
	   SELECT @sql = @sql + ' AND AEV.CONDICION = @CONDICION '
	IF @FECHA_INICIO IS NOT NULL AND @FECHA_TERMINO IS NOT NULL
	   SELECT @sql = @sql + ' AND AEV.FECHA_CREACION BETWEEN @FECHA_INICIO AND @FECHA_TERMINO '
	   
	SELECT @sql = @sql + ' ORDER BY MA.ID_MATRIZ DESC '
	EXEC sp_executesql @sql, N'@ID_ORGANIZACION INT, @ID_DEPARTAMENTO_ORGANIZACION INT, @ID_DIVISION INT, @ID_AREA INT, @ID_ACTIVIDAD_GENERAL INT, @NOMBRE_ACTIVIDAD_ESPECIFICA nvarchar(100), @ID_CARGO INT, @CONDICION INT, @FECHA_INICIO datetime, @FECHA_TERMINO datetime',
					   @ID_ORGANIZACION, @ID_DEPARTAMENTO_ORGANIZACION, @ID_DIVISION, @ID_AREA, @ID_ACTIVIDAD_GENERAL, @NOMBRE_ACTIVIDAD_ESPECIFICA, @ID_CARGO, @CONDICION, @FECHA_INICIO, @FECHA_TERMINO
					   
					   
-- Test
Use enap_v1
go

declare
	@ID_ORGANIZACION   int = 0,
	@ID_DEPARTAMENTO_ORGANIZACION int = 0,
	@ID_DIVISION int = 0,
	@ID_AREA int = 0,
	@ID_ACTIVIDAD_GENERAL int = 0,
	@NOMBRE_ACTIVIDAD_ESPECIFICA nvarchar(100) = null,
	@ID_CARGO int = 0,
	@CONDICION int = 0,
	@FECHA_INICIO datetime = null,
	@FECHA_TERMINO datetime = null
select
	@NOMBRE_ACTIVIDAD_ESPECIFICA= 'CA'
	
exec sp_search_actividad_evaluada @ID_ORGANIZACION, @ID_DEPARTAMENTO_ORGANIZACION, @ID_DIVISION, @ID_AREA, @ID_ACTIVIDAD_GENERAL, @NOMBRE_ACTIVIDAD_ESPECIFICA, @ID_CARGO, @CONDICION, @FECHA_INICIO, @FECHA_TERMINO
go








/* 
	Busqueda de MATRICEZ

*/
CREATE PROCEDURE sp_get_matriz_by_id
	@ID_MATRIZ   int = 0
AS
	IF @ID_MATRIZ <> 0
		SELECT 	MZ.ID_MATRIZ,
				AG.NOM_ACTIVIDAD_GENERAL, 
				AES.NOM_ACTIVIDAD_ESPECIFICA,
				CG.NOMBRE_CARGO,
				CASE WHEN AE.CONDICION=1 THEN 'Rutinaria' WHEN AE.CONDICION=2 THEN 'No Rutinaria' WHEN AE.CONDICION=3 THEN 'En Emergencia' END AS CONDICION,
				PE.NOM_PELIGRO,
				C.NOMBRE_CONSECUENCIA,
				CASE 
					WHEN AE.VALORACION_CONSECUENCIA=1 THEN
						'Ligeramente Dañino'
					WHEN AE.VALORACION_CONSECUENCIA=3 THEN
						'Extremadamente Dañino'
					ELSE
						'Dañino'
				END AS 'CONSECUENCIA',
				CASE 
					WHEN AE.VALORACION_PROBABILIDAD=1 THEN
						'Baja'
					WHEN AE.VALORACION_PROBABILIDAD=3 THEN
						'Alta'
					ELSE
						'Media'
				END AS 'PROBABILIDAD',
				CASE 
					WHEN (AE.VALORACION_CONSECUENCIA * AE.VALORACION_PROBABILIDAD)<3 THEN
						'Baja'
					WHEN (AE.VALORACION_CONSECUENCIA * AE.VALORACION_PROBABILIDAD)>5 THEN
						'Alta'
					ELSE
						'Media'
				END AS 'MRP',
				AE.VALORACION_CONSECUENCIA,
				AE.VALORACION_PROBABILIDAD,
				MC.NOM_MEDIDA_DE_CONTROL,
				CASE 
					WHEN AE.MEDIDA_VALORACION_CONSECUENCIA=1 THEN
						'Ligeramente Dañino'
					WHEN AE.MEDIDA_VALORACION_CONSECUENCIA=3 THEN
						'Extremadamente Dañino'
					ELSE
						'Dañino'
				END AS 'MEDIDA_CONSECUENCIA',
				CASE 
					WHEN AE.MEDIDA_VALORACION_PROBABILIDAD=1 THEN
						'Baja'
					WHEN AE.MEDIDA_VALORACION_PROBABILIDAD=3 THEN
						'Alta'
					ELSE
						'Media'
				END AS 'MEDIDA_PROBABILIDAD',
				CASE 
					WHEN (AE.MEDIDA_VALORACION_CONSECUENCIA * AE.MEDIDA_VALORACION_PROBABILIDAD)<3 THEN
						'Baja'
					WHEN (AE.MEDIDA_VALORACION_CONSECUENCIA * AE.MEDIDA_VALORACION_PROBABILIDAD)>5 THEN
						'Alta'
					ELSE
						'Media'
				END AS 'MRCC',
				AE.MEDIDA_VALORACION_CONSECUENCIA,
				AE.MEDIDA_VALORACION_PROBABILIDAD,
				ORG.NOMBRE_ORGANIZACION,
				DEP.NOMBRE_DEPARTAMENTO,
				DIV.NOMBRE_DIVISION
		FROM TBL_MATRIZ MZ 
				INNER JOIN TBL_MATRIZ_ACTIVIDAD MA ON MZ.ID_MATRIZ = MA.ID_MATRIZ
				INNER JOIN TBL_ACTIVIDAD_EVALUADA AE ON MA.ID_ACTIVIDAD_EVALUADA = AE.ID_ACTIVIDAD_EVALUADA
				INNER JOIN TBL_ACTIVIDAD_ESPECIFICA AES ON AE.ID_ACTIVIDAD_ESPECIFICA = AES.ID_ACTIVIDAD_ESPECIFICA
				INNER JOIN TBL_ACTIVIDAD_GENERAL AG ON AE.ID_ACTIVIDAD_GENERAL = AG.ID_ACTIVIDAD_GENERAL
				INNER JOIN TBL_CARGO CG ON AE.ID_CARGO = CG.ID_CARGO
				INNER JOIN TBL_PELIGRO PE ON AE.ID_PELIGRO = PE.ID_PELIGRO
				INNER JOIN TBL_PELIGRO_MEDIDA PM ON AE.ID_ACTIVIDAD_EVALUADA = PM.ID_ACTIVIDAD_EVALUADA
				INNER JOIN TBL_MEDIDA_DE_CONTROL MC ON PM.ID_MEDIDAS_DE_CONTROL=MC.ID_MEDIDAS_DE_CONTROL
				INNER JOIN TBL_PELIGRO_CONSECUENCIA PC ON PE.ID_PELIGRO = PC.ID_PELIGRO
				INNER JOIN TBL_CONSECUENCIA C ON PC.ID_CONSECUENCIA = C.ID_CONSECUENCIA
				INNER JOIN TBL_DEPARTAMENTO_ORGANIZACION DOR ON AE.ID_DEPARTAMENTO_ORGANIZACION = DOR.ID_DEPARTAMENTO_ORGANIZACION
				INNER JOIN TBL_ORGANIZACION ORG ON DOR.ID_ORGANIZACION = ORG.ID_ORGANIZACION
				INNER JOIN TBL_DEPARTAMENTO DEP ON DOR.ID_DEPARTAMENTO = DEP.ID_DEPARTAMENTO
				INNER JOIN TBL_DIVISION DIV ON AE.ID_DIVISION = DIV.ID_DIVISION
		WHERE MZ.ID_MATRIZ = @ID_MATRIZ
		ORDER BY AE.ID_ACTIVIDAD_EVALUADA, PE.ID_PELIGRO
GO
-- Test
USE enap_v3
GO

DECLARE
	@ID_MATRIZ   int = 0
SELECT
	@ID_MATRIZ= 6
	
EXEC sp_get_matriz_by_id @ID_MATRIZ
GO
