function DistanceWidget(opt_options) { var options = opt_options || {}; this.setValues(options); if (!this.get('position')) { this.set('position', map.getCenter()) } var marker = new google.maps.Marker({ draggable: true, title: 'Move me!' }); marker.setAnimation(google.maps.Animation.DROP); marker.bindTo('map', this); marker.bindTo('zIndex', this); marker.bindTo('position', this); marker.bindTo('icon', this); var radiusWidget = new RadiusWidget(options['distance'] || 50); radiusWidget.bindTo('center', this, 'position'); radiusWidget.bindTo('map', this); radiusWidget.bindTo('zIndex', marker); radiusWidget.bindTo('maxDistance', this); radiusWidget.bindTo('minDistance', this); radiusWidget.bindTo('color', this); radiusWidget.bindTo('activeColor', this); radiusWidget.bindTo('sizerIcon', this); radiusWidget.bindTo('activeSizerIcon', this); this.bindTo('distance', radiusWidget); this.bindTo('bounds', radiusWidget); var me = this; google.maps.event.addListener(marker, 'dblclick', function () { map.fitBounds(me.get('bounds')) }) } DistanceWidget.prototype = new google.maps.MVCObject(); function RadiusWidget(opt_distance) { var circle = new google.maps.Circle({ strokeWeight: 2, clickable: false }); this.set('distance', opt_distance); this.set('active', false); this.bindTo('bounds', circle); circle.bindTo('center', this); circle.bindTo('zIndex', this); circle.bindTo('map', this); circle.bindTo('strokeColor', this); circle.bindTo('radius', this); this.addSizer_() } RadiusWidget.prototype = new google.maps.MVCObject(); RadiusWidget.prototype.addSizer_ = function () { var sizer = new google.maps.Marker({ draggable: true, title: 'Drag me!', raiseOnDrag: false }); sizer.bindTo('zIndex', this); sizer.bindTo('map', this); sizer.bindTo('icon', this); sizer.bindTo('position', this, 'sizer_position'); var me = this; google.maps.event.addListener(sizer, 'dragstart', function () { me.set('active', true) }); google.maps.event.addListener(sizer, 'drag', function () { me.setDistance_() }); google.maps.event.addListener(sizer, 'dragend', function () { me.set('active', false) }) }; RadiusWidget.prototype.distance_changed = function () { this.set('radius', this.get('distance')) }; RadiusWidget.prototype.minDistance_changed = function () { if (this.get('minDistance') && this.get('distance') < this.get('minDistance')) { this.setDistance_() } }; RadiusWidget.prototype.maxDistance_changed = function () { if (this.get('maxDistance') && this.get('distance') > this.get('maxDistance')) { this.setDistance_() } }; RadiusWidget.prototype.color_changed = function () { this.active_changed() }; RadiusWidget.prototype.activeColor_changed = function () { this.active_changed() }; RadiusWidget.prototype.sizerIcon_changed = function () { this.active_changed() }; RadiusWidget.prototype.activeSizerIcon_changed = function () { this.active_changed() }; RadiusWidget.prototype.center_changed = function () { var sizerPos = this.get('sizer_position'); var position; if (sizerPos) { position = this.getSnappedPosition_(sizerPos) } else { var bounds = this.get('bounds'); if (bounds) { var lng = bounds.getNorthEast().lng(); position = new google.maps.LatLng(this.get('center').lat(), lng) } } if (position) { this.set('sizer_position', position) } }; RadiusWidget.prototype.active_changed = function () { var strokeColor; var icon; if (this.get('active')) { if (this.get('activeColor')) { strokeColor = this.get('activeColor') } if (this.get('activeSizerIcon')) { icon = this.get('activeSizerIcon') } } else { strokeColor = this.get('color'); icon = this.get('sizerIcon') } if (strokeColor) { this.set('strokeColor', strokeColor) } if (icon) { this.set('icon', icon) } }; RadiusWidget.prototype.setDistance_ = function () { var pos = this.get('sizer_position'); var center = this.get('center'); var distance = this.distanceBetweenPoints_(center, pos); if (this.get('maxDistance') && distance > this.get('maxDistance')) { distance = this.get('maxDistance') } if (this.get('minDistance') && distance < this.get('minDistance')) { distance = this.get('minDistance') } this.set('distance', distance); var newPos = this.getSnappedPosition_(pos); this.set('sizer_position', newPos) }; RadiusWidget.prototype.getSnappedPosition_ = function (pos) { var bounds = this.get('bounds'); var center = this.get('center'); var left = new google.maps.LatLng(center.lat(), bounds.getSouthWest().lng()); var right = new google.maps.LatLng(center.lat(), bounds.getNorthEast().lng()); var leftDist = this.distanceBetweenPoints_(pos, left); var rightDist = this.distanceBetweenPoints_(pos, right); if (leftDist < rightDist) { return left } else { return right } }; RadiusWidget.prototype.distanceBetweenPoints_ = function (p1, p2) { if (!p1 || !p2) { return 0 } var R = 6371000; var dLat = (p2.lat() - p1.lat()) * Math.PI / 180; var dLon = (p2.lng() - p1.lng()) * Math.PI / 180; var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(p1.lat() * Math.PI / 180) * Math.cos(p2.lat() * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2); var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)); var d = R * c; return d };