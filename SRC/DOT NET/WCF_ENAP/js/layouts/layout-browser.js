function showContent(a, b) { var c = Ext.getCmp("content-panel"); c.setLoading(true); Ext.defer(function () { if (!c.getComponent("panel-" + a)) { Ext.application({ name: "WCF_ENAP", stores: b, launch: function () { Ext.QuickTips.init(); var b = Ext.create("WCF_ENAP.view." + a, { listeners: { render: function () { if (!(b.getXTypes().indexOf("/window") != -1)) { c.layout.setActiveItem("panel-" + a) } } } }); c.add(b); b.show() } }) } else { c.layout.setActiveItem("panel-" + a); Ext.getCmp("panel-" + a).show() } c.setLoading(false) }, 10, this) } function findChildRecursively(a, b, c) { var d = a.childNodes, e = d.length, f, g = null; for (f = 0; f < e; f++) { var h = d[f]; if (c == h.get(b)) { return g = h } else { if (g = findChildRecursively(h, b, c)) { return g } } } return g } Ext.Loader.setConfig({ enabled: true }); Ext.Loader.setPath("Ext.ux", "ux"); var storeTreeStore; Ext.onReady(function () { Ext.tip.QuickTipManager.init(); Ext.define("Node", { extend: "Ext.data.Model", idProperty: "ID_NODE", fields: [{ name: "ID_NODO", type: "int", useNull: true }, { name: "text", type: "string", mapping: "NOMBRE_MODULO" }, { name: "ID_COMPONENTE", type: "string" }, { name: "iconCls", type: "string", mapping: "ICONCLS" }, { name: "TIPO_NODO", type: "int" }, { name: "TIPO_DISPLAY", type: "int" }, { name: "NODO_PADRE", type: "int" }, { name: "N_ORDER", type: "int" }, { name: "stores", mapping: "STORE_LIST_TEXT" }, { name: "iswin", type: "bool" }, { name: "id", type: "string", mapping: "ID_COMPONENTE"}] }); storeTreeStore = Ext.create("Ext.data.TreeStore", { root: { expanded: true, nodeType: "async" }, model: "Node", autoLoad: true, proxy: { type: "ajax", url: "/TreeData/"} }); Ext.create("Ext.Viewport", { layout: "border", title: "ENAP S.G.S.S.O.", id: "viewPortPanel", items: [{ xtype: "box", id: "header", region: "north", html: "<h1> ENAP S.G.S.S.O.</h1>", height: 30 }, { layout: "border", id: "layout-browser", region: "west", border: false, split: true, margins: "2 0 5 5", width: 275, minSize: 100, collapsible: true, title: "Navegación", defaults: { margin: "2 0 0 0" }, items: [{ xtype: "treepanel", id: "tree-panel", title: "Menu", region: "north", split: true, height: 360, minSize: 150, rootVisible: false, autoScroll: true, store: storeTreeStore, listeners: { load: function (a, b, c, d, e) { var f = window.location.hash.substr(2).toString(); if (f) { var g = findChildRecursively(Ext.getCmp("tree-panel").getRootNode(), "id", f); if (g) { showContent(f, g.get("stores")) } } }, select: function (a, b) { switch (b.get("TIPO_NODO")) { case 1: break; case 2: var c = b.get("id"); if (b.get("TIPO_DISPLAY") == 3) { Ext.Ajax.request({ url: "/LoginUser/", method: "GET", headers: { "Content-Type": "application/json" }, success: function (a) { var b = Ext.JSON.decode(a.responseText); if (b.success) { window.location = "/" } else { Ext.Msg.alert("Error en Conexión", "Ups, no se pudo conectar con el servidor.") } } }) } else { window.location.hash = "!" + c; showContent(c, b.get("stores")) } break; case 3: break } } } }, { id: "details-panel", title: "Descripción", region: "center", bodyStyle: "padding-bottom:15px;background:#eee;", autoScroll: true, html: '<p class="details-info">Descripción del módulo seleccionado.</p>'}] }, { id: "content-panel", stateId: "content-panel", region: "center", layout: "card", margins: "2 5 5 0", border: 0, autoScroll: true, activeItem: 0, border: false, items: [{ id: "start-panel", title: "Start Page", layout: "fit", bodyStyle: "padding:25px", contentEl: "start-div"}]}], renderTo: Ext.getBody() }) })